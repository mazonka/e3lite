password = hello_world4
maxinline = 0

@circuitDB = tfhe
@sizes = 8

Pilx : bridge
{
	encryption = pil
	module = bridge.pilx # add Pil cross functions
	lambda = 5
}

Pilc : circuit
{
	postfix = Eu
	encryption = @Pilx # pilc
#	encryption = pil # pilc
#	lambda = 50
}

Pilm : ring
{
	postfix = Em
#	encryption = pil # pila
	encryption = @Pilx # pila
#	lambda = 50
}

Pilcd : circuit
{
	postfix = Eud
	encryption = pil # pilc
	lambda = 5
}

Pilmd : ring
{
	postfix = Emd
	encryption = pil # pila
	lambda = 5
}

#!
Heli : circuit
{
	postfix = Eh
	encryption = heli
}
!#

SecureTfhe : circuit
{
    encryption = tfhe # encryption library/scheme
    postfix = Ep # for encrypted constants >= 0
    postneg = En # for encrypted constants < 0
    sizes = 8,16 # plaintext bit-size
}

SealRing : ring
{
    encryption = seal
	scheme = bfv
    encoder = integer
    logn = 13 # degree of the polynomial n = 2^13
    t = 65537 # plaintext modulus
    postfix = Ea # for encrypted constants [0, t-1]
}
