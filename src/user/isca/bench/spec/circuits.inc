// Copyright 2022 MoMA Lab, NYU Abu Dhabi (wp.nyu.edu/momalab/)
template<class Bit> Bit gate_mux
(const Bit & a, const Bit & b, const Bit & c) noexcept
{
    return Bit::gate_mux(c,b,a);
}

template<class T, class Bit> void bsort_round
(T & current_out, T & next_out, const T & current_in, const T & next_in) noexcept
{
  auto n64 = Bit::gate_not(current_in[4]);
  auto n67 = Bit::gate_and(n64, next_in[4]);
  auto n53 = Bit::gate_not(current_in[1]);
  auto n55 = Bit::gate_nor(n53, next_in[1]);
  auto n72 = Bit::gate_not(next_in[6]);
  auto n73 = Bit::gate_and(current_in[6], n72);
  auto n85 = Bit::gate_not(next_in[7]);
  auto n78 = Bit::gate_and(current_in[7], n85);
  auto n74 = Bit::gate_nor(n73, n78);
  auto n84 = Bit::gate_not(current_in[7]);
  auto n76 = Bit::gate_and(next_in[7], n84);
  auto n79 = Bit::gate_nor(n78, current_in[6]);
  auto n80 = Bit::gate_and(next_in[6], n79);
  current_out[7] = Bit::gate_and(next_in[7], current_in[7]);
  auto n48 = Bit::gate_nand(next_in[1], n53);
  next_out[7] = Bit::gate_nand(n85, n84);
  auto n50 = Bit::gate_or(n64, next_in[4]);
  auto n54 = Bit::gate_and(current_in[0], n48);
  auto n56 = Bit::gate_nor(n55, n54);
  auto n59 = Bit::gate_and(n56, next_in[2]);
  auto n57 = Bit::gate_nor(n56, next_in[2]);
  auto n58 = Bit::gate_nor(current_in[2], n57);
  auto n60 = Bit::gate_nor(n59, n58);
  auto n63 = Bit::gate_and(current_in[3], n60);
  auto n61 = Bit::gate_nor(current_in[3], n60);
  auto n62 = Bit::gate_nor(next_in[3], n61);
  auto n65 = Bit::gate_nor(n63, n62);
  auto n66 = Bit::gate_and(n65, n50);
  auto n68 = Bit::gate_nor(n67, n66);
  auto n71 = Bit::gate_and(current_in[5], n68);
  auto n69 = Bit::gate_nor(current_in[5], n68);
  auto n70 = Bit::gate_nor(next_in[5], n69);
  auto n75 = Bit::gate_nor(n71, n70);
  auto n77 = Bit::gate_and(n75, n74);
  auto n81 = Bit::gate_nor(n77, n76);
  auto n87 = Bit::gate_not(n81);
  auto n88 = Bit::gate_nor(n87, n80);
  auto n86 = Bit::gate_not(n88);
  next_out[0] = gate_mux(current_in[0], next_in[0], n86);
  next_out[1] = gate_mux(current_in[1], next_in[1], n86);
  next_out[2] = gate_mux(current_in[2], next_in[2], n86);
  next_out[3] = gate_mux(current_in[3], next_in[3], n86);
  next_out[4] = gate_mux(current_in[4], next_in[4], n86);
  next_out[5] = gate_mux(current_in[5], next_in[5], n86);
  auto n83 = Bit::gate_and(next_in[6], n86);
  auto n82 = Bit::gate_and(n81, current_in[6]);
  current_out[0] = gate_mux(next_in[0], current_in[0], n86);
  current_out[1] = gate_mux(next_in[1], current_in[1], n86);
  current_out[2] = gate_mux(next_in[2], current_in[2], n86);
  current_out[3] = gate_mux(next_in[3], current_in[3], n86);
  current_out[4] = gate_mux(next_in[4], current_in[4], n86);
  current_out[5] = gate_mux(next_in[5], current_in[5], n86);
  auto n90 = Bit::gate_and(current_in[6], n87);
  auto n89 = Bit::gate_and(n88, next_in[6]);
  current_out[6] = Bit::gate_or(n90, n89);
  next_out[6] = Bit::gate_or(n83, n82);
}
template<class T, class Bit> void fact_round
(T & res_out, T & i_out, T & fact_out, const T & n, const T & res_in, const T & i_in, const T & fact_in) noexcept
{
  fact_out[0] = Bit::gate_and(i_in[0], fact_in[0]);
  auto n19 = Bit::gate_xnor(i_in[5], n[5]);
  auto n18 = Bit::gate_xnor(i_in[4], n[4]);
  auto n23 = Bit::gate_and(n19, n18);
  auto n21 = Bit::gate_xnor(i_in[6], n[6]);
  auto n20 = Bit::gate_xnor(i_in[1], n[1]);
  auto n22 = Bit::gate_and(n21, n20);
  auto n31 = Bit::gate_and(n23, n22);
  auto n25 = Bit::gate_xnor(i_in[2], n[2]);
  auto n24 = Bit::gate_xnor(i_in[0], n[0]);
  auto n29 = Bit::gate_and(n25, n24);
  auto n27 = Bit::gate_xnor(i_in[7], n[7]);
  auto n26 = Bit::gate_xnor(i_in[3], n[3]);
  auto n28 = Bit::gate_and(n27, n26);
  auto n30 = Bit::gate_and(n29, n28);
  auto n197 = Bit::gate_and(n31, n30);
  auto n32 = Bit::gate_and(n197, fact_out[0]);
  res_out[0] = Bit::gate_xor(n32, res_in[0]);
  auto n34 = Bit::gate_and(i_in[0], fact_in[1]);
  auto n33 = Bit::gate_and(i_in[1], fact_in[0]);
  fact_out[1] = Bit::gate_xor(n34, n33);
  auto n35 = Bit::gate_and(n197, fact_out[1]);
  auto n37 = Bit::gate_xor(n35, res_in[1]);
  auto n36 = Bit::gate_and(n32, res_in[0]);
  res_out[1] = Bit::gate_xor(n37, n36);
  auto n41 = Bit::gate_and(i_in[0], fact_in[2]);
  auto n61 = Bit::gate_and(i_in[1], fact_in[1]);
  auto n62 = Bit::gate_and(i_in[2], fact_in[0]);
  auto n40 = Bit::gate_xnor(n61, n62);
  auto n44 = Bit::gate_xnor(n41, n40);
  auto n43 = Bit::gate_and(n34, n33);
  fact_out[2] = Bit::gate_xor(n44, n43);
  auto n39 = Bit::gate_and(n35, res_in[1]);
  auto n38 = Bit::gate_and(n37, n36);
  auto n52 = Bit::gate_nor(n39, n38);
  auto n50 = Bit::gate_and(n197, fact_out[2]);
  auto n51 = Bit::gate_xnor(n50, res_in[2]);
  res_out[2] = Bit::gate_xor(n52, n51);
  auto n42 = Bit::gate_not(n40);
  auto n46 = Bit::gate_and(n42, n41);
  auto n45 = Bit::gate_and(n44, n43);
  auto n58 = Bit::gate_nor(n46, n45);
  auto n48 = Bit::gate_and(fact_in[0], i_in[3]);
  auto n64 = Bit::gate_and(i_in[0], fact_in[3]);
  auto n63 = Bit::gate_and(i_in[1], fact_in[2]);
  auto n55 = Bit::gate_xnor(n64, n63);
  auto n54 = Bit::gate_and(n50, res_in[2]);
  auto n53 = Bit::gate_nor(n52, n51);
  auto n67 = Bit::gate_nor(n54, n53);
  auto n90 = Bit::gate_and(i_in[2], fact_in[2]);
  auto n86 = Bit::gate_and(i_in[4], fact_in[0]);
  auto n87 = Bit::gate_and(i_in[3], fact_in[1]);
  auto n88 = Bit::gate_xnor(n86, n87);
  auto n72 = Bit::gate_xnor(n90, n88);
  auto n78 = Bit::gate_and(n64, n63);
  auto n116 = Bit::gate_and(i_in[0], fact_in[4]);
  auto n115 = Bit::gate_and(i_in[1], fact_in[3]);
  auto n79 = Bit::gate_xor(n116, n115);
  auto n81 = Bit::gate_xor(n78, n79);
  auto n83 = Bit::gate_and(n79, n78);
  auto n84 = Bit::gate_and(i_in[1], n116);
  auto n206 = Bit::gate_not(i_in[2]);
  auto n85 = Bit::gate_xnor(n84, n206);
  auto n119 = Bit::gate_and(fact_in[3], n85);
  auto n114 = Bit::gate_and(i_in[0], fact_in[5]);
  auto n113 = Bit::gate_and(i_in[1], fact_in[4]);
  auto n118 = Bit::gate_xnor(n114, n113);
  auto n109 = Bit::gate_xnor(n119, n118);
  auto n92 = Bit::gate_and(n87, n86);
  auto n89 = Bit::gate_not(n88);
  auto n91 = Bit::gate_and(n90, n89);
  auto n106 = Bit::gate_nor(n92, n91);
  auto n126 = Bit::gate_and(i_in[3], fact_in[2]);
  auto n124 = Bit::gate_and(i_in[4], fact_in[1]);
  auto n123 = Bit::gate_and(i_in[5], fact_in[0]);
  auto n125 = Bit::gate_xor(n124, n123);
  auto n107 = Bit::gate_xnor(n126, n125);
  auto n108 = Bit::gate_xnor(n106, n107);
  auto n100 = Bit::gate_xnor(n109, n108);
  auto n112 = Bit::gate_nor(n107, n106);
  auto n110 = Bit::gate_not(n108);
  auto n111 = Bit::gate_and(n110, n109);
  auto n165 = Bit::gate_nor(n112, n111);
  auto n154 = Bit::gate_and(i_in[2], fact_in[4]);
  auto n155 = Bit::gate_and(i_in[5], fact_in[1]);
  auto n156 = Bit::gate_and(i_in[6], fact_in[0]);
  auto n152 = Bit::gate_xnor(n155, n156);
  auto n169 = Bit::gate_xnor(n154, n152);
  auto n148 = Bit::gate_and(n114, n113);
  auto n147 = Bit::gate_and(i_in[3], fact_in[3]);
  auto n146 = Bit::gate_and(i_in[4], fact_in[2]);
  auto n149 = Bit::gate_xor(n147, n146);
  auto n168 = Bit::gate_xnor(n148, n149);
  auto n167 = Bit::gate_xnor(n169, n168);
  auto n183 = Bit::gate_xnor(n165, n167);
  auto n117 = Bit::gate_and(n116, n115);
  auto n122 = Bit::gate_and(i_in[2], n117);
  auto n120 = Bit::gate_not(n118);
  auto n121 = Bit::gate_and(n120, n119);
  auto n187 = Bit::gate_nor(n122, n121);
  auto n128 = Bit::gate_and(n124, n123);
  auto n127 = Bit::gate_and(n126, n125);
  auto n189 = Bit::gate_nor(n128, n127);
  auto n138 = Bit::gate_and(i_in[1], fact_in[5]);
  auto n139 = Bit::gate_and(i_in[0], fact_in[6]);
  auto n190 = Bit::gate_xnor(n138, n139);
  auto n188 = Bit::gate_xnor(n189, n190);
  auto n182 = Bit::gate_xnor(n187, n188);
  auto n181 = Bit::gate_xnor(n183, n182);
  auto n135 = Bit::gate_and(i_in[3], fact_in[4]);
  auto n134 = Bit::gate_and(fact_in[1], i_in[6]);
  auto n164 = Bit::gate_xnor(n135, n134);
  auto n137 = Bit::gate_and(i_in[4], fact_in[3]);
  auto n136 = Bit::gate_and(fact_in[0], i_in[7]);
  auto n145 = Bit::gate_xnor(n137, n136);
  auto n143 = Bit::gate_and(n139, n138);
  auto n141 = Bit::gate_and(i_in[5], fact_in[2]);
  auto n140 = Bit::gate_and(fact_in[7], i_in[0]);
  auto n142 = Bit::gate_xnor(n141, n140);
  auto n144 = Bit::gate_xnor(n143, n142);
  auto n162 = Bit::gate_xnor(n145, n144);
  auto n151 = Bit::gate_and(n147, n146);
  auto n150 = Bit::gate_and(n149, n148);
  auto n160 = Bit::gate_nor(n151, n150);
  auto n153 = Bit::gate_not(n152);
  auto n158 = Bit::gate_and(n154, n153);
  auto n157 = Bit::gate_and(n156, n155);
  auto n159 = Bit::gate_nor(n158, n157);
  auto n161 = Bit::gate_xnor(n160, n159);
  auto n163 = Bit::gate_xnor(n162, n161);
  auto n178 = Bit::gate_xnor(n164, n163);
  auto n166 = Bit::gate_not(n165);
  auto n172 = Bit::gate_and(n167, n166);
  auto n170 = Bit::gate_not(n168);
  auto n171 = Bit::gate_and(n170, n169);
  auto n176 = Bit::gate_nor(n172, n171);
  auto n174 = Bit::gate_and(fact_in[5], i_in[2]);
  auto n173 = Bit::gate_and(fact_in[6], i_in[1]);
  auto n175 = Bit::gate_xor(n174, n173);
  auto n177 = Bit::gate_xnor(n176, n175);
  auto n196 = Bit::gate_xnor(n178, n177);
  auto n184 = Bit::gate_not(n182);
  auto n185 = Bit::gate_and(n184, n183);
  auto n192 = Bit::gate_nor(n188, n187);
  auto n191 = Bit::gate_nor(n190, n189);
  auto n193 = Bit::gate_nor(n192, n191);
  i_out[0] = Bit::gate_not(i_in[0]);
  i_out[1] = Bit::gate_xnor(i_in[1], i_out[0]);
  auto n207 = Bit::gate_and(i_in[1], i_in[0]);
  i_out[2] = Bit::gate_xnor(n207, n206);
  auto n208 = Bit::gate_and(i_in[2], n207);
  i_out[3] = Bit::gate_xor(n208, i_in[3]);
  auto n209 = Bit::gate_and(i_in[3], n208);
  i_out[4] = Bit::gate_xor(n209, i_in[4]);
  auto n210 = Bit::gate_and(i_in[4], n209);
  i_out[5] = Bit::gate_xor(n210, i_in[5]);
  auto n211 = Bit::gate_and(i_in[5], n210);
  i_out[6] = Bit::gate_xor(n211, i_in[6]);
  auto n212 = Bit::gate_and(i_in[6], n211);
  i_out[7] = Bit::gate_xor(n212, i_in[7]);
  auto n16 = Bit::gate_or(n61, n87);
  auto n17 = Bit::gate_nand(n61, n62);
  auto n47 = Bit::gate_and(fact_in[1], n17);
  auto n49 = Bit::gate_and(n47, i_in[2]);
  auto n56 = Bit::gate_xnor(n49, n48);
  auto n57 = Bit::gate_xnor(n56, n55);
  fact_out[3] = Bit::gate_xor(n58, n57);
  auto n65 = Bit::gate_and(n197, fact_out[3]);
  auto n66 = Bit::gate_xnor(n65, res_in[3]);
  res_out[3] = Bit::gate_xor(n67, n66);
  auto n60 = Bit::gate_nor(n56, n55);
  auto n59 = Bit::gate_nor(n58, n57);
  auto n73 = Bit::gate_nor(n60, n59);
  auto n80 = Bit::gate_and(n62, n16);
  auto n70 = Bit::gate_xnor(n80, n81);
  auto n75 = Bit::gate_xnor(n72, n70);
  fact_out[4] = Bit::gate_xnor(n73, n75);
  auto n69 = Bit::gate_and(n65, res_in[3]);
  auto n68 = Bit::gate_nor(n67, n66);
  auto n95 = Bit::gate_nor(n69, n68);
  auto n93 = Bit::gate_and(n197, fact_out[4]);
  auto n94 = Bit::gate_xnor(n93, res_in[4]);
  res_out[4] = Bit::gate_xor(n95, n94);
  auto n71 = Bit::gate_not(n70);
  auto n77 = Bit::gate_and(n72, n71);
  auto n74 = Bit::gate_not(n73);
  auto n76 = Bit::gate_and(n75, n74);
  auto n101 = Bit::gate_nor(n77, n76);
  auto n82 = Bit::gate_and(n81, n80);
  auto n98 = Bit::gate_nor(n83, n82);
  auto n103 = Bit::gate_xnor(n98, n100);
  fact_out[5] = Bit::gate_xnor(n101, n103);
  auto n97 = Bit::gate_and(n93, res_in[4]);
  auto n96 = Bit::gate_nor(n95, n94);
  auto n131 = Bit::gate_nor(n97, n96);
  auto n129 = Bit::gate_and(n197, fact_out[5]);
  auto n130 = Bit::gate_xnor(n129, res_in[5]);
  res_out[5] = Bit::gate_xor(n131, n130);
  auto n99 = Bit::gate_not(n98);
  auto n105 = Bit::gate_and(n100, n99);
  auto n102 = Bit::gate_not(n101);
  auto n104 = Bit::gate_and(n103, n102);
  auto n179 = Bit::gate_nor(n105, n104);
  fact_out[6] = Bit::gate_xnor(n179, n181);
  auto n133 = Bit::gate_and(n129, res_in[5]);
  auto n132 = Bit::gate_nor(n131, n130);
  auto n200 = Bit::gate_nor(n133, n132);
  auto n198 = Bit::gate_and(n197, fact_out[6]);
  auto n199 = Bit::gate_xnor(n198, res_in[6]);
  res_out[6] = Bit::gate_xor(n200, n199);
  auto n180 = Bit::gate_not(n179);
  auto n186 = Bit::gate_and(n181, n180);
  auto n194 = Bit::gate_nor(n186, n185);
  auto n195 = Bit::gate_xor(n194, n193);
  fact_out[7] = Bit::gate_xnor(n196, n195);
  auto n204 = Bit::gate_and(n197, fact_out[7]);
  auto n202 = Bit::gate_and(n198, res_in[6]);
  auto n201 = Bit::gate_nor(n200, n199);
  auto n203 = Bit::gate_nor(n202, n201);
  auto n205 = Bit::gate_xor(n204, n203);
  res_out[7] = Bit::gate_xnor(res_in[7], n205);
}
template<class T, class Bit> void fib_round
(T & res_out, T & i_out, T & fi_out, T & f1_out, const T & n, const T & res_in, const T & i_in, const T & fi_in, const T & f1_in) noexcept
{
  f1_out[7] = Bit::gate_buf(fi_in[7]);
  f1_out[6] = Bit::gate_buf(fi_in[6]);
  f1_out[5] = Bit::gate_buf(fi_in[5]);
  f1_out[4] = Bit::gate_buf(fi_in[4]);
  f1_out[3] = Bit::gate_buf(fi_in[3]);
  f1_out[2] = Bit::gate_buf(fi_in[2]);
  f1_out[1] = Bit::gate_buf(fi_in[1]);
  f1_out[0] = Bit::gate_buf(fi_in[0]);
  fi_out[0] = Bit::gate_xor(f1_in[0], f1_out[0]);
  auto n18 = Bit::gate_xor(f1_in[1], f1_out[1]);
  auto n17 = Bit::gate_and(f1_out[0], f1_in[0]);
  fi_out[1] = Bit::gate_xor(n18, n17);
  auto n20 = Bit::gate_and(f1_out[1], f1_in[1]);
  auto n19 = Bit::gate_and(n18, n17);
  auto n22 = Bit::gate_nor(n20, n19);
  auto n21 = Bit::gate_xnor(f1_out[2], f1_in[2]);
  fi_out[2] = Bit::gate_xor(n22, n21);
  auto n24 = Bit::gate_and(f1_out[2], f1_in[2]);
  auto n23 = Bit::gate_nor(n22, n21);
  auto n26 = Bit::gate_nor(n24, n23);
  auto n25 = Bit::gate_xnor(f1_out[3], f1_in[3]);
  fi_out[3] = Bit::gate_xor(n26, n25);
  auto n28 = Bit::gate_and(f1_out[3], f1_in[3]);
  auto n27 = Bit::gate_nor(n26, n25);
  auto n30 = Bit::gate_nor(n28, n27);
  auto n29 = Bit::gate_xnor(f1_out[4], f1_in[4]);
  fi_out[4] = Bit::gate_xor(n30, n29);
  auto n32 = Bit::gate_and(f1_out[4], f1_in[4]);
  auto n31 = Bit::gate_nor(n30, n29);
  auto n34 = Bit::gate_nor(n32, n31);
  auto n33 = Bit::gate_xnor(f1_out[5], f1_in[5]);
  fi_out[5] = Bit::gate_xor(n34, n33);
  auto n36 = Bit::gate_and(f1_out[5], f1_in[5]);
  auto n35 = Bit::gate_nor(n34, n33);
  auto n38 = Bit::gate_nor(n36, n35);
  auto n37 = Bit::gate_xnor(f1_out[6], f1_in[6]);
  fi_out[6] = Bit::gate_xor(n38, n37);
  auto n40 = Bit::gate_nor(n38, n37);
  auto n39 = Bit::gate_and(f1_out[6], f1_in[6]);
  auto n41 = Bit::gate_nor(n40, n39);
  auto n42 = Bit::gate_xnor(n41, f1_in[7]);
  fi_out[7] = Bit::gate_xor(f1_out[7], n42);
  auto n44 = Bit::gate_xnor(i_in[5], n[5]);
  auto n43 = Bit::gate_xnor(i_in[4], n[4]);
  auto n48 = Bit::gate_and(n44, n43);
  auto n46 = Bit::gate_xnor(i_in[6], n[6]);
  auto n45 = Bit::gate_xnor(i_in[1], n[1]);
  auto n47 = Bit::gate_and(n46, n45);
  auto n56 = Bit::gate_and(n48, n47);
  auto n50 = Bit::gate_xnor(i_in[0], n[0]);
  auto n49 = Bit::gate_xnor(i_in[2], n[2]);
  auto n54 = Bit::gate_and(n50, n49);
  auto n52 = Bit::gate_xnor(i_in[7], n[7]);
  auto n51 = Bit::gate_xnor(i_in[3], n[3]);
  auto n53 = Bit::gate_and(n52, n51);
  auto n55 = Bit::gate_and(n54, n53);
  auto n83 = Bit::gate_and(n56, n55);
  auto n57 = Bit::gate_and(n83, f1_out[0]);
  res_out[0] = Bit::gate_xor(n57, res_in[0]);
  auto n58 = Bit::gate_and(n83, f1_out[1]);
  auto n60 = Bit::gate_xor(n58, res_in[1]);
  auto n59 = Bit::gate_and(n57, res_in[0]);
  res_out[1] = Bit::gate_xor(n60, n59);
  auto n62 = Bit::gate_and(n58, res_in[1]);
  auto n61 = Bit::gate_and(n60, n59);
  auto n65 = Bit::gate_nor(n62, n61);
  auto n63 = Bit::gate_and(n83, f1_out[2]);
  auto n64 = Bit::gate_xnor(n63, res_in[2]);
  res_out[2] = Bit::gate_xor(n65, n64);
  auto n67 = Bit::gate_and(n63, res_in[2]);
  auto n66 = Bit::gate_nor(n65, n64);
  auto n70 = Bit::gate_nor(n67, n66);
  auto n68 = Bit::gate_and(n83, f1_out[3]);
  auto n69 = Bit::gate_xnor(n68, res_in[3]);
  res_out[3] = Bit::gate_xor(n70, n69);
  auto n72 = Bit::gate_and(n68, res_in[3]);
  auto n71 = Bit::gate_nor(n70, n69);
  auto n75 = Bit::gate_nor(n72, n71);
  auto n73 = Bit::gate_and(n83, f1_out[4]);
  auto n74 = Bit::gate_xnor(n73, res_in[4]);
  res_out[4] = Bit::gate_xor(n75, n74);
  auto n77 = Bit::gate_and(n73, res_in[4]);
  auto n76 = Bit::gate_nor(n75, n74);
  auto n80 = Bit::gate_nor(n77, n76);
  auto n78 = Bit::gate_and(n83, f1_out[5]);
  auto n79 = Bit::gate_xnor(n78, res_in[5]);
  res_out[5] = Bit::gate_xor(n80, n79);
  auto n82 = Bit::gate_and(n78, res_in[5]);
  auto n81 = Bit::gate_nor(n80, n79);
  auto n86 = Bit::gate_nor(n82, n81);
  auto n84 = Bit::gate_and(n83, f1_out[6]);
  auto n85 = Bit::gate_xnor(n84, res_in[6]);
  res_out[6] = Bit::gate_xor(n86, n85);
  auto n90 = Bit::gate_and(f1_out[7], n83);
  auto n88 = Bit::gate_and(n84, res_in[6]);
  auto n87 = Bit::gate_nor(n86, n85);
  auto n89 = Bit::gate_nor(n88, n87);
  auto n91 = Bit::gate_xor(n90, n89);
  res_out[7] = Bit::gate_xnor(res_in[7], n91);
  i_out[0] = Bit::gate_not(i_in[0]);
  i_out[1] = Bit::gate_xnor(i_in[1], i_out[0]);
  auto n92 = Bit::gate_and(i_in[1], i_in[0]);
  i_out[2] = Bit::gate_xor(i_in[2], n92);
  auto n93 = Bit::gate_and(i_in[2], n92);
  i_out[3] = Bit::gate_xor(i_in[3], n93);
  auto n94 = Bit::gate_and(i_in[3], n93);
  i_out[4] = Bit::gate_xor(i_in[4], n94);
  auto n95 = Bit::gate_and(i_in[4], n94);
  i_out[5] = Bit::gate_xor(i_in[5], n95);
  auto n96 = Bit::gate_and(i_in[5], n95);
  i_out[6] = Bit::gate_xor(i_in[6], n96);
  auto n97 = Bit::gate_and(i_in[6], n96);
  i_out[7] = Bit::gate_xor(i_in[7], n97);
}
template<class T, class Bit> void isort_round
(T & previous_out, T & current_out, const T & previous_in, const T & current_in) noexcept
{
  auto n82 = Bit::gate_not(previous_in[7]);
  auto n72 = Bit::gate_and(current_in[7], n82);
  auto n84 = Bit::gate_nor(n72, current_in[6]);
  auto n64 = Bit::gate_not(current_in[4]);
  auto n67 = Bit::gate_and(n64, previous_in[4]);
  auto n55 = Bit::gate_and(current_in[0], current_in[1]);
  auto n53 = Bit::gate_nor(current_in[0], current_in[1]);
  auto n54 = Bit::gate_nor(previous_in[1], n53);
  auto n56 = Bit::gate_nor(n55, n54);
  auto n59 = Bit::gate_and(previous_in[2], n56);
  auto n57 = Bit::gate_nor(previous_in[2], n56);
  auto n58 = Bit::gate_nor(current_in[2], n57);
  auto n60 = Bit::gate_nor(n59, n58);
  auto n63 = Bit::gate_and(current_in[3], n60);
  auto n61 = Bit::gate_nor(current_in[3], n60);
  auto n62 = Bit::gate_nor(previous_in[3], n61);
  auto n65 = Bit::gate_nor(n63, n62);
  auto n85 = Bit::gate_not(previous_in[6]);
  auto n73 = Bit::gate_and(current_in[6], n85);
  auto n74 = Bit::gate_nor(n73, n72);
  auto n81 = Bit::gate_not(current_in[7]);
  auto n76 = Bit::gate_and(previous_in[7], n81);
  auto n87 = Bit::gate_nor(n85, n84);
  previous_out[7] = Bit::gate_and(previous_in[7], current_in[7]);
  auto n49 = Bit::gate_or(n64, previous_in[4]);
  current_out[7] = Bit::gate_nand(n82, n81);
  auto n51 = Bit::gate_nand(previous_in[6], n84);
  auto n66 = Bit::gate_and(n65, n49);
  auto n68 = Bit::gate_nor(n67, n66);
  auto n71 = Bit::gate_and(current_in[5], n68);
  auto n69 = Bit::gate_nor(current_in[5], n68);
  auto n70 = Bit::gate_nor(previous_in[5], n69);
  auto n75 = Bit::gate_nor(n71, n70);
  auto n77 = Bit::gate_and(n75, n74);
  auto n86 = Bit::gate_nor(n77, n76);
  auto n83 = Bit::gate_and(n51, n86);
  current_out[0] = gate_mux(previous_in[0], current_in[0], n83);
  current_out[1] = gate_mux(previous_in[1], current_in[1], n83);
  current_out[2] = gate_mux(previous_in[2], current_in[2], n83);
  current_out[3] = gate_mux(previous_in[3], current_in[3], n83);
  current_out[4] = gate_mux(previous_in[4], current_in[4], n83);
  current_out[5] = gate_mux(previous_in[5], current_in[5], n83);
  auto n78 = Bit::gate_not(n83);
  auto n80 = Bit::gate_and(previous_in[6], n78);
  auto n79 = Bit::gate_and(n86, current_in[6]);
  previous_out[0] = gate_mux(current_in[0], previous_in[0], n83);
  previous_out[1] = gate_mux(current_in[1], previous_in[1], n83);
  previous_out[2] = gate_mux(current_in[2], previous_in[2], n83);
  previous_out[3] = gate_mux(current_in[3], previous_in[3], n83);
  previous_out[4] = gate_mux(current_in[4], previous_in[4], n83);
  previous_out[5] = gate_mux(current_in[5], previous_in[5], n83);
  previous_out[6] = gate_mux(current_in[6], n87, n86);
  current_out[6] = Bit::gate_or(n80, n79);
}
template<class T, class Bit> void jen_end
(T & hash_out, const T & hash_in, const T & n3, const T & n11, const T & n15) noexcept
{
  auto n106 = Bit::gate_nor(n3[5], n3[3]);
  auto n105 = Bit::gate_nor(n3[4], n3[6]);
  auto n108 = Bit::gate_and(n106, n105);
  auto n107 = Bit::gate_not(n3[7]);
  auto n136 = Bit::gate_and(n108, n107);
  auto n109 = Bit::gate_not(n3[2]);
  auto n166 = Bit::gate_and(n136, n109);
  auto n137 = Bit::gate_not(n3[0]);
  auto n110 = Bit::gate_and(n166, n137);
  auto n116 = Bit::gate_not(n3[1]);
  auto n138 = Bit::gate_and(hash_in[0], n116);
  auto n112 = Bit::gate_nor(n11[5], n11[3]);
  auto n111 = Bit::gate_nor(n11[4], n11[6]);
  auto n114 = Bit::gate_and(n112, n111);
  auto n113 = Bit::gate_not(n11[7]);
  auto n181 = Bit::gate_and(n114, n113);
  auto n115 = Bit::gate_not(n11[2]);
  auto n284 = Bit::gate_and(n181, n115);
  auto n119 = Bit::gate_and(hash_in[1], n116);
  auto n151 = gate_mux(n119, n138, n3[0]);
  auto n118 = Bit::gate_and(n166, n151);
  auto n117 = Bit::gate_xnor(n118, hash_in[1]);
  auto n122 = Bit::gate_and(hash_in[1], n118);
  auto n126 = gate_mux(hash_in[2], hash_in[0], n3[1]);
  auto n160 = gate_mux(n126, n119, n3[0]);
  auto n120 = Bit::gate_and(n166, n160);
  auto n121 = Bit::gate_xnor(n120, hash_in[2]);
  auto n204 = Bit::gate_xnor(n122, n121);
  auto n125 = Bit::gate_and(hash_in[2], n120);
  auto n123 = Bit::gate_not(n121);
  auto n124 = Bit::gate_and(n123, n122);
  auto n131 = Bit::gate_nor(n125, n124);
  auto n134 = gate_mux(hash_in[3], hash_in[1], n3[1]);
  auto n168 = gate_mux(n134, n126, n3[0]);
  auto n129 = Bit::gate_and(n166, n168);
  auto n130 = Bit::gate_xnor(hash_in[3], n129);
  auto n222 = Bit::gate_xor(n131, n130);
  auto n198 = gate_mux(n204, n222, n11[0]);
  auto n133 = Bit::gate_and(hash_in[3], n129);
  auto n132 = Bit::gate_nor(n131, n130);
  auto n144 = Bit::gate_nor(n133, n132);
  auto n149 = gate_mux(hash_in[4], hash_in[2], n3[1]);
  auto n135 = gate_mux(n149, n134, n3[0]);
  auto n141 = Bit::gate_and(n166, n135);
  auto n167 = Bit::gate_and(n3[2], n136);
  auto n139 = Bit::gate_and(n138, n137);
  auto n140 = Bit::gate_and(n167, n139);
  auto n142 = Bit::gate_nor(n141, n140);
  auto n146 = Bit::gate_xnor(hash_in[4], n142);
  auto n232 = Bit::gate_xnor(n144, n146);
  auto n143 = Bit::gate_not(n142);
  auto n148 = Bit::gate_and(hash_in[4], n143);
  auto n145 = Bit::gate_not(n144);
  auto n147 = Bit::gate_and(n146, n145);
  auto n154 = Bit::gate_nor(n148, n147);
  auto n158 = gate_mux(hash_in[5], hash_in[3], n3[1]);
  auto n150 = gate_mux(n158, n149, n3[0]);
  auto n153 = Bit::gate_and(n166, n150);
  auto n152 = Bit::gate_and(n167, n151);
  auto n163 = gate_mux(hash_in[6], hash_in[4], n3[1]);
  auto n159 = gate_mux(n163, n158, n3[0]);
  auto n162 = Bit::gate_and(n166, n159);
  auto n161 = Bit::gate_and(n160, n167);
  auto n172 = Bit::gate_nor(n162, n161);
  auto n176 = Bit::gate_xnor(hash_in[6], n172);
  auto n164 = gate_mux(hash_in[7], hash_in[5], n3[1]);
  auto n165 = gate_mux(n164, n163, n3[0]);
  auto n170 = Bit::gate_and(n166, n165);
  auto n169 = Bit::gate_and(n168, n167);
  auto n171 = Bit::gate_nor(n170, n169);
  auto n180 = Bit::gate_xnor(hash_in[7], n171);
  auto n173 = Bit::gate_not(n172);
  auto n178 = Bit::gate_and(hash_in[6], n173);
  auto n218 = Bit::gate_and(n11[2], n181);
  auto n187 = Bit::gate_nor(n15[5], n15[3]);
  auto n186 = Bit::gate_nor(n15[4], n15[6]);
  auto n189 = Bit::gate_and(n187, n186);
  auto n188 = Bit::gate_not(n15[7]);
  auto n239 = Bit::gate_and(n189, n188);
  auto n190 = Bit::gate_not(n15[2]);
  auto n288 = Bit::gate_and(n239, n190);
  auto n237 = Bit::gate_not(n15[0]);
  auto n298 = Bit::gate_and(n288, n237);
  auto n295 = Bit::gate_not(n15[1]);
  auto n285 = Bit::gate_not(n11[0]);
  auto n214 = gate_mux(n222, n232, n11[0]);
  auto n283 = Bit::gate_not(n11[1]);
  auto n292 = Bit::gate_and(n239, n15[2]);
  auto n286 = Bit::gate_and(n284, n283);
  auto n290 = Bit::gate_and(n15[0], n288);
  auto n97 = Bit::gate_nand(n286, n285);
  auto n100 = Bit::gate_nand(n110, n138);
  auto n101 = Bit::gate_nand(n100, n117);
  auto n102 = Bit::gate_or(n153, n152);
  auto n185 = Bit::gate_and(hash_in[0], n100);
  auto n127 = gate_mux(n185, n101, n11[0]);
  auto n128 = gate_mux(n127, n198, n11[1]);
  auto n183 = Bit::gate_and(n284, n128);
  auto n155 = Bit::gate_xnor(hash_in[5], n102);
  auto n251 = Bit::gate_xor(n154, n155);
  auto n197 = gate_mux(n232, n251, n11[0]);
  auto n157 = Bit::gate_and(hash_in[5], n102);
  auto n156 = Bit::gate_nor(n155, n154);
  auto n174 = Bit::gate_nor(n157, n156);
  auto n267 = Bit::gate_xnor(n174, n176);
  auto n175 = Bit::gate_not(n174);
  auto n177 = Bit::gate_and(n176, n175);
  auto n179 = Bit::gate_nor(n178, n177);
  auto n287 = Bit::gate_xnor(n180, n179);
  auto n200 = gate_mux(n267, n287, n11[0]);
  auto n231 = gate_mux(n197, n200, n11[1]);
  auto n182 = Bit::gate_and(n231, n218);
  auto n184 = Bit::gate_nor(n183, n182);
  auto n205 = Bit::gate_xnor(n185, n184);
  auto n238 = Bit::gate_and(n295, n205);
  auto n213 = gate_mux(n251, n267, n11[0]);
  auto n216 = Bit::gate_and(n287, n285);
  auto n250 = gate_mux(n213, n216, n11[1]);
  auto n194 = Bit::gate_and(n250, n218);
  auto n191 = gate_mux(n101, n204, n11[0]);
  auto n192 = gate_mux(n191, n214, n11[1]);
  auto n193 = Bit::gate_and(n284, n192);
  auto n195 = Bit::gate_nor(n194, n193);
  auto n223 = Bit::gate_xnor(n195, n101);
  auto n206 = Bit::gate_and(n223, n295);
  auto n256 = gate_mux(n206, n238, n15[0]);
  auto n207 = Bit::gate_and(n288, n256);
  auto n196 = Bit::gate_xnor(n207, n223);
  auto n199 = gate_mux(n198, n197, n11[1]);
  auto n202 = Bit::gate_and(n284, n199);
  auto n266 = Bit::gate_and(n200, n283);
  auto n201 = Bit::gate_and(n218, n266);
  auto n203 = Bit::gate_nor(n202, n201);
  auto n234 = Bit::gate_xnor(n204, n203);
  auto n224 = gate_mux(n234, n205, n15[1]);
  auto n272 = gate_mux(n224, n206, n15[0]);
  auto n208 = Bit::gate_and(n272, n288);
  auto n210 = Bit::gate_xor(n234, n208);
  auto n209 = Bit::gate_and(n223, n207);
  hash_out[2] = Bit::gate_xor(n210, n209);
  auto n212 = Bit::gate_and(n208, n234);
  auto n211 = Bit::gate_and(n210, n209);
  auto n226 = Bit::gate_nor(n212, n211);
  auto n215 = gate_mux(n214, n213, n11[1]);
  auto n220 = Bit::gate_and(n284, n215);
  auto n217 = Bit::gate_and(n216, n283);
  auto n219 = Bit::gate_and(n218, n217);
  auto n221 = Bit::gate_nor(n220, n219);
  auto n253 = Bit::gate_xnor(n222, n221);
  auto n235 = gate_mux(n253, n223, n15[1]);
  auto n291 = gate_mux(n235, n224, n15[0]);
  auto n225 = Bit::gate_and(n288, n291);
  auto n228 = Bit::gate_xor(n253, n225);
  hash_out[3] = Bit::gate_xnor(n226, n228);
  auto n230 = Bit::gate_and(n225, n253);
  auto n227 = Bit::gate_not(n226);
  auto n229 = Bit::gate_and(n228, n227);
  auto n245 = Bit::gate_nor(n230, n229);
  auto n233 = Bit::gate_and(n231, n284);
  auto n243 = Bit::gate_xnor(n233, n232);
  auto n269 = Bit::gate_not(n243);
  auto n254 = gate_mux(n269, n234, n15[1]);
  auto n236 = gate_mux(n254, n235, n15[0]);
  auto n242 = Bit::gate_and(n288, n236);
  auto n240 = Bit::gate_and(n238, n237);
  auto n241 = Bit::gate_and(n240, n292);
  auto n244 = Bit::gate_nor(n242, n241);
  auto n246 = Bit::gate_xnor(n244, n269);
  hash_out[4] = Bit::gate_xnor(n245, n246);
  auto n249 = Bit::gate_nor(n244, n243);
  auto n247 = Bit::gate_not(n245);
  auto n248 = Bit::gate_and(n247, n246);
  auto n261 = Bit::gate_nor(n249, n248);
  auto n252 = Bit::gate_and(n250, n284);
  auto n297 = Bit::gate_xnor(n252, n251);
  auto n259 = Bit::gate_not(n297);
  auto n270 = gate_mux(n259, n253, n15[1]);
  auto n255 = gate_mux(n270, n254, n15[0]);
  auto n258 = Bit::gate_and(n288, n255);
  auto n257 = Bit::gate_and(n292, n256);
  auto n260 = Bit::gate_nor(n258, n257);
  auto n263 = Bit::gate_xnor(n259, n260);
  hash_out[5] = Bit::gate_xnor(n261, n263);
  auto n265 = Bit::gate_nor(n297, n260);
  auto n262 = Bit::gate_not(n261);
  auto n264 = Bit::gate_and(n263, n262);
  auto n278 = Bit::gate_nor(n265, n264);
  auto n268 = Bit::gate_and(n284, n266);
  auto n277 = Bit::gate_xor(n268, n267);
  auto n289 = gate_mux(n277, n269, n15[1]);
  auto n271 = gate_mux(n289, n270, n15[0]);
  auto n274 = Bit::gate_and(n288, n271);
  auto n273 = Bit::gate_and(n272, n292);
  auto n275 = Bit::gate_nor(n274, n273);
  auto n280 = Bit::gate_xnor(n277, n275);
  hash_out[6] = Bit::gate_xnor(n278, n280);
  auto n276 = Bit::gate_not(n275);
  auto n282 = Bit::gate_and(n277, n276);
  auto n279 = Bit::gate_not(n278);
  auto n281 = Bit::gate_and(n280, n279);
  auto n304 = Bit::gate_nor(n282, n281);
  auto n301 = Bit::gate_and(n97, n287);
  auto n294 = Bit::gate_and(n290, n289);
  auto n293 = Bit::gate_and(n292, n291);
  auto n299 = Bit::gate_nor(n294, n293);
  auto n296 = Bit::gate_and(n299, n295);
  auto n302 = Bit::gate_nor(n301, n296);
  auto n103 = Bit::gate_nand(n15[1], n297);
  auto n104 = Bit::gate_nand(n298, n238);
  hash_out[0] = Bit::gate_and(n205, n104);
  auto n98 = Bit::gate_nand(n103, n298);
  hash_out[1] = Bit::gate_nand(n104, n196);
  auto n300 = Bit::gate_and(n299, n98);
  auto n303 = gate_mux(n302, n301, n300);
  hash_out[7] = Bit::gate_xnor(n304, n303);
}
template<class T, class Bit> void jen_round
(T & hash_out, const T & hash_in, const T & key_value, const T & n10, const T & n6) noexcept
{
  auto n45 = Bit::gate_nor(n10[7], n10[3]);
  auto n44 = Bit::gate_nor(n10[4], n10[5]);
  auto n47 = Bit::gate_and(n45, n44);
  auto n46 = Bit::gate_not(n10[6]);
  auto n65 = Bit::gate_and(n47, n46);
  auto n48 = Bit::gate_not(n10[2]);
  auto n119 = Bit::gate_and(n65, n48);
  auto n57 = Bit::gate_and(key_value[4], hash_in[4]);
  auto n55 = Bit::gate_and(hash_in[3], key_value[3]);
  auto n53 = Bit::gate_and(hash_in[2], key_value[2]);
  auto n51 = Bit::gate_and(hash_in[1], key_value[1]);
  auto n67 = Bit::gate_and(key_value[0], hash_in[0]);
  auto n66 = Bit::gate_xnor(hash_in[1], key_value[1]);
  auto n49 = Bit::gate_not(n66);
  auto n50 = Bit::gate_and(n67, n49);
  auto n63 = Bit::gate_nor(n51, n50);
  auto n62 = Bit::gate_xnor(hash_in[2], key_value[2]);
  auto n52 = Bit::gate_nor(n63, n62);
  auto n61 = Bit::gate_nor(n53, n52);
  auto n60 = Bit::gate_xnor(hash_in[3], key_value[3]);
  auto n54 = Bit::gate_nor(n61, n60);
  auto n58 = Bit::gate_nor(n55, n54);
  auto n59 = Bit::gate_xnor(key_value[4], hash_in[4]);
  auto n56 = Bit::gate_nor(n58, n59);
  auto n90 = Bit::gate_nor(n57, n56);
  auto n89 = Bit::gate_xnor(key_value[5], hash_in[5]);
  auto n138 = Bit::gate_xor(n90, n89);
  auto n147 = Bit::gate_xnor(n59, n58);
  auto n76 = Bit::gate_not(n147);
  auto n110 = gate_mux(n138, n76, n10[0]);
  auto n153 = Bit::gate_xor(n61, n60);
  auto n167 = Bit::gate_xor(n63, n62);
  auto n72 = gate_mux(n153, n167, n10[0]);
  auto n64 = gate_mux(n110, n72, n10[1]);
  auto n69 = Bit::gate_and(n119, n64);
  auto n112 = Bit::gate_and(n10[2], n65);
  auto n181 = Bit::gate_xnor(n67, n66);
  auto n190 = Bit::gate_xor(key_value[0], hash_in[0]);
  auto n71 = gate_mux(n181, n190, n10[0]);
  auto n118 = Bit::gate_not(n10[1]);
  auto n70 = Bit::gate_and(n71, n118);
  auto n68 = Bit::gate_and(n112, n70);
  auto n137 = Bit::gate_nor(n69, n68);
  auto n77 = gate_mux(n167, n181, n10[0]);
  auto n116 = Bit::gate_not(n10[0]);
  auto n179 = Bit::gate_and(n190, n116);
  auto n97 = gate_mux(n77, n179, n10[1]);
  auto n168 = Bit::gate_and(n119, n97);
  auto n180 = Bit::gate_and(n119, n70);
  auto n166 = Bit::gate_and(n181, n180);
  auto n113 = gate_mux(n72, n71, n10[1]);
  auto n154 = Bit::gate_and(n119, n113);
  auto n94 = gate_mux(n76, n153, n10[0]);
  auto n78 = gate_mux(n94, n77, n10[1]);
  auto n81 = Bit::gate_and(n119, n78);
  auto n79 = Bit::gate_and(n179, n118);
  auto n80 = Bit::gate_and(n112, n79);
  auto n145 = Bit::gate_nor(n81, n80);
  auto n104 = Bit::gate_xnor(hash_in[6], key_value[6]);
  auto n92 = Bit::gate_and(key_value[5], hash_in[5]);
  auto n91 = Bit::gate_nor(n90, n89);
  auto n105 = Bit::gate_nor(n92, n91);
  auto n134 = Bit::gate_xnor(n104, n105);
  auto n93 = Bit::gate_not(n134);
  auto n95 = gate_mux(n93, n138, n10[0]);
  auto n96 = gate_mux(n95, n94, n10[1]);
  auto n99 = Bit::gate_and(n119, n96);
  auto n98 = Bit::gate_and(n97, n112);
  auto n132 = Bit::gate_nor(n99, n98);
  auto n107 = Bit::gate_and(hash_in[6], key_value[6]);
  auto n106 = Bit::gate_nor(n105, n104);
  auto n108 = Bit::gate_nor(n107, n106);
  auto n109 = Bit::gate_xor(hash_in[7], n108);
  auto n122 = Bit::gate_xnor(key_value[7], n109);
  auto n111 = Bit::gate_and(n119, n10[1]);
  auto n115 = Bit::gate_and(n111, n110);
  auto n114 = Bit::gate_and(n113, n112);
  auto n120 = Bit::gate_nor(n115, n114);
  auto n117 = Bit::gate_and(n120, n116);
  auto n123 = Bit::gate_nor(n122, n117);
  auto n178 = Bit::gate_and(n119, n118);
  auto n127 = Bit::gate_nor(n6[5], n6[3]);
  auto n126 = Bit::gate_nor(n6[4], n6[6]);
  auto n129 = Bit::gate_and(n127, n126);
  auto n128 = Bit::gate_not(n6[7]);
  auto n159 = Bit::gate_and(n129, n128);
  auto n130 = Bit::gate_not(n6[2]);
  auto n196 = Bit::gate_and(n159, n130);
  auto n160 = Bit::gate_not(n6[1]);
  auto n131 = Bit::gate_and(n196, n160);
  auto n143 = Bit::gate_not(n6[0]);
  auto n140 = Bit::gate_xnor(n138, n137);
  auto n191 = Bit::gate_and(n159, n6[2]);
  auto n161 = Bit::gate_and(n191, n160);
  auto n169 = Bit::gate_xnor(n167, n166);
  auto n183 = Bit::gate_xnor(n169, n168);
  auto n182 = Bit::gate_xnor(n181, n180);
  auto n38 = Bit::gate_nand(n131, n143);
  auto n40 = Bit::gate_nand(n179, n178);
  auto n41 = Bit::gate_or(n167, n166);
  auto n42 = Bit::gate_nand(n40, n182);
  auto n43 = Bit::gate_nand(n10[0], n134);
  auto n152 = Bit::gate_and(n168, n41);
  auto n75 = Bit::gate_nor(n152, n154);
  auto n73 = Bit::gate_and(n152, n154);
  auto n74 = Bit::gate_nor(n153, n73);
  auto n146 = Bit::gate_nor(n75, n74);
  auto n82 = Bit::gate_not(n146);
  auto n85 = Bit::gate_nor(n82, n145);
  auto n83 = Bit::gate_and(n145, n82);
  auto n84 = Bit::gate_nor(n147, n83);
  auto n139 = Bit::gate_nor(n85, n84);
  auto n88 = Bit::gate_and(n137, n139);
  auto n86 = Bit::gate_nor(n137, n139);
  auto n87 = Bit::gate_nor(n138, n86);
  auto n133 = Bit::gate_nor(n88, n87);
  auto n100 = Bit::gate_not(n133);
  auto n103 = Bit::gate_nor(n100, n132);
  auto n101 = Bit::gate_and(n132, n100);
  auto n102 = Bit::gate_nor(n134, n101);
  auto n125 = Bit::gate_nor(n103, n102);
  auto n135 = Bit::gate_xnor(n133, n132);
  auto n141 = Bit::gate_xnor(n135, n134);
  auto n149 = Bit::gate_xnor(n140, n139);
  auto n157 = gate_mux(n149, n141, n6[0]);
  auto n148 = Bit::gate_xnor(n146, n145);
  auto n156 = Bit::gate_xnor(n148, n147);
  auto n171 = gate_mux(n156, n149, n6[0]);
  auto n155 = Bit::gate_xnor(n153, n152);
  auto n170 = Bit::gate_xnor(n155, n154);
  auto n184 = gate_mux(n170, n156, n6[0]);
  auto n158 = gate_mux(n184, n157, n6[1]);
  auto n164 = Bit::gate_and(n196, n158);
  auto n193 = gate_mux(n183, n170, n6[0]);
  auto n172 = gate_mux(n193, n171, n6[1]);
  auto n175 = Bit::gate_and(n196, n172);
  auto n185 = gate_mux(n42, n183, n6[0]);
  auto n186 = gate_mux(n185, n184, n6[1]);
  auto n187 = Bit::gate_and(n196, n186);
  auto n200 = Bit::gate_and(n40, n190);
  auto n194 = gate_mux(n200, n42, n6[0]);
  auto n195 = gate_mux(n194, n193, n6[1]);
  auto n197 = Bit::gate_and(n196, n195);
  auto n39 = Bit::gate_nand(n178, n43);
  auto n121 = Bit::gate_and(n120, n39);
  auto n124 = gate_mux(n123, n122, n121);
  auto n142 = Bit::gate_xnor(n125, n124);
  hash_out[7] = Bit::gate_and(n142, n38);
  auto n150 = gate_mux(n141, n142, n6[0]);
  auto n173 = Bit::gate_and(n150, n160);
  auto n136 = Bit::gate_and(n173, n196);
  hash_out[6] = Bit::gate_xor(n136, n141);
  auto n162 = Bit::gate_and(n143, n142);
  auto n177 = gate_mux(n157, n162, n6[1]);
  auto n144 = Bit::gate_and(n177, n196);
  hash_out[5] = Bit::gate_xor(n144, n149);
  auto n192 = gate_mux(n171, n150, n6[1]);
  auto n151 = Bit::gate_and(n196, n192);
  hash_out[4] = Bit::gate_xor(n151, n156);
  auto n163 = Bit::gate_and(n162, n161);
  auto n165 = Bit::gate_nor(n164, n163);
  hash_out[3] = Bit::gate_xnor(n170, n165);
  auto n174 = Bit::gate_and(n173, n191);
  auto n176 = Bit::gate_nor(n175, n174);
  hash_out[2] = Bit::gate_xnor(n183, n176);
  auto n188 = Bit::gate_and(n191, n177);
  auto n189 = Bit::gate_nor(n188, n187);
  hash_out[1] = Bit::gate_xnor(n189, n42);
  auto n198 = Bit::gate_and(n192, n191);
  auto n199 = Bit::gate_nor(n198, n197);
  hash_out[0] = Bit::gate_xnor(n200, n199);
}
template<class T, class Bit> void matrix_round
(T & c_out, const T & a, const T & b, const T & c_in) noexcept
{
  auto n9 = Bit::gate_and(b[0], a[0]);
  c_out[0] = Bit::gate_xor(n9, c_in[0]);
  auto n18 = Bit::gate_and(b[1], a[0]);
  auto n12 = Bit::gate_xor(n18, c_in[1]);
  auto n13 = Bit::gate_and(n9, c_in[0]);
  auto n10 = Bit::gate_xnor(n12, n13);
  auto n11 = Bit::gate_and(b[0], a[1]);
  c_out[1] = Bit::gate_xnor(n10, n11);
  auto n15 = Bit::gate_and(n12, n11);
  auto n30 = Bit::gate_and(b[2], a[0]);
  auto n16 = Bit::gate_xnor(n30, c_in[2]);
  auto n26 = Bit::gate_and(n18, c_in[1]);
  auto n25 = Bit::gate_and(b[0], a[2]);
  auto n24 = Bit::gate_and(b[1], a[1]);
  auto n27 = Bit::gate_xor(n25, n24);
  auto n21 = Bit::gate_xnor(n26, n27);
  auto n29 = Bit::gate_and(n25, n24);
  auto n28 = Bit::gate_and(n27, n26);
  auto n37 = Bit::gate_nor(n29, n28);
  auto n35 = Bit::gate_and(n30, c_in[2]);
  auto n31 = Bit::gate_xnor(n37, n35);
  auto n48 = Bit::gate_and(b[1], a[2]);
  auto n38 = Bit::gate_xnor(n48, c_in[3]);
  auto n33 = Bit::gate_xor(n31, n38);
  auto n52 = Bit::gate_and(a[3], b[0]);
  auto n51 = Bit::gate_and(b[2], a[1]);
  auto n50 = Bit::gate_and(b[3], a[0]);
  auto n53 = Bit::gate_xor(n51, n50);
  auto n43 = Bit::gate_xnor(n52, n53);
  auto n36 = Bit::gate_not(n35);
  auto n41 = Bit::gate_nor(n36, n37);
  auto n39 = Bit::gate_and(n37, n36);
  auto n40 = Bit::gate_nor(n39, n38);
  auto n47 = Bit::gate_nor(n41, n40);
  auto n80 = Bit::gate_and(b[0], a[4]);
  auto n79 = Bit::gate_and(n48, c_in[3]);
  auto n49 = Bit::gate_xnor(n80, n79);
  auto n70 = Bit::gate_and(a[3], b[1]);
  auto n81 = Bit::gate_xnor(n70, c_in[4]);
  auto n64 = Bit::gate_xnor(n49, n81);
  auto n55 = Bit::gate_and(n51, n50);
  auto n54 = Bit::gate_and(n53, n52);
  auto n65 = Bit::gate_nor(n55, n54);
  auto n57 = Bit::gate_xor(n64, n65);
  auto n76 = Bit::gate_and(a[1], b[3]);
  auto n75 = Bit::gate_and(a[2], b[2]);
  auto n56 = Bit::gate_xnor(n76, n75);
  auto n74 = Bit::gate_and(a[0], b[4]);
  auto n66 = Bit::gate_xnor(n56, n74);
  auto n60 = Bit::gate_xnor(n57, n66);
  auto n69 = Bit::gate_and(n65, n64);
  auto n67 = Bit::gate_nor(n65, n64);
  auto n68 = Bit::gate_nor(n67, n66);
  auto n87 = Bit::gate_nor(n69, n68);
  auto n102 = Bit::gate_and(b[0], a[5]);
  auto n100 = Bit::gate_and(a[1], b[4]);
  auto n99 = Bit::gate_and(a[0], b[5]);
  auto n101 = Bit::gate_xnor(n100, n99);
  auto n86 = Bit::gate_xnor(n102, n101);
  auto n71 = Bit::gate_xnor(n87, n86);
  auto n121 = Bit::gate_and(n70, c_in[4]);
  auto n118 = Bit::gate_and(a[3], b[2]);
  auto n117 = Bit::gate_and(a[2], b[3]);
  auto n119 = Bit::gate_xnor(n118, n117);
  auto n88 = Bit::gate_xnor(n121, n119);
  auto n72 = Bit::gate_xnor(n71, n88);
  auto n78 = Bit::gate_and(n75, n74);
  auto n83 = Bit::gate_nor(n80, n79);
  auto n98 = Bit::gate_and(b[1], a[4]);
  auto n94 = Bit::gate_xnor(n98, c_in[5]);
  auto n90 = Bit::gate_and(n87, n86);
  auto n176 = Bit::gate_and(n98, c_in[5]);
  auto n105 = Bit::gate_and(n100, n99);
  auto n103 = Bit::gate_not(n101);
  auto n104 = Bit::gate_and(n103, n102);
  auto n174 = Bit::gate_nor(n105, n104);
  auto n107 = Bit::gate_xnor(n176, n174);
  auto n106 = Bit::gate_and(a[5], b[1]);
  auto n177 = Bit::gate_xnor(n106, c_in[6]);
  auto n126 = Bit::gate_xnor(n107, n177);
  auto n137 = Bit::gate_and(a[0], b[6]);
  auto n136 = Bit::gate_and(a[1], b[5]);
  auto n115 = Bit::gate_xnor(n137, n136);
  auto n138 = Bit::gate_and(a[4], b[2]);
  auto n169 = Bit::gate_xnor(n115, n138);
  auto n151 = Bit::gate_and(a[2], b[4]);
  auto n150 = Bit::gate_and(a[3], b[3]);
  auto n116 = Bit::gate_xnor(n151, n150);
  auto n149 = Bit::gate_and(b[0], a[6]);
  auto n167 = Bit::gate_xnor(n116, n149);
  auto n124 = Bit::gate_xnor(n169, n167);
  auto n123 = Bit::gate_and(n118, n117);
  auto n120 = Bit::gate_not(n119);
  auto n122 = Bit::gate_and(n121, n120);
  auto n171 = Bit::gate_nor(n123, n122);
  auto n133 = Bit::gate_xnor(n124, n171);
  auto n140 = Bit::gate_and(n137, n136);
  auto n142 = Bit::gate_and(b[6], a[1]);
  auto n141 = Bit::gate_and(b[3], a[4]);
  auto n146 = Bit::gate_xnor(n142, n141);
  auto n144 = Bit::gate_and(b[7], a[0]);
  auto n143 = Bit::gate_and(a[5], b[2]);
  auto n145 = Bit::gate_xor(n144, n143);
  auto n164 = Bit::gate_xnor(n146, n145);
  auto n147 = Bit::gate_and(a[5], c_in[6]);
  auto n148 = Bit::gate_xor(a[6], n147);
  auto n155 = Bit::gate_and(b[1], n148);
  auto n153 = Bit::gate_and(n150, n149);
  auto n160 = Bit::gate_and(b[5], a[2]);
  auto n157 = Bit::gate_and(a[7], b[0]);
  auto n156 = Bit::gate_and(b[4], a[3]);
  auto n158 = Bit::gate_xor(n157, n156);
  auto n159 = Bit::gate_xnor(c_in[7], n158);
  auto n161 = Bit::gate_xnor(n160, n159);
  auto n170 = Bit::gate_not(n167);
  auto n168 = Bit::gate_nor(n170, n171);
  auto n173 = Bit::gate_nor(n169, n168);
  auto n172 = Bit::gate_and(n171, n170);
  auto n181 = Bit::gate_nor(n173, n172);
  auto n175 = Bit::gate_not(n174);
  auto n179 = Bit::gate_nor(n175, n176);
  auto n1 = Bit::gate_or(n75, n74);
  auto n2 = Bit::gate_nand(n176, n175);
  auto n3 = Bit::gate_or(n150, n149);
  auto n4 = Bit::gate_nand(n80, n79);
  auto n5 = Bit::gate_or(n137, n136);
  auto n6 = Bit::gate_or(n12, a[1]);
  auto n7 = Bit::gate_or(n87, n86);
  auto n14 = Bit::gate_and(n13, n6);
  auto n17 = Bit::gate_nor(n15, n14);
  auto n23 = Bit::gate_nor(n17, n16);
  auto n20 = Bit::gate_and(n17, n16);
  auto n19 = Bit::gate_nor(n23, n20);
  c_out[2] = Bit::gate_xnor(n19, n21);
  auto n22 = Bit::gate_nor(n21, n20);
  auto n32 = Bit::gate_nor(n23, n22);
  auto n42 = Bit::gate_and(n32, n33);
  auto n45 = Bit::gate_nor(n33, n32);
  auto n34 = Bit::gate_nor(n42, n45);
  c_out[3] = Bit::gate_xnor(n34, n43);
  auto n44 = Bit::gate_nor(n43, n42);
  auto n46 = Bit::gate_nor(n45, n44);
  auto n63 = Bit::gate_and(n47, n46);
  auto n59 = Bit::gate_nor(n47, n46);
  auto n58 = Bit::gate_nor(n63, n59);
  c_out[4] = Bit::gate_xnor(n58, n60);
  auto n61 = Bit::gate_not(n59);
  auto n62 = Bit::gate_and(n61, n60);
  auto n73 = Bit::gate_nor(n63, n62);
  auto n109 = Bit::gate_nor(n73, n72);
  auto n113 = Bit::gate_and(n73, n72);
  auto n85 = Bit::gate_nor(n109, n113);
  auto n77 = Bit::gate_and(n76, n1);
  auto n93 = Bit::gate_nor(n78, n77);
  auto n82 = Bit::gate_and(n81, n4);
  auto n91 = Bit::gate_nor(n83, n82);
  auto n84 = Bit::gate_xnor(n93, n91);
  auto n111 = Bit::gate_xnor(n84, n94);
  c_out[5] = Bit::gate_xor(n85, n111);
  auto n89 = Bit::gate_and(n88, n7);
  auto n129 = Bit::gate_nor(n90, n89);
  auto n92 = Bit::gate_not(n91);
  auto n97 = Bit::gate_nor(n92, n93);
  auto n95 = Bit::gate_and(n93, n92);
  auto n96 = Bit::gate_nor(n95, n94);
  auto n128 = Bit::gate_nor(n97, n96);
  auto n108 = Bit::gate_xnor(n129, n128);
  auto n114 = Bit::gate_xnor(n108, n126);
  auto n110 = Bit::gate_not(n109);
  auto n112 = Bit::gate_and(n111, n110);
  auto n127 = Bit::gate_nor(n129, n128);
  auto n131 = Bit::gate_nor(n127, n126);
  auto n130 = Bit::gate_and(n129, n128);
  auto n187 = Bit::gate_nor(n131, n130);
  auto n139 = Bit::gate_and(n138, n5);
  auto n166 = Bit::gate_nor(n140, n139);
  auto n152 = Bit::gate_and(n151, n3);
  auto n154 = Bit::gate_nor(n153, n152);
  auto n162 = Bit::gate_xor(n155, n154);
  auto n163 = Bit::gate_xnor(n162, n161);
  auto n165 = Bit::gate_xnor(n164, n163);
  auto n183 = Bit::gate_xnor(n166, n165);
  auto n178 = Bit::gate_and(n177, n2);
  auto n180 = Bit::gate_nor(n179, n178);
  auto n182 = Bit::gate_xnor(n181, n180);
  auto n184 = Bit::gate_xnor(n183, n182);
  auto n8 = Bit::gate_or(n113, n112);
  auto n134 = Bit::gate_and(n114, n8);
  auto n132 = Bit::gate_nor(n8, n114);
  auto n125 = Bit::gate_nor(n134, n132);
  c_out[6] = Bit::gate_xnor(n125, n133);
  auto n135 = Bit::gate_nor(n133, n132);
  auto n185 = Bit::gate_nor(n135, n134);
  auto n186 = Bit::gate_xnor(n185, n184);
  c_out[7] = Bit::gate_xnor(n187, n186);
}
template<class T, class Bit> void pir16_round
(T & res_out, const T & key_in, const T & res_in, const T & table_index_in, const T & table_value_in) noexcept
{
  auto n32 = Bit::gate_xnor(key_in[0], table_index_in[0]);
  auto n31 = Bit::gate_xnor(key_in[2], table_index_in[2]);
  auto n36 = Bit::gate_and(n32, n31);
  auto n34 = Bit::gate_xnor(key_in[7], table_index_in[7]);
  auto n33 = Bit::gate_xnor(key_in[10], table_index_in[10]);
  auto n35 = Bit::gate_and(n34, n33);
  auto n44 = Bit::gate_and(n36, n35);
  auto n38 = Bit::gate_xnor(key_in[14], table_index_in[14]);
  auto n37 = Bit::gate_xnor(key_in[6], table_index_in[6]);
  auto n42 = Bit::gate_and(n38, n37);
  auto n40 = Bit::gate_xnor(key_in[5], table_index_in[5]);
  auto n39 = Bit::gate_xnor(key_in[8], table_index_in[8]);
  auto n41 = Bit::gate_and(n40, n39);
  auto n43 = Bit::gate_and(n42, n41);
  auto n60 = Bit::gate_and(n44, n43);
  auto n46 = Bit::gate_xnor(key_in[4], table_index_in[4]);
  auto n45 = Bit::gate_xnor(key_in[13], table_index_in[13]);
  auto n50 = Bit::gate_and(n46, n45);
  auto n48 = Bit::gate_xnor(table_index_in[1], key_in[1]);
  auto n47 = Bit::gate_xnor(table_index_in[11], key_in[11]);
  auto n49 = Bit::gate_and(n48, n47);
  auto n58 = Bit::gate_and(n50, n49);
  auto n52 = Bit::gate_xnor(key_in[12], table_index_in[12]);
  auto n51 = Bit::gate_xnor(key_in[15], table_index_in[15]);
  auto n56 = Bit::gate_and(n52, n51);
  auto n54 = Bit::gate_xnor(table_index_in[3], key_in[3]);
  auto n53 = Bit::gate_xnor(table_index_in[9], key_in[9]);
  auto n55 = Bit::gate_and(n54, n53);
  auto n57 = Bit::gate_and(n56, n55);
  auto n59 = Bit::gate_and(n58, n57);
  auto n120 = Bit::gate_and(n60, n59);
  auto n67 = Bit::gate_and(n120, table_value_in[3]);
  auto n69 = Bit::gate_and(res_in[3], n67);
  auto n64 = Bit::gate_and(n120, table_value_in[2]);
  auto n66 = Bit::gate_and(n64, res_in[2]);
  auto n61 = Bit::gate_and(n120, table_value_in[1]);
  auto n63 = Bit::gate_and(n61, res_in[1]);
  auto n131 = Bit::gate_xor(n61, res_in[1]);
  auto n129 = Bit::gate_and(n120, table_value_in[0]);
  auto n130 = Bit::gate_and(n129, res_in[0]);
  auto n62 = Bit::gate_and(n131, n130);
  auto n133 = Bit::gate_nor(n63, n62);
  auto n132 = Bit::gate_xnor(n64, res_in[2]);
  auto n65 = Bit::gate_nor(n133, n132);
  auto n135 = Bit::gate_nor(n66, n65);
  auto n134 = Bit::gate_xnor(res_in[3], n67);
  auto n68 = Bit::gate_nor(n135, n134);
  auto n72 = Bit::gate_nor(n69, n68);
  auto n70 = Bit::gate_and(n120, table_value_in[4]);
  auto n71 = Bit::gate_xnor(n70, res_in[4]);
  res_out[4] = Bit::gate_xor(n72, n71);
  auto n74 = Bit::gate_and(n70, res_in[4]);
  auto n73 = Bit::gate_nor(n72, n71);
  auto n77 = Bit::gate_nor(n74, n73);
  auto n75 = Bit::gate_and(n120, table_value_in[5]);
  auto n76 = Bit::gate_xnor(n75, res_in[5]);
  res_out[5] = Bit::gate_xor(n77, n76);
  auto n79 = Bit::gate_and(n75, res_in[5]);
  auto n78 = Bit::gate_nor(n77, n76);
  auto n82 = Bit::gate_nor(n79, n78);
  auto n80 = Bit::gate_and(n120, table_value_in[6]);
  auto n81 = Bit::gate_xnor(n80, res_in[6]);
  res_out[6] = Bit::gate_xor(n82, n81);
  auto n84 = Bit::gate_and(n80, res_in[6]);
  auto n83 = Bit::gate_nor(n82, n81);
  auto n87 = Bit::gate_nor(n84, n83);
  auto n85 = Bit::gate_and(n120, table_value_in[7]);
  auto n86 = Bit::gate_xnor(n85, res_in[7]);
  res_out[7] = Bit::gate_xor(n87, n86);
  auto n89 = Bit::gate_and(n85, res_in[7]);
  auto n88 = Bit::gate_nor(n87, n86);
  auto n92 = Bit::gate_nor(n89, n88);
  auto n90 = Bit::gate_and(n120, table_value_in[8]);
  auto n91 = Bit::gate_xnor(n90, res_in[8]);
  res_out[8] = Bit::gate_xor(n92, n91);
  auto n94 = Bit::gate_and(n90, res_in[8]);
  auto n93 = Bit::gate_nor(n92, n91);
  auto n97 = Bit::gate_nor(n94, n93);
  auto n95 = Bit::gate_and(n120, table_value_in[9]);
  auto n96 = Bit::gate_xnor(n95, res_in[9]);
  res_out[9] = Bit::gate_xor(n97, n96);
  auto n99 = Bit::gate_and(n95, res_in[9]);
  auto n98 = Bit::gate_nor(n97, n96);
  auto n102 = Bit::gate_nor(n99, n98);
  auto n100 = Bit::gate_and(n120, table_value_in[10]);
  auto n101 = Bit::gate_xnor(n100, res_in[10]);
  res_out[10] = Bit::gate_xor(n102, n101);
  auto n104 = Bit::gate_and(n100, res_in[10]);
  auto n103 = Bit::gate_nor(n102, n101);
  auto n107 = Bit::gate_nor(n104, n103);
  auto n105 = Bit::gate_and(n120, table_value_in[11]);
  auto n106 = Bit::gate_xnor(n105, res_in[11]);
  res_out[11] = Bit::gate_xor(n107, n106);
  auto n109 = Bit::gate_and(n105, res_in[11]);
  auto n108 = Bit::gate_nor(n107, n106);
  auto n112 = Bit::gate_nor(n109, n108);
  auto n110 = Bit::gate_and(n120, table_value_in[12]);
  auto n111 = Bit::gate_xnor(n110, res_in[12]);
  res_out[12] = Bit::gate_xor(n112, n111);
  auto n114 = Bit::gate_and(n110, res_in[12]);
  auto n113 = Bit::gate_nor(n112, n111);
  auto n117 = Bit::gate_nor(n114, n113);
  auto n115 = Bit::gate_and(n120, table_value_in[13]);
  auto n116 = Bit::gate_xnor(n115, res_in[13]);
  res_out[13] = Bit::gate_xor(n117, n116);
  auto n119 = Bit::gate_and(n115, res_in[13]);
  auto n118 = Bit::gate_nor(n117, n116);
  auto n123 = Bit::gate_nor(n119, n118);
  auto n121 = Bit::gate_and(n120, table_value_in[14]);
  auto n122 = Bit::gate_xnor(n121, res_in[14]);
  res_out[14] = Bit::gate_xor(n123, n122);
  auto n127 = Bit::gate_and(table_value_in[15], n120);
  auto n125 = Bit::gate_and(n121, res_in[14]);
  auto n124 = Bit::gate_nor(n123, n122);
  auto n126 = Bit::gate_nor(n125, n124);
  auto n128 = Bit::gate_xor(n127, n126);
  res_out[15] = Bit::gate_xnor(res_in[15], n128);
  res_out[0] = Bit::gate_xor(n129, res_in[0]);
  res_out[1] = Bit::gate_xor(n131, n130);
  res_out[2] = Bit::gate_xor(n133, n132);
  res_out[3] = Bit::gate_xor(n135, n134);
}
template<class T, class Bit> void pir32_round
(T & res_out, const T & key_in, const T & res_in, const T & table_index_in, const T & table_value_in) noexcept
{
  auto n64 = Bit::gate_xnor(key_in[15], table_index_in[15]);
  auto n63 = Bit::gate_xnor(key_in[23], table_index_in[23]);
  auto n68 = Bit::gate_and(n64, n63);
  auto n66 = Bit::gate_xnor(key_in[0], table_index_in[0]);
  auto n65 = Bit::gate_xnor(key_in[2], table_index_in[2]);
  auto n67 = Bit::gate_and(n66, n65);
  auto n76 = Bit::gate_and(n68, n67);
  auto n70 = Bit::gate_xnor(key_in[8], table_index_in[8]);
  auto n69 = Bit::gate_xnor(key_in[10], table_index_in[10]);
  auto n74 = Bit::gate_and(n70, n69);
  auto n72 = Bit::gate_xnor(key_in[4], table_index_in[4]);
  auto n71 = Bit::gate_xnor(key_in[28], table_index_in[28]);
  auto n73 = Bit::gate_and(n72, n71);
  auto n75 = Bit::gate_and(n74, n73);
  auto n92 = Bit::gate_and(n76, n75);
  auto n78 = Bit::gate_xnor(key_in[6], table_index_in[6]);
  auto n77 = Bit::gate_xnor(key_in[22], table_index_in[22]);
  auto n82 = Bit::gate_and(n78, n77);
  auto n80 = Bit::gate_xnor(table_index_in[3], key_in[3]);
  auto n79 = Bit::gate_xnor(table_index_in[25], key_in[25]);
  auto n81 = Bit::gate_and(n80, n79);
  auto n90 = Bit::gate_and(n82, n81);
  auto n84 = Bit::gate_xnor(key_in[30], table_index_in[30]);
  auto n83 = Bit::gate_xnor(key_in[14], table_index_in[14]);
  auto n88 = Bit::gate_and(n84, n83);
  auto n86 = Bit::gate_xnor(table_index_in[1], key_in[1]);
  auto n85 = Bit::gate_xnor(table_index_in[27], key_in[27]);
  auto n87 = Bit::gate_and(n86, n85);
  auto n89 = Bit::gate_and(n88, n87);
  auto n91 = Bit::gate_and(n90, n89);
  auto n124 = Bit::gate_and(n92, n91);
  auto n94 = Bit::gate_xnor(key_in[5], table_index_in[5]);
  auto n93 = Bit::gate_xnor(key_in[18], table_index_in[18]);
  auto n98 = Bit::gate_and(n94, n93);
  auto n96 = Bit::gate_xnor(key_in[16], table_index_in[16]);
  auto n95 = Bit::gate_xnor(key_in[24], table_index_in[24]);
  auto n97 = Bit::gate_and(n96, n95);
  auto n106 = Bit::gate_and(n98, n97);
  auto n100 = Bit::gate_xnor(key_in[20], table_index_in[20]);
  auto n99 = Bit::gate_xnor(key_in[26], table_index_in[26]);
  auto n104 = Bit::gate_and(n100, n99);
  auto n102 = Bit::gate_xnor(key_in[13], table_index_in[13]);
  auto n101 = Bit::gate_xnor(key_in[12], table_index_in[12]);
  auto n103 = Bit::gate_and(n102, n101);
  auto n105 = Bit::gate_and(n104, n103);
  auto n122 = Bit::gate_and(n106, n105);
  auto n108 = Bit::gate_xnor(key_in[7], table_index_in[7]);
  auto n107 = Bit::gate_xnor(key_in[29], table_index_in[29]);
  auto n112 = Bit::gate_and(n108, n107);
  auto n110 = Bit::gate_xnor(table_index_in[11], key_in[11]);
  auto n109 = Bit::gate_xnor(table_index_in[17], key_in[17]);
  auto n111 = Bit::gate_and(n110, n109);
  auto n120 = Bit::gate_and(n112, n111);
  auto n114 = Bit::gate_xnor(key_in[31], table_index_in[31]);
  auto n113 = Bit::gate_xnor(key_in[21], table_index_in[21]);
  auto n118 = Bit::gate_and(n114, n113);
  auto n116 = Bit::gate_xnor(table_index_in[9], key_in[9]);
  auto n115 = Bit::gate_xnor(table_index_in[19], key_in[19]);
  auto n117 = Bit::gate_and(n116, n115);
  auto n119 = Bit::gate_and(n118, n117);
  auto n121 = Bit::gate_and(n120, n119);
  auto n123 = Bit::gate_and(n122, n121);
  auto n271 = Bit::gate_and(n124, n123);
  auto n125 = Bit::gate_and(n271, table_value_in[0]);
  res_out[0] = Bit::gate_xor(n125, res_in[0]);
  auto n126 = Bit::gate_and(n271, table_value_in[1]);
  auto n128 = Bit::gate_xor(n126, res_in[1]);
  auto n127 = Bit::gate_and(n125, res_in[0]);
  res_out[1] = Bit::gate_xor(n128, n127);
  auto n130 = Bit::gate_and(n126, res_in[1]);
  auto n129 = Bit::gate_and(n128, n127);
  auto n133 = Bit::gate_nor(n130, n129);
  auto n131 = Bit::gate_and(n271, table_value_in[2]);
  auto n132 = Bit::gate_xnor(n131, res_in[2]);
  res_out[2] = Bit::gate_xor(n133, n132);
  auto n135 = Bit::gate_and(n131, res_in[2]);
  auto n134 = Bit::gate_nor(n133, n132);
  auto n138 = Bit::gate_nor(n135, n134);
  auto n136 = Bit::gate_and(n271, table_value_in[3]);
  auto n137 = Bit::gate_xnor(n136, res_in[3]);
  res_out[3] = Bit::gate_xor(n138, n137);
  auto n140 = Bit::gate_and(n136, res_in[3]);
  auto n139 = Bit::gate_nor(n138, n137);
  auto n143 = Bit::gate_nor(n140, n139);
  auto n141 = Bit::gate_and(n271, table_value_in[4]);
  auto n142 = Bit::gate_xnor(n141, res_in[4]);
  res_out[4] = Bit::gate_xor(n143, n142);
  auto n145 = Bit::gate_and(n141, res_in[4]);
  auto n144 = Bit::gate_nor(n143, n142);
  auto n148 = Bit::gate_nor(n145, n144);
  auto n146 = Bit::gate_and(n271, table_value_in[5]);
  auto n147 = Bit::gate_xnor(n146, res_in[5]);
  res_out[5] = Bit::gate_xor(n148, n147);
  auto n150 = Bit::gate_and(n146, res_in[5]);
  auto n149 = Bit::gate_nor(n148, n147);
  auto n153 = Bit::gate_nor(n150, n149);
  auto n151 = Bit::gate_and(n271, table_value_in[6]);
  auto n152 = Bit::gate_xnor(n151, res_in[6]);
  res_out[6] = Bit::gate_xor(n153, n152);
  auto n155 = Bit::gate_and(n151, res_in[6]);
  auto n154 = Bit::gate_nor(n153, n152);
  auto n158 = Bit::gate_nor(n155, n154);
  auto n156 = Bit::gate_and(n271, table_value_in[7]);
  auto n157 = Bit::gate_xnor(n156, res_in[7]);
  res_out[7] = Bit::gate_xor(n158, n157);
  auto n160 = Bit::gate_and(n156, res_in[7]);
  auto n159 = Bit::gate_nor(n158, n157);
  auto n163 = Bit::gate_nor(n160, n159);
  auto n161 = Bit::gate_and(n271, table_value_in[8]);
  auto n162 = Bit::gate_xnor(n161, res_in[8]);
  res_out[8] = Bit::gate_xor(n163, n162);
  auto n165 = Bit::gate_and(n161, res_in[8]);
  auto n164 = Bit::gate_nor(n163, n162);
  auto n168 = Bit::gate_nor(n165, n164);
  auto n166 = Bit::gate_and(n271, table_value_in[9]);
  auto n167 = Bit::gate_xnor(n166, res_in[9]);
  res_out[9] = Bit::gate_xor(n168, n167);
  auto n170 = Bit::gate_and(n166, res_in[9]);
  auto n169 = Bit::gate_nor(n168, n167);
  auto n173 = Bit::gate_nor(n170, n169);
  auto n171 = Bit::gate_and(n271, table_value_in[10]);
  auto n172 = Bit::gate_xnor(n171, res_in[10]);
  res_out[10] = Bit::gate_xor(n173, n172);
  auto n175 = Bit::gate_and(n171, res_in[10]);
  auto n174 = Bit::gate_nor(n173, n172);
  auto n178 = Bit::gate_nor(n175, n174);
  auto n176 = Bit::gate_and(n271, table_value_in[11]);
  auto n177 = Bit::gate_xnor(n176, res_in[11]);
  res_out[11] = Bit::gate_xor(n178, n177);
  auto n180 = Bit::gate_and(n176, res_in[11]);
  auto n179 = Bit::gate_nor(n178, n177);
  auto n183 = Bit::gate_nor(n180, n179);
  auto n181 = Bit::gate_and(n271, table_value_in[12]);
  auto n182 = Bit::gate_xnor(n181, res_in[12]);
  res_out[12] = Bit::gate_xor(n183, n182);
  auto n185 = Bit::gate_and(n181, res_in[12]);
  auto n184 = Bit::gate_nor(n183, n182);
  auto n188 = Bit::gate_nor(n185, n184);
  auto n186 = Bit::gate_and(n271, table_value_in[13]);
  auto n187 = Bit::gate_xnor(n186, res_in[13]);
  res_out[13] = Bit::gate_xor(n188, n187);
  auto n190 = Bit::gate_and(n186, res_in[13]);
  auto n189 = Bit::gate_nor(n188, n187);
  auto n193 = Bit::gate_nor(n190, n189);
  auto n191 = Bit::gate_and(n271, table_value_in[14]);
  auto n192 = Bit::gate_xnor(n191, res_in[14]);
  res_out[14] = Bit::gate_xor(n193, n192);
  auto n195 = Bit::gate_and(n191, res_in[14]);
  auto n194 = Bit::gate_nor(n193, n192);
  auto n198 = Bit::gate_nor(n195, n194);
  auto n196 = Bit::gate_and(n271, table_value_in[15]);
  auto n197 = Bit::gate_xnor(n196, res_in[15]);
  res_out[15] = Bit::gate_xor(n198, n197);
  auto n200 = Bit::gate_and(n196, res_in[15]);
  auto n199 = Bit::gate_nor(n198, n197);
  auto n203 = Bit::gate_nor(n200, n199);
  auto n201 = Bit::gate_and(n271, table_value_in[16]);
  auto n202 = Bit::gate_xnor(n201, res_in[16]);
  res_out[16] = Bit::gate_xor(n203, n202);
  auto n205 = Bit::gate_and(n201, res_in[16]);
  auto n204 = Bit::gate_nor(n203, n202);
  auto n208 = Bit::gate_nor(n205, n204);
  auto n206 = Bit::gate_and(n271, table_value_in[17]);
  auto n207 = Bit::gate_xnor(n206, res_in[17]);
  res_out[17] = Bit::gate_xor(n208, n207);
  auto n210 = Bit::gate_and(n206, res_in[17]);
  auto n209 = Bit::gate_nor(n208, n207);
  auto n213 = Bit::gate_nor(n210, n209);
  auto n211 = Bit::gate_and(n271, table_value_in[18]);
  auto n212 = Bit::gate_xnor(n211, res_in[18]);
  res_out[18] = Bit::gate_xor(n213, n212);
  auto n215 = Bit::gate_and(n211, res_in[18]);
  auto n214 = Bit::gate_nor(n213, n212);
  auto n218 = Bit::gate_nor(n215, n214);
  auto n216 = Bit::gate_and(n271, table_value_in[19]);
  auto n217 = Bit::gate_xnor(n216, res_in[19]);
  res_out[19] = Bit::gate_xor(n218, n217);
  auto n220 = Bit::gate_and(n216, res_in[19]);
  auto n219 = Bit::gate_nor(n218, n217);
  auto n223 = Bit::gate_nor(n220, n219);
  auto n221 = Bit::gate_and(n271, table_value_in[20]);
  auto n222 = Bit::gate_xnor(n221, res_in[20]);
  res_out[20] = Bit::gate_xor(n223, n222);
  auto n225 = Bit::gate_and(n221, res_in[20]);
  auto n224 = Bit::gate_nor(n223, n222);
  auto n228 = Bit::gate_nor(n225, n224);
  auto n226 = Bit::gate_and(n271, table_value_in[21]);
  auto n227 = Bit::gate_xnor(n226, res_in[21]);
  res_out[21] = Bit::gate_xor(n228, n227);
  auto n230 = Bit::gate_and(n226, res_in[21]);
  auto n229 = Bit::gate_nor(n228, n227);
  auto n233 = Bit::gate_nor(n230, n229);
  auto n231 = Bit::gate_and(n271, table_value_in[22]);
  auto n232 = Bit::gate_xnor(n231, res_in[22]);
  res_out[22] = Bit::gate_xor(n233, n232);
  auto n235 = Bit::gate_and(n231, res_in[22]);
  auto n234 = Bit::gate_nor(n233, n232);
  auto n238 = Bit::gate_nor(n235, n234);
  auto n236 = Bit::gate_and(n271, table_value_in[23]);
  auto n237 = Bit::gate_xnor(n236, res_in[23]);
  res_out[23] = Bit::gate_xor(n238, n237);
  auto n240 = Bit::gate_and(n236, res_in[23]);
  auto n239 = Bit::gate_nor(n238, n237);
  auto n243 = Bit::gate_nor(n240, n239);
  auto n241 = Bit::gate_and(n271, table_value_in[24]);
  auto n242 = Bit::gate_xnor(n241, res_in[24]);
  res_out[24] = Bit::gate_xor(n243, n242);
  auto n245 = Bit::gate_and(n241, res_in[24]);
  auto n244 = Bit::gate_nor(n243, n242);
  auto n248 = Bit::gate_nor(n245, n244);
  auto n246 = Bit::gate_and(n271, table_value_in[25]);
  auto n247 = Bit::gate_xnor(n246, res_in[25]);
  res_out[25] = Bit::gate_xor(n248, n247);
  auto n250 = Bit::gate_and(n246, res_in[25]);
  auto n249 = Bit::gate_nor(n248, n247);
  auto n253 = Bit::gate_nor(n250, n249);
  auto n251 = Bit::gate_and(n271, table_value_in[26]);
  auto n252 = Bit::gate_xnor(n251, res_in[26]);
  res_out[26] = Bit::gate_xor(n253, n252);
  auto n255 = Bit::gate_and(n251, res_in[26]);
  auto n254 = Bit::gate_nor(n253, n252);
  auto n258 = Bit::gate_nor(n255, n254);
  auto n256 = Bit::gate_and(n271, table_value_in[27]);
  auto n257 = Bit::gate_xnor(n256, res_in[27]);
  res_out[27] = Bit::gate_xor(n258, n257);
  auto n260 = Bit::gate_and(n256, res_in[27]);
  auto n259 = Bit::gate_nor(n258, n257);
  auto n263 = Bit::gate_nor(n260, n259);
  auto n261 = Bit::gate_and(n271, table_value_in[28]);
  auto n262 = Bit::gate_xnor(n261, res_in[28]);
  res_out[28] = Bit::gate_xor(n263, n262);
  auto n265 = Bit::gate_and(n261, res_in[28]);
  auto n264 = Bit::gate_nor(n263, n262);
  auto n268 = Bit::gate_nor(n265, n264);
  auto n266 = Bit::gate_and(n271, table_value_in[29]);
  auto n267 = Bit::gate_xnor(n266, res_in[29]);
  res_out[29] = Bit::gate_xor(n268, n267);
  auto n270 = Bit::gate_and(n266, res_in[29]);
  auto n269 = Bit::gate_nor(n268, n267);
  auto n274 = Bit::gate_nor(n270, n269);
  auto n272 = Bit::gate_and(n271, table_value_in[30]);
  auto n273 = Bit::gate_xnor(n272, res_in[30]);
  res_out[30] = Bit::gate_xor(n274, n273);
  auto n278 = Bit::gate_and(table_value_in[31], n271);
  auto n276 = Bit::gate_and(n272, res_in[30]);
  auto n275 = Bit::gate_nor(n274, n273);
  auto n277 = Bit::gate_nor(n276, n275);
  auto n279 = Bit::gate_xor(n278, n277);
  res_out[31] = Bit::gate_xnor(res_in[31], n279);
}
template<class T, class Bit> void pir4_round
(T & res_out, const T & key_in, const T & res_in, const T & table_index_in, const T & table_value_in) noexcept
{
  auto n23 = Bit::gate_xnor(table_index_in[2], key_in[2]);
  auto n22 = Bit::gate_xnor(table_index_in[0], key_in[0]);
  auto n27 = Bit::gate_and(n23, n22);
  auto n25 = Bit::gate_xnor(table_index_in[3], key_in[3]);
  auto n24 = Bit::gate_xnor(table_index_in[1], key_in[1]);
  auto n26 = Bit::gate_and(n25, n24);
  auto n28 = Bit::gate_and(n27, n26);
  auto n36 = Bit::gate_and(table_value_in[3], n28);
  auto n32 = Bit::gate_and(n28, table_value_in[2]);
  auto n34 = Bit::gate_and(n32, res_in[2]);
  auto n29 = Bit::gate_and(n28, table_value_in[1]);
  auto n31 = Bit::gate_and(n29, res_in[1]);
  auto n42 = Bit::gate_and(n28, table_value_in[0]);
  auto n40 = Bit::gate_and(n42, res_in[0]);
  auto n41 = Bit::gate_xor(n29, res_in[1]);
  auto n30 = Bit::gate_and(n40, n41);
  auto n39 = Bit::gate_nor(n31, n30);
  auto n38 = Bit::gate_xnor(n32, res_in[2]);
  auto n33 = Bit::gate_nor(n39, n38);
  auto n35 = Bit::gate_nor(n34, n33);
  auto n37 = Bit::gate_xor(n36, n35);
  res_out[3] = Bit::gate_xnor(res_in[3], n37);
  res_out[2] = Bit::gate_xor(n39, n38);
  res_out[1] = Bit::gate_xor(n41, n40);
  res_out[0] = Bit::gate_xor(n42, res_in[0]);
}
template<class T, class Bit> void pir8_round
(T & res_out, const T & key_in, const T & res_in, const T & table_index_in, const T & table_value_in) noexcept
{
  auto n16 = Bit::gate_xnor(key_in[5], table_index_in[5]);
  auto n15 = Bit::gate_xnor(key_in[4], table_index_in[4]);
  auto n20 = Bit::gate_and(n16, n15);
  auto n18 = Bit::gate_xnor(key_in[6], table_index_in[6]);
  auto n17 = Bit::gate_xnor(table_index_in[1], key_in[1]);
  auto n19 = Bit::gate_and(n18, n17);
  auto n28 = Bit::gate_and(n20, n19);
  auto n22 = Bit::gate_xnor(key_in[2], table_index_in[2]);
  auto n21 = Bit::gate_xnor(key_in[0], table_index_in[0]);
  auto n26 = Bit::gate_and(n22, n21);
  auto n24 = Bit::gate_xnor(key_in[7], table_index_in[7]);
  auto n23 = Bit::gate_xnor(table_index_in[3], key_in[3]);
  auto n25 = Bit::gate_and(n24, n23);
  auto n27 = Bit::gate_and(n26, n25);
  auto n55 = Bit::gate_and(n28, n27);
  auto n29 = Bit::gate_and(n55, table_value_in[0]);
  res_out[0] = Bit::gate_xor(n29, res_in[0]);
  auto n30 = Bit::gate_and(n55, table_value_in[1]);
  auto n32 = Bit::gate_xor(n30, res_in[1]);
  auto n31 = Bit::gate_and(n29, res_in[0]);
  res_out[1] = Bit::gate_xor(n32, n31);
  auto n34 = Bit::gate_and(n30, res_in[1]);
  auto n33 = Bit::gate_and(n32, n31);
  auto n37 = Bit::gate_nor(n34, n33);
  auto n35 = Bit::gate_and(n55, table_value_in[2]);
  auto n36 = Bit::gate_xnor(n35, res_in[2]);
  res_out[2] = Bit::gate_xor(n37, n36);
  auto n39 = Bit::gate_and(n35, res_in[2]);
  auto n38 = Bit::gate_nor(n37, n36);
  auto n42 = Bit::gate_nor(n39, n38);
  auto n40 = Bit::gate_and(n55, table_value_in[3]);
  auto n41 = Bit::gate_xnor(n40, res_in[3]);
  res_out[3] = Bit::gate_xor(n42, n41);
  auto n44 = Bit::gate_and(n40, res_in[3]);
  auto n43 = Bit::gate_nor(n42, n41);
  auto n47 = Bit::gate_nor(n44, n43);
  auto n45 = Bit::gate_and(n55, table_value_in[4]);
  auto n46 = Bit::gate_xnor(n45, res_in[4]);
  res_out[4] = Bit::gate_xor(n47, n46);
  auto n49 = Bit::gate_and(n45, res_in[4]);
  auto n48 = Bit::gate_nor(n47, n46);
  auto n52 = Bit::gate_nor(n49, n48);
  auto n50 = Bit::gate_and(n55, table_value_in[5]);
  auto n51 = Bit::gate_xnor(n50, res_in[5]);
  res_out[5] = Bit::gate_xor(n52, n51);
  auto n54 = Bit::gate_and(n50, res_in[5]);
  auto n53 = Bit::gate_nor(n52, n51);
  auto n58 = Bit::gate_nor(n54, n53);
  auto n56 = Bit::gate_and(n55, table_value_in[6]);
  auto n57 = Bit::gate_xnor(n56, res_in[6]);
  res_out[6] = Bit::gate_xor(n58, n57);
  auto n62 = Bit::gate_and(table_value_in[7], n55);
  auto n60 = Bit::gate_and(n56, res_in[6]);
  auto n59 = Bit::gate_nor(n58, n57);
  auto n61 = Bit::gate_nor(n60, n59);
  auto n63 = Bit::gate_xor(n62, n61);
  res_out[7] = Bit::gate_xnor(res_in[7], n63);
}
template<class T, class Bit> void sieve_round
(T & y, const T & a, const T & b) noexcept
{
  y[0] = Bit::gate_and(a[0], b[0]);
  y[1] = Bit::gate_and(a[0], b[1]);
  y[2] = Bit::gate_and(a[0], b[2]);
  y[3] = Bit::gate_and(a[0], b[3]);
  y[4] = Bit::gate_and(a[0], b[4]);
  y[5] = Bit::gate_and(a[0], b[5]);
  y[6] = Bit::gate_and(a[0], b[6]);
  y[7] = Bit::gate_and(a[0], b[7]);
}
template<class T, class Bit> void speck_round
(T & x_out, T & y_out, const T & x_in, const T & y_in, const T & k) noexcept
{
  auto n36 = Bit::gate_not(y_in[1]);
  auto n20 = Bit::gate_xnor(x_in[0], n36);
  auto n19 = Bit::gate_and(x_in[7], y_in[0]);
  auto n18 = Bit::gate_xnor(n20, n19);
  x_out[1] = Bit::gate_xnor(n18, k[1]);
  y_out[1] = Bit::gate_xor(y_in[7], x_out[1]);
  auto n22 = Bit::gate_and(y_in[1], x_in[0]);
  auto n21 = Bit::gate_and(n20, n19);
  auto n25 = Bit::gate_nor(n22, n21);
  auto n23 = Bit::gate_xnor(n25, k[2]);
  auto n24 = Bit::gate_xnor(y_in[2], x_in[1]);
  x_out[2] = Bit::gate_xnor(n23, n24);
  y_out[2] = Bit::gate_xor(x_out[2], y_in[0]);
  auto n31 = Bit::gate_and(y_in[4], x_in[3]);
  auto n29 = Bit::gate_and(y_in[3], x_in[2]);
  auto n27 = Bit::gate_and(y_in[2], x_in[1]);
  auto n26 = Bit::gate_nor(n25, n24);
  auto n33 = Bit::gate_nor(n27, n26);
  auto n34 = Bit::gate_xnor(y_in[3], x_in[2]);
  auto n28 = Bit::gate_nor(n33, n34);
  auto n37 = Bit::gate_nor(n29, n28);
  auto n38 = Bit::gate_xnor(y_in[4], x_in[3]);
  auto n30 = Bit::gate_nor(n37, n38);
  auto n41 = Bit::gate_nor(n31, n30);
  auto n32 = Bit::gate_xnor(n41, k[5]);
  auto n40 = Bit::gate_xnor(y_in[5], x_in[4]);
  x_out[5] = Bit::gate_xnor(n32, n40);
  y_out[5] = Bit::gate_xor(x_out[5], y_in[3]);
  auto n35 = Bit::gate_xnor(n33, k[3]);
  x_out[3] = Bit::gate_xnor(n35, n34);
  y_out[3] = Bit::gate_xnor(x_out[3], n36);
  auto n39 = Bit::gate_xnor(n37, k[4]);
  x_out[4] = Bit::gate_xnor(n39, n38);
  y_out[4] = Bit::gate_xor(x_out[4], y_in[2]);
  auto n43 = Bit::gate_and(y_in[5], x_in[4]);
  auto n42 = Bit::gate_nor(n41, n40);
  auto n47 = Bit::gate_nor(n43, n42);
  auto n44 = Bit::gate_xnor(k[6], n47);
  auto n46 = Bit::gate_xnor(y_in[6], x_in[5]);
  x_out[6] = Bit::gate_xnor(n44, n46);
  y_out[6] = Bit::gate_xor(x_out[6], y_in[4]);
  auto n45 = Bit::gate_xnor(x_in[7], y_in[0]);
  x_out[0] = Bit::gate_xnor(n45, k[0]);
  y_out[0] = Bit::gate_xor(x_out[0], y_in[6]);
  auto n49 = Bit::gate_and(y_in[6], x_in[5]);
  auto n48 = Bit::gate_nor(n47, n46);
  auto n52 = Bit::gate_nor(n49, n48);
  auto n50 = Bit::gate_xnor(y_in[7], k[7]);
  auto n51 = Bit::gate_xnor(n50, x_in[6]);
  x_out[7] = Bit::gate_xnor(n52, n51);
  y_out[7] = Bit::gate_xor(y_in[5], x_out[7]);
}
