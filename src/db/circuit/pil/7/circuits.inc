// Copyright 2022 MoMA Lab, NYU Abu Dhabi (wp.nyu.edu/momalab/)
template<> void $NameUint<7>::d_add
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n3 = gate_xor(b[1], a[1]);
  auto n2 = gate_and(a[0], b[0]);
  y[1] = gate_xor(n3, n2);
  auto n7 = gate_xor(b[2], a[2]);
  auto n5 = gate_and(b[1], a[1]);
  auto n4 = gate_and(n3, n2);
  auto n6 = gate_or(n5, n4);
  y[2] = gate_xor(n7, n6);
  auto n11 = gate_xor(b[3], a[3]);
  auto n9 = gate_and(b[2], a[2]);
  auto n8 = gate_and(n7, n6);
  auto n10 = gate_or(n9, n8);
  y[3] = gate_xor(n11, n10);
  auto n15 = gate_xor(b[4], a[4]);
  auto n13 = gate_and(b[3], a[3]);
  auto n12 = gate_and(n11, n10);
  auto n14 = gate_or(n13, n12);
  y[4] = gate_xor(n15, n14);
  auto n19 = gate_xor(b[5], a[5]);
  auto n17 = gate_and(b[4], a[4]);
  auto n16 = gate_and(n15, n14);
  auto n18 = gate_or(n17, n16);
  y[5] = gate_xor(n19, n18);
  auto n21 = gate_and(n19, n18);
  auto n20 = gate_and(b[5], a[5]);
  auto n23 = gate_or(n21, n20);
  auto n22 = gate_xor(a[6], b[6]);
  y[6] = gate_xor(n23, n22);
}
template<> void $NameUint<7>::d_bitand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_and(b[6], a[6]);
  y[5] = gate_and(b[5], a[5]);
  y[4] = gate_and(b[4], a[4]);
  y[3] = gate_and(b[3], a[3]);
  y[2] = gate_and(b[2], a[2]);
  y[1] = gate_and(b[1], a[1]);
  y[0] = gate_and(b[0], a[0]);
}
template<> void $NameUint<7>::d_bitnot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[6] = gate_not(a[6]);
  y[5] = gate_not(a[5]);
  y[4] = gate_not(a[4]);
  y[3] = gate_not(a[3]);
  y[2] = gate_not(a[2]);
  y[1] = gate_not(a[1]);
  y[0] = gate_not(a[0]);
}
template<> void $NameUint<7>::d_bitor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_or(a[6], b[6]);
  y[5] = gate_or(a[5], b[5]);
  y[4] = gate_or(a[4], b[4]);
  y[3] = gate_or(a[3], b[3]);
  y[2] = gate_or(a[2], b[2]);
  y[1] = gate_or(a[1], b[1]);
  y[0] = gate_or(a[0], b[0]);
}
template<> void $NameUint<7>::d_bitsum
(vector<Bit> & y, const vector<Bit> & a, const Bit & zero) noexcept
{
  y[3] = gate_buf(zero);
  y[4] = gate_buf(zero);
  y[5] = gate_buf(zero);
  y[6] = gate_buf(zero);
  auto N0 = gate_buf(a[0]);
  auto n6 = gate_xor(N0, a[1]);
  auto n1 = gate_xor(n6, a[2]);
  auto n3 = gate_xor(n1, a[6]);
  auto n9 = gate_xor(a[4], a[3]);
  auto n2 = gate_xor(n9, a[5]);
  y[0] = gate_xor(n3, n2);
  auto n5 = gate_and(n1, a[6]);
  auto n4 = gate_and(n3, n2);
  auto n14 = gate_or(n5, n4);
  auto n8 = gate_and(N0, a[1]);
  auto n7 = gate_and(n6, a[2]);
  auto n12 = gate_or(n8, n7);
  auto n11 = gate_and(a[4], a[3]);
  auto n10 = gate_and(n9, a[5]);
  auto n13 = gate_or(n11, n10);
  auto n15 = gate_xor(n12, n13);
  y[1] = gate_xor(n14, n15);
  auto n17 = gate_and(n13, n12);
  auto n16 = gate_and(n15, n14);
  y[2] = gate_or(n17, n16);
}
template<> void $NameUint<7>::d_bitxor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_xor(b[6], a[6]);
  y[5] = gate_xor(b[5], a[5]);
  y[4] = gate_xor(b[4], a[4]);
  y[3] = gate_xor(b[3], a[3]);
  y[2] = gate_xor(b[2], a[2]);
  y[1] = gate_xor(b[1], a[1]);
  y[0] = gate_xor(b[0], a[0]);
}
template<> void $NameUint<7>::d_boolmul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(a[0], b[0]);
  y[1] = gate_and(a[0], b[1]);
  y[2] = gate_and(a[0], b[2]);
  y[3] = gate_and(a[0], b[3]);
  y[4] = gate_and(a[0], b[4]);
  y[5] = gate_and(a[0], b[5]);
  y[6] = gate_and(a[0], b[6]);
}
template<> void $NameUint<7>::d_boolmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  auto n28 = gate_not(a[0]);
  auto n17 = gate_and(c[0], n28);
  auto n16 = gate_and(a[0], b[0]);
  y[0] = gate_or(n17, n16);
  auto n19 = gate_and(c[1], n28);
  auto n18 = gate_and(a[0], b[1]);
  y[1] = gate_or(n19, n18);
  auto n21 = gate_and(c[2], n28);
  auto n20 = gate_and(a[0], b[2]);
  y[2] = gate_or(n21, n20);
  auto n23 = gate_and(c[3], n28);
  auto n22 = gate_and(a[0], b[3]);
  y[3] = gate_or(n23, n22);
  auto n25 = gate_and(c[4], n28);
  auto n24 = gate_and(a[0], b[4]);
  y[4] = gate_or(n25, n24);
  auto n27 = gate_and(c[5], n28);
  auto n26 = gate_and(a[0], b[5]);
  y[5] = gate_or(n27, n26);
  auto n30 = gate_and(c[6], n28);
  auto n29 = gate_and(a[0], b[6]);
  y[6] = gate_or(n30, n29);
}
template<> void $NameUint<7>::d_carryadd
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n3 = gate_xor(b[1], a[1]);
  auto n2 = gate_and(a[0], b[0]);
  y[1] = gate_xor(n3, n2);
  auto n7 = gate_xor(b[2], a[2]);
  auto n5 = gate_and(b[1], a[1]);
  auto n4 = gate_and(n3, n2);
  auto n6 = gate_or(n5, n4);
  y[2] = gate_xor(n7, n6);
  auto n11 = gate_xor(b[3], a[3]);
  auto n9 = gate_and(b[2], a[2]);
  auto n8 = gate_and(n7, n6);
  auto n10 = gate_or(n9, n8);
  y[3] = gate_xor(n11, n10);
  auto n15 = gate_xor(b[4], a[4]);
  auto n13 = gate_and(b[3], a[3]);
  auto n12 = gate_and(n11, n10);
  auto n14 = gate_or(n13, n12);
  y[4] = gate_xor(n15, n14);
  auto n17 = gate_and(b[4], a[4]);
  auto n16 = gate_and(n15, n14);
  auto n18 = gate_or(n17, n16);
  auto n19 = gate_xor(b[5], a[5]);
  y[5] = gate_xor(n18, n19);
  auto n21 = gate_and(b[5], a[5]);
  auto n20 = gate_and(n19, n18);
  y[6] = gate_or(n21, n20);
}
template<> void $NameUint<7>::d_dec
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[1], y[0]);
  auto n2 = gate_not(a[1]);
  auto n4 = gate_and(n2, y[0]);
  y[2] = gate_xor(a[2], n4);
  auto n3 = gate_not(a[2]);
  auto n6 = gate_and(n4, n3);
  y[3] = gate_xor(a[3], n6);
  auto n5 = gate_not(a[3]);
  auto n8 = gate_and(n6, n5);
  y[4] = gate_xor(a[4], n8);
  auto n7 = gate_not(a[4]);
  auto n10 = gate_and(n8, n7);
  y[5] = gate_xor(a[5], n10);
  auto n9 = gate_not(a[5]);
  auto n11 = gate_and(n10, n9);
  y[6] = gate_xor(a[6], n11);
}
template<> void $NameUint<7>::d_div
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n175 = gate_not(b[6]);
  auto n168 = gate_not(b[5]);
  auto n89 = gate_and(n175, n168);
  auto n163 = gate_not(b[4]);
  auto n60 = gate_and(n89, n163);
  auto n126 = gate_not(b[3]);
  auto n41 = gate_and(n60, n126);
  auto n131 = gate_not(b[2]);
  auto n30 = gate_and(n41, n131);
  auto n31 = gate_not(a[6]);
  auto n29 = gate_not(a[5]);
  auto n106 = gate_not(b[1]);
  auto n32 = gate_and(n106, n30);
  auto n34 = gate_not(a[4]);
  auto n49 = gate_not(a[3]);
  auto n66 = gate_and(b[0], n49);
  auto n50 = gate_not(n66);
  auto n67 = gate_xor(n66, b[1]);
  auto n73 = gate_not(a[2]);
  auto n100 = gate_and(b[0], n73);
  auto n74 = gate_not(n100);
  auto n101 = gate_xor(n100, b[1]);
  auto n141 = gate_not(a[1]);
  auto n136 = gate_and(b[0], n141);
  auto n108 = gate_not(n136);
  auto n137 = gate_xor(b[1], n136);
  auto n140 = gate_not(a[0]);
  auto n145 = gate_and(b[0], n140);
  auto n2 = gate_nand(b[0], n31);
  auto n4 = gate_nand(b[0], n34);
  auto n6 = gate_nand(b[0], n29);
  auto n13 = gate_nand(b[1], n31);
  auto n33 = gate_and(n30, n13);
  y[5] = gate_and(n33, n6);
  y[6] = gate_and(n32, n2);
  auto n36 = gate_not(y[5]);
  auto n35 = gate_not(y[6]);
  auto n37 = gate_and(n36, n35);
  auto n56 = gate_and(a[6], n37);
  auto n39 = gate_not(n56);
  auto n10 = gate_nand(n39, b[2]);
  auto n14 = gate_nand(n33, b[0]);
  auto n28 = gate_nand(n56, n131);
  auto n42 = gate_and(a[5], n14);
  auto n43 = gate_xor(n42, n106);
  auto n44 = gate_not(n43);
  auto n45 = gate_and(n44, n4);
  auto n19 = gate_nand(n43, n4);
  auto n20 = gate_nand(n42, n106);
  auto n38 = gate_and(n20, n19);
  auto n3 = gate_nand(n38, n28);
  auto n40 = gate_and(n3, n10);
  y[4] = gate_and(n41, n40);
  auto n55 = gate_not(y[4]);
  auto n47 = gate_and(y[4], b[0]);
  auto n68 = gate_xor(n47, a[4]);
  auto n53 = gate_and(n106, n68);
  auto n48 = gate_not(n68);
  auto n51 = gate_xor(b[1], n48);
  auto n52 = gate_and(n51, n50);
  auto n61 = gate_or(n53, n52);
  auto n84 = gate_and(n56, n55);
  auto n58 = gate_not(n84);
  auto n62 = gate_xor(n61, n131);
  auto n5 = gate_nand(n45, y[4]);
  auto n12 = gate_nand(n58, b[3]);
  auto n18 = gate_nand(n42, n55);
  auto n27 = gate_nand(n84, n126);
  auto n46 = gate_and(n18, n5);
  auto n63 = gate_not(n46);
  auto n54 = gate_xor(b[2], n46);
  auto n1 = gate_nand(n131, n63);
  auto n23 = gate_nand(n54, n61);
  auto n57 = gate_and(n1, n23);
  auto n11 = gate_nand(n57, n27);
  auto n59 = gate_and(n11, n12);
  y[3] = gate_and(n60, n59);
  auto n64 = gate_and(y[3], n62);
  auto n92 = gate_xor(n64, n63);
  auto n65 = gate_not(n92);
  auto n81 = gate_xor(b[3], n65);
  auto n69 = gate_and(y[3], n67);
  auto n97 = gate_xor(n69, n68);
  auto n80 = gate_and(n97, n131);
  auto n70 = gate_not(n97);
  auto n78 = gate_xor(b[2], n70);
  auto n71 = gate_and(y[3], b[0]);
  auto n102 = gate_xor(n71, a[3]);
  auto n77 = gate_and(n106, n102);
  auto n72 = gate_not(n102);
  auto n75 = gate_xor(b[1], n72);
  auto n76 = gate_and(n75, n74);
  auto n95 = gate_or(n77, n76);
  auto n79 = gate_and(n78, n95);
  auto n90 = gate_or(n80, n79);
  auto n83 = gate_not(y[3]);
  auto n123 = gate_and(n84, n83);
  auto n91 = gate_xor(n126, n90);
  auto n96 = gate_xor(n131, n95);
  auto n119 = gate_not(n123);
  auto n120 = gate_and(b[5], n119);
  auto n21 = gate_nand(n81, n90);
  auto n22 = gate_nand(n92, n126);
  auto n85 = gate_and(n22, n21);
  auto n82 = gate_not(n85);
  auto n87 = gate_and(n82, n163);
  auto n17 = gate_nand(n85, b[4]);
  auto n86 = gate_and(n123, n17);
  auto n88 = gate_or(n87, n86);
  y[2] = gate_and(n89, n88);
  auto n93 = gate_and(y[2], n91);
  auto n166 = gate_xor(n93, n92);
  auto n94 = gate_not(n166);
  auto n118 = gate_xor(b[4], n94);
  auto n98 = gate_and(y[2], n96);
  auto n99 = gate_xor(n98, n97);
  auto n117 = gate_and(n99, n126);
  auto n129 = gate_not(n99);
  auto n115 = gate_xor(b[3], n129);
  auto n103 = gate_and(y[2], n101);
  auto n104 = gate_xor(n103, n102);
  auto n114 = gate_and(n104, n131);
  auto n134 = gate_not(n104);
  auto n112 = gate_xor(b[2], n134);
  auto n105 = gate_and(y[2], b[0]);
  auto n107 = gate_xor(n105, a[2]);
  auto n111 = gate_and(n106, n107);
  auto n138 = gate_not(n107);
  auto n109 = gate_xor(b[1], n138);
  auto n110 = gate_and(n109, n108);
  auto n132 = gate_or(n111, n110);
  auto n113 = gate_and(n112, n132);
  auto n127 = gate_or(n114, n113);
  auto n116 = gate_and(n115, n127);
  auto n164 = gate_or(n117, n116);
  auto n122 = gate_not(y[2]);
  auto n174 = gate_and(n123, n122);
  auto n125 = gate_not(n174);
  auto n128 = gate_xor(n127, n126);
  auto n133 = gate_xor(n132, n131);
  auto n165 = gate_xor(n164, n163);
  auto n8 = gate_nand(n174, n168);
  auto n16 = gate_nand(b[6], n125);
  auto n24 = gate_nand(n118, n164);
  auto n26 = gate_nand(n166, n163);
  auto n121 = gate_and(n24, n26);
  auto n124 = gate_or(n121, n120);
  auto n9 = gate_nand(n124, n8);
  y[1] = gate_and(n175, n9);
  auto n130 = gate_and(n128, y[1]);
  auto n160 = gate_xor(n130, n129);
  auto n135 = gate_and(n133, y[1]);
  auto n155 = gate_xor(n135, n134);
  auto n139 = gate_and(n137, y[1]);
  auto n150 = gate_xor(n139, n138);
  auto n142 = gate_and(y[1], b[0]);
  auto n144 = gate_xor(n142, n141);
  auto n143 = gate_or(n145, n144);
  auto n147 = gate_and(b[1], n143);
  auto n146 = gate_and(n145, n144);
  auto n149 = gate_or(n147, n146);
  auto n148 = gate_or(n150, n149);
  auto n152 = gate_and(b[2], n148);
  auto n151 = gate_and(n150, n149);
  auto n154 = gate_or(n152, n151);
  auto n153 = gate_or(n155, n154);
  auto n157 = gate_and(b[3], n153);
  auto n156 = gate_and(n155, n154);
  auto n159 = gate_or(n157, n156);
  auto n158 = gate_or(n160, n159);
  auto n162 = gate_and(b[4], n158);
  auto n161 = gate_and(n160, n159);
  auto n169 = gate_or(n162, n161);
  auto n167 = gate_and(n165, y[1]);
  auto n170 = gate_xor(n167, n166);
  auto n171 = gate_not(n170);
  auto n173 = gate_not(y[1]);
  auto n176 = gate_and(n174, n173);
  auto n177 = gate_and(n176, n175);
  auto n7 = gate_nand(n171, b[5]);
  auto n25 = gate_nand(n170, n168);
  auto n15 = gate_nand(n169, n25);
  auto n172 = gate_and(n15, n7);
  auto n178 = gate_and(n16, n172);
  y[0] = gate_or(n178, n177);
}
template<> void $NameUint<7>::d_divsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n19 = gate_nand(b[0], a[0]);
  auto n52 = gate_not(b[6]);
  auto n144 = gate_xor(b[5], n52);
  auto n183 = gate_not(n144);
  auto n42 = gate_not(a[0]);
  auto n41 = gate_not(a[1]);
  auto n100 = gate_and(n42, n41);
  auto n43 = gate_not(a[2]);
  auto n76 = gate_and(n100, n43);
  auto n44 = gate_not(a[3]);
  auto n59 = gate_and(n76, n44);
  auto n45 = gate_not(a[4]);
  auto n49 = gate_and(n59, n45);
  auto n46 = gate_not(n49);
  auto n47 = gate_and(n46, a[6]);
  auto n56 = gate_xor(n47, a[5]);
  auto n137 = gate_xor(b[4], n52);
  auto n91 = gate_and(n144, n137);
  auto n148 = gate_xor(b[3], n52);
  auto n71 = gate_and(n91, n148);
  auto n153 = gate_xor(b[2], n52);
  auto n55 = gate_and(n71, n153);
  auto n48 = gate_not(a[5]);
  auto n50 = gate_and(n49, n48);
  auto n198 = gate_and(a[6], n50);
  auto n127 = gate_xor(b[1], n52);
  auto n216 = gate_and(n55, n127);
  auto n51 = gate_not(b[0]);
  auto n213 = gate_and(n52, n51);
  auto n165 = gate_not(n213);
  auto n167 = gate_not(n127);
  auto n68 = gate_not(n198);
  auto n60 = gate_not(n59);
  auto n61 = gate_and(n60, a[6]);
  auto n74 = gate_xor(n61, a[4]);
  auto n171 = gate_not(n153);
  auto n77 = gate_not(n76);
  auto n78 = gate_and(n77, a[6]);
  auto n98 = gate_xor(n78, a[3]);
  auto n175 = gate_not(n148);
  auto n179 = gate_not(n137);
  auto n101 = gate_not(n100);
  auto n102 = gate_and(n101, a[6]);
  auto n125 = gate_xor(n102, a[2]);
  auto n128 = gate_and(a[0], a[6]);
  auto n163 = gate_xor(n128, a[1]);
  auto n169 = gate_and(n165, n19);
  auto n166 = gate_not(n169);
  auto n214 = gate_xor(a[6], b[6]);
  auto n192 = gate_not(n214);
  auto n199 = gate_and(n198, n216);
  auto n200 = gate_and(b[0], n199);
  auto n201 = gate_xor(n214, n200);
  auto n215 = gate_and(n214, n213);
  auto n6 = gate_nand(n167, n68);
  auto n9 = gate_nand(n171, n68);
  auto n18 = gate_nand(n216, b[0]);
  auto n23 = gate_nand(n216, n215);
  auto n25 = gate_nand(b[0], n163);
  auto n27 = gate_nand(b[0], n125);
  auto n29 = gate_nand(b[0], n98);
  auto n30 = gate_nand(b[0], n74);
  auto n40 = gate_nand(b[0], n56);
  auto n58 = gate_and(n198, n18);
  auto n53 = gate_and(n165, n40);
  auto n62 = gate_and(n165, n30);
  auto n63 = gate_not(n62);
  auto n64 = gate_and(n63, n127);
  auto n94 = gate_and(n165, n29);
  auto n79 = gate_not(n94);
  auto n95 = gate_xor(n167, n94);
  auto n121 = gate_and(n165, n27);
  auto n103 = gate_not(n121);
  auto n122 = gate_xor(n167, n121);
  auto n158 = gate_and(n165, n25);
  auto n129 = gate_not(n158);
  auto n159 = gate_xor(n158, n167);
  auto n21 = gate_nand(n62, n167);
  auto n31 = gate_nand(n58, n127);
  auto n4 = gate_nand(n31, n53);
  auto n54 = gate_and(n4, n6);
  auto n197 = gate_and(n55, n54);
  auto n57 = gate_not(n197);
  auto n72 = gate_and(n56, n57);
  auto n87 = gate_and(n58, n57);
  auto n67 = gate_and(n87, n153);
  auto n65 = gate_and(n72, n21);
  auto n66 = gate_or(n65, n64);
  auto n69 = gate_or(n67, n66);
  auto n70 = gate_and(n69, n9);
  auto n196 = gate_and(n71, n70);
  auto n73 = gate_not(n196);
  auto n92 = gate_and(n72, n73);
  auto n112 = gate_and(n87, n73);
  auto n86 = gate_and(n112, n148);
  auto n75 = gate_and(n196, b[0]);
  auto n96 = gate_xor(n75, n74);
  auto n80 = gate_xor(n96, n127);
  auto n88 = gate_not(n87);
  auto n93 = gate_not(n112);
  auto n205 = gate_xor(n214, n196);
  auto n203 = gate_xor(n214, n197);
  auto n5 = gate_nand(n175, n88);
  auto n11 = gate_nand(n179, n93);
  auto n38 = gate_nand(n80, n79);
  auto n39 = gate_nand(n96, n127);
  auto n81 = gate_and(n39, n38);
  auto n82 = gate_not(n81);
  auto n83 = gate_and(n82, n153);
  auto n20 = gate_nand(n81, n171);
  auto n84 = gate_and(n92, n20);
  auto n85 = gate_or(n84, n83);
  auto n89 = gate_or(n86, n85);
  auto n90 = gate_and(n89, n5);
  auto n195 = gate_and(n91, n90);
  auto n111 = gate_not(n195);
  auto n116 = gate_and(n92, n111);
  auto n97 = gate_and(n195, n95);
  auto n119 = gate_xor(n97, n96);
  auto n107 = gate_xor(n119, n153);
  auto n99 = gate_and(n195, b[0]);
  auto n123 = gate_xor(n99, n98);
  auto n106 = gate_and(n123, n127);
  auto n104 = gate_xor(n123, n127);
  auto n105 = gate_and(n104, n103);
  auto n117 = gate_or(n106, n105);
  auto n109 = gate_not(n116);
  auto n143 = gate_and(n112, n111);
  auto n113 = gate_and(n143, n137);
  auto n118 = gate_xor(n153, n117);
  auto n207 = gate_xor(n214, n195);
  auto n2 = gate_nand(n109, n175);
  auto n17 = gate_nand(n116, n148);
  auto n36 = gate_nand(n107, n117);
  auto n37 = gate_nand(n119, n153);
  auto n108 = gate_and(n37, n36);
  auto n13 = gate_nand(n108, n17);
  auto n110 = gate_and(n13, n2);
  auto n114 = gate_and(n11, n110);
  auto n115 = gate_or(n114, n113);
  auto n194 = gate_and(n144, n115);
  auto n142 = gate_not(n194);
  auto n147 = gate_and(n116, n142);
  auto n120 = gate_and(n194, n118);
  auto n151 = gate_xor(n120, n119);
  auto n136 = gate_xor(n148, n151);
  auto n124 = gate_and(n194, n122);
  auto n156 = gate_xor(n124, n123);
  auto n135 = gate_and(n156, n153);
  auto n133 = gate_xor(n156, n153);
  auto n126 = gate_and(n194, b[0]);
  auto n160 = gate_xor(n126, n125);
  auto n132 = gate_and(n160, n127);
  auto n130 = gate_xor(n160, n127);
  auto n131 = gate_and(n130, n129);
  auto n154 = gate_or(n132, n131);
  auto n134 = gate_and(n133, n154);
  auto n149 = gate_or(n135, n134);
  auto n139 = gate_not(n147);
  auto n140 = gate_and(n179, n139);
  auto n190 = gate_and(n143, n142);
  auto n146 = gate_not(n190);
  auto n150 = gate_xor(n149, n148);
  auto n155 = gate_xor(n154, n153);
  auto n209 = gate_xor(n214, n194);
  auto n3 = gate_nand(n146, n183);
  auto n16 = gate_nand(n137, n147);
  auto n22 = gate_nand(n190, n144);
  auto n34 = gate_nand(n136, n149);
  auto n35 = gate_nand(n151, n148);
  auto n138 = gate_and(n35, n34);
  auto n141 = gate_and(n138, n16);
  auto n145 = gate_or(n141, n140);
  auto n15 = gate_nand(n145, n22);
  auto n162 = gate_and(n15, n3);
  auto n193 = gate_not(n162);
  auto n184 = gate_and(n147, n193);
  auto n152 = gate_and(n150, n162);
  auto n181 = gate_xor(n152, n151);
  auto n157 = gate_and(n155, n162);
  auto n177 = gate_xor(n157, n156);
  auto n161 = gate_and(n159, n162);
  auto n173 = gate_xor(n161, n160);
  auto n164 = gate_and(n162, b[0]);
  auto n168 = gate_xor(n164, n163);
  auto n170 = gate_not(n168);
  auto n187 = gate_not(n184);
  auto n211 = gate_xor(n193, n192);
  auto n1 = gate_nand(n193, n190);
  auto n7 = gate_nand(n170, n169);
  auto n24 = gate_nand(n168, n166);
  auto n8 = gate_nand(n167, n24);
  auto n172 = gate_and(n8, n7);
  auto n174 = gate_or(n173, n172);
  auto n26 = gate_nand(n173, n172);
  auto n14 = gate_nand(n171, n26);
  auto n176 = gate_and(n14, n174);
  auto n178 = gate_or(n177, n176);
  auto n28 = gate_nand(n177, n176);
  auto n10 = gate_nand(n175, n28);
  auto n180 = gate_and(n10, n178);
  auto n182 = gate_or(n181, n180);
  auto n33 = gate_nand(n181, n180);
  auto n12 = gate_nand(n179, n33);
  auto n185 = gate_and(n12, n182);
  auto n186 = gate_not(n185);
  auto n188 = gate_and(n187, n186);
  auto n32 = gate_nand(n184, n185);
  auto n189 = gate_and(n183, n32);
  auto n191 = gate_or(n189, n188);
  auto n217 = gate_and(n191, n1);
  auto n212 = gate_and(n217, n214);
  auto n210 = gate_and(n212, n211);
  auto n208 = gate_and(n210, n209);
  auto n206 = gate_and(n208, n207);
  auto n204 = gate_and(n206, n205);
  auto n202 = gate_and(n204, n203);
  y[6] = gate_xor(n202, n201);
  y[5] = gate_xor(n204, n203);
  y[4] = gate_xor(n206, n205);
  y[3] = gate_xor(n208, n207);
  y[2] = gate_xor(n210, n209);
  y[1] = gate_xor(n212, n211);
  y[0] = gate_xor(n23, n217);
}
template<> void $NameUint<7>::d_eq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n20 = gate_xnor(b[6], a[6]);
  auto n21 = gate_xnor(b[0], a[0]);
  auto n22 = gate_xnor(a[4], b[4]);
  auto n23 = gate_not(b[1]);
  auto n26 = gate_xor(n23, a[1]);
  auto n24 = gate_not(a[2]);
  auto n25 = gate_xor(n24, b[2]);
  auto n27 = gate_and(n26, n25);
  auto n28 = gate_and(n27, n20);
  auto n34 = gate_and(n28, n21);
  auto n29 = gate_not(b[5]);
  auto n32 = gate_xor(n29, a[5]);
  auto n30 = gate_not(b[3]);
  auto n31 = gate_xor(n30, a[3]);
  auto n33 = gate_and(n32, n31);
  auto n35 = gate_and(n34, n33);
  y[0] = gate_and(n35, n22);
}
template<> void $NameUint<7>::d_ge
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n62 = gate_not(a[5]);
  auto n63 = gate_not(a[4]);
  auto n64 = gate_not(b[4]);
  auto n65 = gate_not(b[3]);
  auto n66 = gate_not(a[3]);
  auto n67 = gate_not(a[2]);
  auto n68 = gate_not(b[2]);
  auto n69 = gate_not(b[1]);
  auto n70 = gate_not(a[0]);
  auto n73 = gate_and(b[0], n70);
  auto n71 = gate_not(a[1]);
  auto n72 = gate_and(b[1], n71);
  auto n74 = gate_or(n73, n72);
  auto n79 = gate_not(b[5]);
  auto n80 = gate_and(a[5], n79);
  auto n82 = gate_not(a[6]);
  auto n84 = gate_not(b[6]);
  auto n85 = gate_and(a[6], n84);
  auto n51 = gate_nand(b[2], n67);
  auto n52 = gate_nand(b[3], n66);
  auto n53 = gate_nand(b[4], n63);
  auto n54 = gate_nand(b[5], n62);
  auto n57 = gate_nand(b[6], n82);
  auto n58 = gate_nand(a[1], n69);
  auto n59 = gate_nand(a[4], n64);
  auto n60 = gate_nand(a[2], n68);
  auto n61 = gate_nand(a[3], n65);
  auto n78 = gate_and(n54, n53);
  auto n77 = gate_and(n59, n61);
  auto n76 = gate_and(n52, n51);
  auto n75 = gate_and(n60, n58);
  auto n56 = gate_nand(n75, n74);
  auto n50 = gate_nand(n76, n56);
  auto n55 = gate_nand(n77, n50);
  auto n81 = gate_and(n78, n55);
  auto n83 = gate_or(n81, n80);
  auto n86 = gate_and(n83, n57);
  y[0] = gate_or(n86, n85);
}
template<> void $NameUint<7>::d_gesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n62 = gate_not(a[5]);
  auto n63 = gate_not(a[4]);
  auto n64 = gate_not(b[4]);
  auto n65 = gate_not(b[3]);
  auto n66 = gate_not(a[3]);
  auto n67 = gate_not(a[2]);
  auto n68 = gate_not(b[2]);
  auto n69 = gate_not(b[1]);
  auto n70 = gate_not(a[0]);
  auto n73 = gate_and(b[0], n70);
  auto n71 = gate_not(a[1]);
  auto n72 = gate_and(b[1], n71);
  auto n74 = gate_or(n73, n72);
  auto n79 = gate_not(b[5]);
  auto n80 = gate_and(a[5], n79);
  auto n82 = gate_not(b[6]);
  auto n84 = gate_not(a[6]);
  auto n85 = gate_and(b[6], n84);
  auto n52 = gate_nand(b[3], n66);
  auto n53 = gate_nand(b[4], n63);
  auto n54 = gate_nand(b[2], n67);
  auto n56 = gate_nand(b[5], n62);
  auto n57 = gate_nand(a[2], n68);
  auto n58 = gate_nand(a[1], n69);
  auto n59 = gate_nand(a[3], n65);
  auto n60 = gate_nand(a[6], n82);
  auto n61 = gate_nand(a[4], n64);
  auto n78 = gate_and(n56, n53);
  auto n77 = gate_and(n61, n59);
  auto n76 = gate_and(n52, n54);
  auto n75 = gate_and(n57, n58);
  auto n50 = gate_nand(n75, n74);
  auto n55 = gate_nand(n76, n50);
  auto n51 = gate_nand(n77, n55);
  auto n81 = gate_and(n78, n51);
  auto n83 = gate_or(n81, n80);
  auto n86 = gate_and(n83, n60);
  y[0] = gate_or(n86, n85);
}
template<> void $NameUint<7>::d_gt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n66 = gate_not(a[5]);
  auto n67 = gate_not(a[4]);
  auto n68 = gate_not(b[4]);
  auto n69 = gate_not(b[3]);
  auto n70 = gate_not(a[3]);
  auto n71 = gate_not(a[2]);
  auto n72 = gate_not(a[1]);
  auto n73 = gate_not(b[0]);
  auto n75 = gate_not(b[2]);
  auto n76 = gate_not(b[1]);
  auto n81 = gate_not(b[5]);
  auto n82 = gate_and(a[5], n81);
  auto n84 = gate_not(a[6]);
  auto n86 = gate_not(b[6]);
  auto n87 = gate_and(a[6], n86);
  auto n54 = gate_nand(b[1], n72);
  auto n55 = gate_nand(b[3], n70);
  auto n57 = gate_nand(b[5], n66);
  auto n58 = gate_nand(b[6], n84);
  auto n59 = gate_nand(b[4], n67);
  auto n60 = gate_nand(b[2], n71);
  auto n62 = gate_nand(a[1], n76);
  auto n63 = gate_nand(a[4], n68);
  auto n64 = gate_nand(a[2], n75);
  auto n65 = gate_nand(a[3], n69);
  auto n80 = gate_and(n57, n59);
  auto n79 = gate_and(n63, n65);
  auto n78 = gate_and(n55, n60);
  auto n74 = gate_and(a[0], n54);
  auto n61 = gate_nand(n74, n73);
  auto n77 = gate_and(n61, n64);
  auto n53 = gate_nand(n77, n62);
  auto n52 = gate_nand(n78, n53);
  auto n56 = gate_nand(n79, n52);
  auto n83 = gate_and(n80, n56);
  auto n85 = gate_or(n83, n82);
  auto n88 = gate_and(n85, n58);
  y[0] = gate_or(n88, n87);
}
template<> void $NameUint<7>::d_gtsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n66 = gate_not(a[5]);
  auto n67 = gate_not(a[4]);
  auto n68 = gate_not(b[4]);
  auto n69 = gate_not(b[3]);
  auto n70 = gate_not(a[3]);
  auto n71 = gate_not(a[2]);
  auto n72 = gate_not(a[1]);
  auto n73 = gate_not(b[0]);
  auto n75 = gate_not(b[2]);
  auto n76 = gate_not(b[1]);
  auto n81 = gate_not(b[5]);
  auto n82 = gate_and(a[5], n81);
  auto n84 = gate_not(b[6]);
  auto n86 = gate_not(a[6]);
  auto n87 = gate_and(b[6], n86);
  auto n54 = gate_nand(b[2], n71);
  auto n55 = gate_nand(b[4], n67);
  auto n57 = gate_nand(b[5], n66);
  auto n58 = gate_nand(b[3], n70);
  auto n59 = gate_nand(b[1], n72);
  auto n61 = gate_nand(a[2], n75);
  auto n62 = gate_nand(a[1], n76);
  auto n63 = gate_nand(a[3], n69);
  auto n64 = gate_nand(a[6], n84);
  auto n65 = gate_nand(a[4], n68);
  auto n80 = gate_and(n57, n55);
  auto n79 = gate_and(n65, n63);
  auto n78 = gate_and(n58, n54);
  auto n74 = gate_and(a[0], n59);
  auto n60 = gate_nand(n74, n73);
  auto n77 = gate_and(n60, n61);
  auto n53 = gate_nand(n77, n62);
  auto n52 = gate_nand(n78, n53);
  auto n56 = gate_nand(n79, n52);
  auto n83 = gate_and(n80, n56);
  auto n85 = gate_or(n83, n82);
  auto n88 = gate_and(n85, n64);
  y[0] = gate_or(n88, n87);
}
template<> void $NameUint<7>::d_inc
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[0], a[1]);
  auto n2 = gate_and(a[0], a[1]);
  y[2] = gate_xor(n2, a[2]);
  auto n3 = gate_and(n2, a[2]);
  y[3] = gate_xor(n3, a[3]);
  auto n4 = gate_and(n3, a[3]);
  y[4] = gate_xor(n4, a[4]);
  auto n5 = gate_and(n4, a[4]);
  y[5] = gate_xor(n5, a[5]);
  auto n6 = gate_and(n5, a[5]);
  y[6] = gate_xor(a[6], n6);
}
template<> void $NameUint<7>::d_ineq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n23 = gate_xnor(b[1], a[1]);
  auto n24 = gate_xnor(a[4], b[4]);
  auto n25 = gate_xnor(a[5], b[5]);
  auto n26 = gate_not(b[0]);
  auto n29 = gate_xor(n26, a[0]);
  auto n27 = gate_not(a[3]);
  auto n28 = gate_xor(n27, b[3]);
  auto n30 = gate_and(n29, n28);
  auto n31 = gate_and(n30, n23);
  auto n37 = gate_and(n31, n25);
  auto n32 = gate_not(a[6]);
  auto n35 = gate_xor(n32, b[6]);
  auto n33 = gate_not(b[2]);
  auto n34 = gate_xor(n33, a[2]);
  auto n36 = gate_and(n35, n34);
  auto n38 = gate_and(n37, n36);
  y[0] = gate_nand(n38, n24);
}
template<> void $NameUint<7>::d_intmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  auto n28 = gate_not(a[5]);
  auto n27 = gate_not(a[6]);
  auto n32 = gate_and(n28, n27);
  auto n30 = gate_not(a[0]);
  auto n29 = gate_not(a[3]);
  auto n31 = gate_and(n30, n29);
  auto n34 = gate_and(n32, n31);
  auto n33 = gate_not(a[1]);
  auto n38 = gate_and(n34, n33);
  auto n36 = gate_not(a[2]);
  auto n35 = gate_not(a[4]);
  auto n37 = gate_and(n36, n35);
  auto n50 = gate_and(n38, n37);
  y[0] = gate_mux(b[0], c[0], n50);
  auto n49 = gate_not(n50);
  auto n40 = gate_and(b[1], n49);
  auto n39 = gate_and(n50, c[1]);
  y[1] = gate_or(n40, n39);
  auto n42 = gate_and(b[2], n49);
  auto n41 = gate_and(n50, c[2]);
  y[2] = gate_or(n42, n41);
  auto n44 = gate_and(b[3], n49);
  auto n43 = gate_and(n50, c[3]);
  y[3] = gate_or(n44, n43);
  auto n46 = gate_and(b[4], n49);
  auto n45 = gate_and(n50, c[4]);
  y[4] = gate_or(n46, n45);
  auto n48 = gate_and(b[5], n49);
  auto n47 = gate_and(n50, c[5]);
  y[5] = gate_or(n48, n47);
  auto n52 = gate_and(b[6], n49);
  auto n51 = gate_and(n50, c[6]);
  y[6] = gate_or(n52, n51);
}
template<> void $NameUint<7>::d_le
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n62 = gate_not(b[5]);
  auto n63 = gate_not(b[4]);
  auto n64 = gate_not(a[4]);
  auto n65 = gate_not(a[3]);
  auto n66 = gate_not(b[3]);
  auto n67 = gate_not(b[2]);
  auto n68 = gate_not(a[2]);
  auto n69 = gate_not(a[1]);
  auto n70 = gate_not(b[0]);
  auto n73 = gate_and(a[0], n70);
  auto n71 = gate_not(b[1]);
  auto n72 = gate_and(a[1], n71);
  auto n74 = gate_or(n73, n72);
  auto n79 = gate_not(a[5]);
  auto n80 = gate_and(b[5], n79);
  auto n82 = gate_not(b[6]);
  auto n84 = gate_not(a[6]);
  auto n85 = gate_and(b[6], n84);
  auto n51 = gate_nand(b[2], n68);
  auto n52 = gate_nand(b[3], n65);
  auto n53 = gate_nand(b[1], n69);
  auto n55 = gate_nand(b[4], n64);
  auto n56 = gate_nand(a[3], n66);
  auto n57 = gate_nand(a[2], n67);
  auto n59 = gate_nand(a[4], n63);
  auto n60 = gate_nand(a[5], n62);
  auto n61 = gate_nand(a[6], n82);
  auto n78 = gate_and(n60, n59);
  auto n77 = gate_and(n55, n52);
  auto n76 = gate_and(n56, n57);
  auto n75 = gate_and(n51, n53);
  auto n58 = gate_nand(n75, n74);
  auto n54 = gate_nand(n76, n58);
  auto n50 = gate_nand(n77, n54);
  auto n81 = gate_and(n78, n50);
  auto n83 = gate_or(n81, n80);
  auto n86 = gate_and(n83, n61);
  y[0] = gate_or(n86, n85);
}
template<> void $NameUint<7>::d_lesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n62 = gate_not(b[5]);
  auto n63 = gate_not(b[4]);
  auto n64 = gate_not(a[4]);
  auto n65 = gate_not(a[3]);
  auto n66 = gate_not(b[3]);
  auto n67 = gate_not(b[2]);
  auto n68 = gate_not(a[2]);
  auto n69 = gate_not(a[1]);
  auto n70 = gate_not(b[0]);
  auto n73 = gate_and(a[0], n70);
  auto n71 = gate_not(b[1]);
  auto n72 = gate_and(a[1], n71);
  auto n74 = gate_or(n73, n72);
  auto n79 = gate_not(a[5]);
  auto n80 = gate_and(b[5], n79);
  auto n82 = gate_not(a[6]);
  auto n84 = gate_not(b[6]);
  auto n85 = gate_and(a[6], n84);
  auto n51 = gate_nand(b[3], n65);
  auto n52 = gate_nand(b[2], n68);
  auto n53 = gate_nand(b[4], n64);
  auto n54 = gate_nand(b[1], n69);
  auto n56 = gate_nand(b[6], n82);
  auto n57 = gate_nand(a[2], n67);
  auto n59 = gate_nand(a[3], n66);
  auto n60 = gate_nand(a[5], n62);
  auto n61 = gate_nand(a[4], n63);
  auto n78 = gate_and(n60, n61);
  auto n77 = gate_and(n53, n51);
  auto n76 = gate_and(n59, n57);
  auto n75 = gate_and(n52, n54);
  auto n58 = gate_nand(n75, n74);
  auto n50 = gate_nand(n76, n58);
  auto n55 = gate_nand(n77, n50);
  auto n81 = gate_and(n78, n55);
  auto n83 = gate_or(n81, n80);
  auto n86 = gate_and(n83, n56);
  y[0] = gate_or(n86, n85);
}
template<> void $NameUint<7>::d_logand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n32 = gate_not(a[5]);
  auto n31 = gate_not(a[6]);
  auto n36 = gate_and(n32, n31);
  auto n34 = gate_not(a[0]);
  auto n33 = gate_not(a[3]);
  auto n35 = gate_and(n34, n33);
  auto n38 = gate_and(n36, n35);
  auto n37 = gate_not(a[1]);
  auto n42 = gate_and(n38, n37);
  auto n40 = gate_not(a[2]);
  auto n39 = gate_not(a[4]);
  auto n41 = gate_and(n40, n39);
  auto n44 = gate_not(b[0]);
  auto n43 = gate_not(b[6]);
  auto n48 = gate_and(n44, n43);
  auto n46 = gate_not(b[5]);
  auto n45 = gate_not(b[3]);
  auto n47 = gate_and(n46, n45);
  auto n54 = gate_and(n48, n47);
  auto n50 = gate_not(b[4]);
  auto n49 = gate_not(b[2]);
  auto n52 = gate_and(n50, n49);
  auto n51 = gate_not(b[1]);
  auto n53 = gate_and(n52, n51);
  auto n29 = gate_nand(n54, n53);
  auto n30 = gate_nand(n42, n41);
  y[0] = gate_and(n30, n29);
}
template<> void $NameUint<7>::d_lognot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n15 = gate_not(a[5]);
  auto n14 = gate_not(a[6]);
  auto n19 = gate_and(n15, n14);
  auto n17 = gate_not(a[0]);
  auto n16 = gate_not(a[3]);
  auto n18 = gate_and(n17, n16);
  auto n21 = gate_and(n19, n18);
  auto n20 = gate_not(a[1]);
  auto n25 = gate_and(n21, n20);
  auto n23 = gate_not(a[2]);
  auto n22 = gate_not(a[4]);
  auto n24 = gate_and(n23, n22);
  y[0] = gate_and(n25, n24);
}
template<> void $NameUint<7>::d_logor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n30 = gate_not(b[2]);
  auto n29 = gate_not(b[3]);
  auto n34 = gate_and(n30, n29);
  auto n32 = gate_not(b[1]);
  auto n31 = gate_not(b[6]);
  auto n33 = gate_and(n32, n31);
  auto n42 = gate_and(n34, n33);
  auto n36 = gate_not(b[5]);
  auto n35 = gate_not(b[4]);
  auto n40 = gate_and(n36, n35);
  auto n38 = gate_not(a[0]);
  auto n37 = gate_not(a[3]);
  auto n39 = gate_and(n38, n37);
  auto n41 = gate_and(n40, n39);
  auto n44 = gate_and(n42, n41);
  auto n43 = gate_not(a[2]);
  auto n54 = gate_and(n44, n43);
  auto n46 = gate_not(a[4]);
  auto n45 = gate_not(b[0]);
  auto n50 = gate_and(n46, n45);
  auto n48 = gate_not(a[5]);
  auto n47 = gate_not(a[6]);
  auto n49 = gate_and(n48, n47);
  auto n52 = gate_and(n50, n49);
  auto n51 = gate_not(a[1]);
  auto n53 = gate_and(n52, n51);
  y[0] = gate_nand(n54, n53);
}
template<> void $NameUint<7>::d_lt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n66 = gate_not(b[5]);
  auto n67 = gate_not(b[4]);
  auto n68 = gate_not(a[4]);
  auto n69 = gate_not(a[3]);
  auto n70 = gate_not(b[3]);
  auto n71 = gate_not(b[2]);
  auto n72 = gate_not(b[1]);
  auto n73 = gate_not(a[0]);
  auto n75 = gate_not(a[2]);
  auto n76 = gate_not(a[1]);
  auto n81 = gate_not(a[5]);
  auto n82 = gate_and(b[5], n81);
  auto n84 = gate_not(b[6]);
  auto n86 = gate_not(a[6]);
  auto n87 = gate_and(b[6], n86);
  auto n55 = gate_nand(b[2], n75);
  auto n56 = gate_nand(b[3], n69);
  auto n57 = gate_nand(b[1], n76);
  auto n59 = gate_nand(b[4], n68);
  auto n60 = gate_nand(a[2], n71);
  auto n61 = gate_nand(a[4], n67);
  auto n62 = gate_nand(a[1], n72);
  auto n63 = gate_nand(a[3], n70);
  auto n64 = gate_nand(a[5], n66);
  auto n65 = gate_nand(a[6], n84);
  auto n80 = gate_and(n64, n61);
  auto n79 = gate_and(n59, n56);
  auto n78 = gate_and(n63, n60);
  auto n74 = gate_and(b[0], n62);
  auto n53 = gate_nand(n74, n73);
  auto n77 = gate_and(n53, n55);
  auto n52 = gate_nand(n77, n57);
  auto n54 = gate_nand(n78, n52);
  auto n58 = gate_nand(n79, n54);
  auto n83 = gate_and(n80, n58);
  auto n85 = gate_or(n83, n82);
  auto n88 = gate_and(n85, n65);
  y[0] = gate_or(n88, n87);
}
template<> void $NameUint<7>::d_ltsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n66 = gate_not(b[5]);
  auto n67 = gate_not(b[4]);
  auto n68 = gate_not(a[4]);
  auto n69 = gate_not(a[3]);
  auto n70 = gate_not(b[3]);
  auto n71 = gate_not(b[2]);
  auto n72 = gate_not(b[1]);
  auto n73 = gate_not(a[0]);
  auto n75 = gate_not(a[2]);
  auto n76 = gate_not(a[1]);
  auto n81 = gate_not(a[5]);
  auto n82 = gate_and(b[5], n81);
  auto n84 = gate_not(a[6]);
  auto n86 = gate_not(b[6]);
  auto n87 = gate_and(a[6], n86);
  auto n54 = gate_nand(b[1], n76);
  auto n55 = gate_nand(b[3], n69);
  auto n57 = gate_nand(b[4], n68);
  auto n58 = gate_nand(b[2], n75);
  auto n60 = gate_nand(b[6], n84);
  auto n61 = gate_nand(a[2], n71);
  auto n62 = gate_nand(a[1], n72);
  auto n63 = gate_nand(a[3], n70);
  auto n64 = gate_nand(a[5], n66);
  auto n65 = gate_nand(a[4], n67);
  auto n80 = gate_and(n64, n65);
  auto n79 = gate_and(n57, n55);
  auto n78 = gate_and(n63, n61);
  auto n74 = gate_and(b[0], n62);
  auto n59 = gate_nand(n74, n73);
  auto n77 = gate_and(n59, n58);
  auto n52 = gate_nand(n77, n54);
  auto n56 = gate_nand(n78, n52);
  auto n53 = gate_nand(n79, n56);
  auto n83 = gate_and(n80, n53);
  auto n85 = gate_or(n83, n82);
  auto n88 = gate_and(n85, n60);
  y[0] = gate_or(n88, n87);
}
template<> void $NameUint<7>::d_mod
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n139 = gate_not(b[1]);
  auto n160 = gate_not(b[6]);
  auto n164 = gate_not(b[5]);
  auto n118 = gate_and(n160, n164);
  auto n169 = gate_not(b[4]);
  auto n56 = gate_and(n118, n169);
  auto n174 = gate_not(b[3]);
  auto n28 = gate_and(n56, n174);
  auto n179 = gate_not(b[2]);
  auto n32 = gate_and(n28, n179);
  auto n14 = gate_and(n32, b[0]);
  auto n15 = gate_not(b[0]);
  auto n16 = gate_not(a[6]);
  auto n18 = gate_not(a[5]);
  auto n21 = gate_not(a[4]);
  auto n37 = gate_and(b[0], n21);
  auto n22 = gate_not(n37);
  auto n41 = gate_not(a[3]);
  auto n61 = gate_and(b[0], n41);
  auto n42 = gate_not(n61);
  auto n62 = gate_xor(n61, b[1]);
  auto n67 = gate_not(a[2]);
  auto n93 = gate_and(b[0], n67);
  auto n68 = gate_not(n93);
  auto n94 = gate_xor(n93, b[1]);
  auto n99 = gate_not(a[1]);
  auto n133 = gate_and(b[0], n99);
  auto n100 = gate_not(n133);
  auto n134 = gate_xor(n133, b[1]);
  auto n140 = gate_not(a[0]);
  auto n183 = gate_and(b[0], n140);
  auto n141 = gate_not(n183);
  auto n184 = gate_xor(n183, b[1]);
  auto n1 = gate_nand(n139, n14);
  auto n2 = gate_nand(b[1], n16);
  auto n3 = gate_nand(b[0], n18);
  auto n5 = gate_nand(n139, n15);
  auto n20 = gate_and(a[6], n1);
  auto n17 = gate_and(n5, n2);
  auto n19 = gate_and(n32, n17);
  auto n7 = gate_nand(n19, n3);
  auto n31 = gate_and(n20, n7);
  auto n35 = gate_and(a[5], n7);
  auto n25 = gate_and(n35, n139);
  auto n23 = gate_xor(n35, n139);
  auto n24 = gate_and(n23, n22);
  auto n30 = gate_or(n25, n24);
  auto n26 = gate_xor(n179, n30);
  auto n27 = gate_xor(n31, n179);
  auto n29 = gate_and(n28, n27);
  auto n34 = gate_and(n30, n29);
  auto n33 = gate_and(n32, n31);
  auto n39 = gate_or(n34, n33);
  auto n36 = gate_and(n39, b[1]);
  auto n38 = gate_xor(n36, n35);
  auto n40 = gate_and(n39, b[0]);
  auto n63 = gate_xor(n40, a[4]);
  auto n45 = gate_and(n139, n63);
  auto n43 = gate_xor(n139, n63);
  auto n44 = gate_and(n43, n42);
  auto n57 = gate_or(n45, n44);
  auto n58 = gate_xor(n57, n179);
  auto n6 = gate_nand(n28, n26);
  auto n8 = gate_nand(n39, n37);
  auto n50 = gate_and(n31, n6);
  auto n59 = gate_and(n38, n8);
  auto n48 = gate_and(n179, n59);
  auto n46 = gate_xor(n179, n59);
  auto n47 = gate_and(n46, n57);
  auto n51 = gate_or(n48, n47);
  auto n49 = gate_xor(n174, n51);
  auto n54 = gate_and(n174, n50);
  auto n52 = gate_xor(n174, n50);
  auto n53 = gate_and(n52, n51);
  auto n55 = gate_or(n54, n53);
  auto n65 = gate_and(n56, n55);
  auto n60 = gate_and(n65, n58);
  auto n87 = gate_xor(n60, n59);
  auto n77 = gate_and(n87, n174);
  auto n75 = gate_xor(n174, n87);
  auto n64 = gate_and(n65, n62);
  auto n91 = gate_xor(n64, n63);
  auto n74 = gate_and(n91, n179);
  auto n72 = gate_xor(n179, n91);
  auto n66 = gate_and(n65, b[0]);
  auto n95 = gate_xor(n66, a[3]);
  auto n71 = gate_and(n139, n95);
  auto n69 = gate_xor(n139, n95);
  auto n70 = gate_and(n69, n68);
  auto n89 = gate_or(n71, n70);
  auto n73 = gate_and(n72, n89);
  auto n85 = gate_or(n74, n73);
  auto n76 = gate_and(n75, n85);
  auto n80 = gate_or(n77, n76);
  auto n78 = gate_xor(n169, n80);
  auto n86 = gate_xor(n174, n85);
  auto n90 = gate_xor(n179, n89);
  auto n9 = gate_nand(n56, n49);
  auto n10 = gate_nand(n118, n78);
  auto n79 = gate_and(n50, n9);
  auto n117 = gate_and(n79, n10);
  auto n83 = gate_and(n79, n169);
  auto n81 = gate_xor(n79, n169);
  auto n82 = gate_and(n81, n80);
  auto n84 = gate_or(n83, n82);
  auto n97 = gate_and(n118, n84);
  auto n88 = gate_and(n97, n86);
  auto n123 = gate_xor(n88, n87);
  auto n112 = gate_and(n123, n169);
  auto n110 = gate_xor(n169, n123);
  auto n92 = gate_and(n97, n90);
  auto n127 = gate_xor(n92, n91);
  auto n109 = gate_and(n127, n174);
  auto n107 = gate_xor(n174, n127);
  auto n96 = gate_and(n97, n94);
  auto n131 = gate_xor(n96, n95);
  auto n106 = gate_and(n131, n179);
  auto n104 = gate_xor(n179, n131);
  auto n98 = gate_and(n97, b[0]);
  auto n135 = gate_xor(n98, a[2]);
  auto n103 = gate_and(n139, n135);
  auto n101 = gate_xor(n139, n135);
  auto n102 = gate_and(n101, n100);
  auto n129 = gate_or(n103, n102);
  auto n105 = gate_and(n104, n129);
  auto n125 = gate_or(n106, n105);
  auto n108 = gate_and(n107, n125);
  auto n121 = gate_or(n109, n108);
  auto n111 = gate_and(n110, n121);
  auto n115 = gate_or(n112, n111);
  auto n113 = gate_xor(n164, n115);
  auto n157 = gate_not(n117);
  auto n114 = gate_xor(b[5], n157);
  auto n116 = gate_and(n115, n114);
  auto n120 = gate_and(n116, n160);
  auto n119 = gate_and(n118, n117);
  auto n137 = gate_or(n120, n119);
  auto n122 = gate_xor(n169, n121);
  auto n124 = gate_and(n137, n122);
  auto n166 = gate_xor(n124, n123);
  auto n156 = gate_and(n166, n164);
  auto n154 = gate_xor(n164, n166);
  auto n126 = gate_xor(n174, n125);
  auto n128 = gate_and(n137, n126);
  auto n171 = gate_xor(n128, n127);
  auto n153 = gate_and(n171, n169);
  auto n151 = gate_xor(n169, n171);
  auto n130 = gate_xor(n179, n129);
  auto n132 = gate_and(n137, n130);
  auto n176 = gate_xor(n132, n131);
  auto n150 = gate_and(n176, n174);
  auto n148 = gate_xor(n174, n176);
  auto n136 = gate_and(n137, n134);
  auto n181 = gate_xor(n136, n135);
  auto n147 = gate_and(n181, n179);
  auto n145 = gate_xor(n179, n181);
  auto n138 = gate_and(n137, b[0]);
  auto n185 = gate_xor(n138, a[1]);
  auto n144 = gate_and(n139, n185);
  auto n142 = gate_xor(n139, n185);
  auto n143 = gate_and(n142, n141);
  auto n178 = gate_or(n144, n143);
  auto n146 = gate_and(n145, n178);
  auto n173 = gate_or(n147, n146);
  auto n149 = gate_and(n148, n173);
  auto n168 = gate_or(n150, n149);
  auto n152 = gate_and(n151, n168);
  auto n163 = gate_or(n153, n152);
  auto n155 = gate_and(n154, n163);
  auto n161 = gate_or(n156, n155);
  auto n165 = gate_xor(n164, n163);
  auto n170 = gate_xor(n169, n168);
  auto n175 = gate_xor(n174, n173);
  auto n180 = gate_xor(n179, n178);
  auto n4 = gate_nand(b[6], n157);
  auto n11 = gate_nand(n113, n160);
  auto n12 = gate_nand(n161, n160);
  auto n162 = gate_and(n117, n11);
  auto n159 = gate_and(n161, n4);
  auto n158 = gate_and(n162, n160);
  auto n187 = gate_or(n159, n158);
  auto n167 = gate_and(n165, n187);
  y[5] = gate_xor(n167, n166);
  auto n172 = gate_and(n170, n187);
  y[4] = gate_xor(n172, n171);
  auto n177 = gate_and(n175, n187);
  y[3] = gate_xor(n177, n176);
  auto n182 = gate_and(n180, n187);
  y[2] = gate_xor(n182, n181);
  auto n186 = gate_and(n184, n187);
  y[1] = gate_xor(n186, n185);
  auto n188 = gate_and(n187, b[0]);
  y[0] = gate_xor(n188, a[0]);
  auto n13 = gate_nand(n187, n12);
  y[6] = gate_and(n162, n13);
}
template<> void $NameUint<7>::d_modsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n15 = gate_nand(a[0], b[0]);
  auto n38 = gate_not(a[1]);
  auto n37 = gate_not(a[0]);
  auto n109 = gate_and(n38, n37);
  auto n39 = gate_not(a[2]);
  auto n81 = gate_and(n109, n39);
  auto n40 = gate_not(a[3]);
  auto n59 = gate_and(n81, n40);
  auto n41 = gate_not(a[4]);
  auto n46 = gate_and(n59, n41);
  auto n49 = gate_not(b[6]);
  auto n174 = gate_xor(b[1], n49);
  auto n156 = gate_xor(b[6], b[4]);
  auto n216 = gate_not(n156);
  auto n188 = gate_xor(b[5], n49);
  auto n125 = gate_and(n216, n188);
  auto n129 = gate_xor(b[6], b[3]);
  auto n210 = gate_not(n129);
  auto n72 = gate_and(n125, n210);
  auto n98 = gate_xor(b[6], b[2]);
  auto n195 = gate_not(n98);
  auto n54 = gate_and(n72, n195);
  auto n42 = gate_and(b[0], n54);
  auto n43 = gate_not(a[5]);
  auto n47 = gate_not(n46);
  auto n48 = gate_and(n47, a[6]);
  auto n58 = gate_xor(n48, a[5]);
  auto n51 = gate_not(n58);
  auto n50 = gate_not(b[0]);
  auto n60 = gate_not(n59);
  auto n61 = gate_and(n60, a[6]);
  auto n79 = gate_xor(n61, a[4]);
  auto n202 = gate_not(n174);
  auto n82 = gate_not(n81);
  auto n83 = gate_and(n82, a[6]);
  auto n108 = gate_xor(n83, a[3]);
  auto n110 = gate_not(n109);
  auto n111 = gate_and(n110, a[6]);
  auto n142 = gate_xor(n111, a[2]);
  auto n144 = gate_and(a[6], a[0]);
  auto n172 = gate_xor(a[1], n144);
  auto n222 = gate_not(n188);
  auto n200 = gate_xor(a[0], a[6]);
  auto n2 = gate_not(n202);
  auto n12 = gate_nand(n50, n49);
  auto n25 = gate_nand(b[0], n172);
  auto n26 = gate_nand(b[0], n142);
  auto n27 = gate_nand(b[0], n108);
  auto n35 = gate_nand(b[0], n79);
  auto n75 = gate_and(n12, n35);
  auto n62 = gate_not(n75);
  auto n102 = gate_and(n12, n27);
  auto n84 = gate_not(n102);
  auto n103 = gate_xor(n202, n102);
  auto n137 = gate_and(n12, n26);
  auto n112 = gate_not(n137);
  auto n138 = gate_xor(n202, n137);
  auto n168 = gate_and(n12, n25);
  auto n145 = gate_not(n168);
  auto n169 = gate_xor(n202, n168);
  auto n203 = gate_and(n12, n15);
  auto n175 = gate_not(n203);
  auto n204 = gate_xor(n203, n202);
  auto n1 = gate_nand(n2, n42);
  auto n10 = gate_nand(n51, n12);
  auto n44 = gate_and(n46, n1);
  auto n45 = gate_and(n44, n43);
  auto n56 = gate_and(a[6], n45);
  auto n52 = gate_xor(n56, n174);
  auto n53 = gate_and(n52, n10);
  auto n57 = gate_and(n54, n53);
  auto n55 = gate_not(n57);
  auto n67 = gate_and(n56, n55);
  auto n70 = gate_and(n195, n67);
  auto n36 = gate_nand(n57, b[0]);
  auto n73 = gate_and(n58, n36);
  auto n65 = gate_and(n73, n174);
  auto n63 = gate_xor(n73, n174);
  auto n64 = gate_and(n63, n62);
  auto n68 = gate_or(n65, n64);
  auto n66 = gate_xor(n195, n68);
  auto n69 = gate_and(n68, n195);
  auto n71 = gate_or(n70, n69);
  auto n77 = gate_and(n72, n71);
  auto n74 = gate_and(n77, n202);
  auto n76 = gate_xor(n74, n73);
  auto n78 = gate_and(b[0], n77);
  auto n104 = gate_xor(n79, n78);
  auto n80 = gate_and(n104, n174);
  auto n86 = gate_not(n80);
  auto n85 = gate_xor(n104, n174);
  auto n6 = gate_nand(n72, n66);
  auto n16 = gate_nand(n77, n75);
  auto n34 = gate_nand(n85, n84);
  auto n92 = gate_and(n67, n6);
  auto n99 = gate_and(n76, n16);
  auto n90 = gate_and(n195, n99);
  auto n88 = gate_xor(n195, n99);
  auto n97 = gate_and(n86, n34);
  auto n87 = gate_not(n97);
  auto n89 = gate_and(n88, n87);
  auto n93 = gate_or(n90, n89);
  auto n91 = gate_xor(n210, n93);
  auto n95 = gate_and(n92, n210);
  auto n94 = gate_and(n210, n93);
  auto n96 = gate_or(n95, n94);
  auto n106 = gate_and(n125, n96);
  auto n100 = gate_and(n106, n98);
  auto n101 = gate_xor(n100, n99);
  auto n105 = gate_and(n106, n103);
  auto n135 = gate_xor(n105, n104);
  auto n116 = gate_xor(n135, n195);
  auto n107 = gate_and(b[0], n106);
  auto n139 = gate_xor(n108, n107);
  auto n115 = gate_and(n139, n2);
  auto n113 = gate_xor(n139, n174);
  auto n114 = gate_and(n113, n112);
  auto n133 = gate_or(n115, n114);
  auto n134 = gate_xor(n195, n133);
  auto n11 = gate_nand(n125, n91);
  auto n14 = gate_nand(n106, n97);
  auto n32 = gate_nand(n116, n133);
  auto n33 = gate_nand(n135, n195);
  auto n124 = gate_and(n92, n11);
  auto n130 = gate_and(n14, n101);
  auto n120 = gate_and(n130, n210);
  auto n118 = gate_xor(n210, n130);
  auto n128 = gate_and(n33, n32);
  auto n117 = gate_not(n128);
  auto n119 = gate_and(n118, n117);
  auto n122 = gate_or(n120, n119);
  auto n121 = gate_xor(n216, n122);
  auto n123 = gate_and(n122, n216);
  auto n127 = gate_and(n123, n188);
  auto n126 = gate_and(n125, n124);
  auto n141 = gate_or(n127, n126);
  auto n131 = gate_and(n141, n129);
  auto n132 = gate_xor(n131, n130);
  auto n136 = gate_and(n141, n134);
  auto n162 = gate_xor(n136, n135);
  auto n152 = gate_xor(n210, n162);
  auto n140 = gate_and(n141, n138);
  auto n166 = gate_xor(n140, n139);
  auto n151 = gate_and(n166, n195);
  auto n149 = gate_xor(n195, n166);
  auto n143 = gate_and(n141, b[0]);
  auto n170 = gate_xor(n143, n142);
  auto n148 = gate_and(n170, n2);
  auto n146 = gate_xor(n170, n174);
  auto n147 = gate_and(n146, n145);
  auto n164 = gate_or(n148, n147);
  auto n150 = gate_and(n149, n164);
  auto n160 = gate_or(n151, n150);
  auto n161 = gate_xor(n210, n160);
  auto n165 = gate_xor(n195, n164);
  auto n19 = gate_nand(n121, n188);
  auto n20 = gate_nand(n141, n128);
  auto n30 = gate_nand(n152, n160);
  auto n31 = gate_nand(n162, n210);
  auto n192 = gate_and(n124, n19);
  auto n157 = gate_and(n20, n132);
  auto n154 = gate_xor(n216, n157);
  auto n155 = gate_and(n31, n30);
  auto n153 = gate_not(n155);
  auto n7 = gate_nand(n154, n153);
  auto n8 = gate_nand(n157, n216);
  auto n22 = gate_nand(n192, n188);
  auto n189 = gate_and(n8, n7);
  auto n190 = gate_not(n189);
  auto n3 = gate_nand(n190, n188);
  auto n4 = gate_nand(n22, n3);
  auto n9 = gate_nand(n190, n222);
  auto n13 = gate_nand(n4, n155);
  auto n18 = gate_nand(n189, n188);
  auto n158 = gate_and(n4, n156);
  auto n159 = gate_xor(n158, n157);
  auto n223 = gate_and(n13, n159);
  auto n187 = gate_xor(n188, n223);
  auto n163 = gate_and(n4, n161);
  auto n218 = gate_xor(n163, n162);
  auto n185 = gate_xor(n216, n218);
  auto n167 = gate_and(n4, n165);
  auto n212 = gate_xor(n167, n166);
  auto n184 = gate_and(n212, n210);
  auto n182 = gate_xor(n210, n212);
  auto n171 = gate_and(n4, n169);
  auto n197 = gate_xor(n171, n170);
  auto n181 = gate_and(n197, n195);
  auto n179 = gate_xor(n197, n195);
  auto n173 = gate_and(n4, b[0]);
  auto n205 = gate_xor(n173, n172);
  auto n178 = gate_and(n205, n2);
  auto n176 = gate_xor(n205, n174);
  auto n177 = gate_and(n176, n175);
  auto n194 = gate_or(n178, n177);
  auto n180 = gate_and(n179, n194);
  auto n209 = gate_or(n181, n180);
  auto n183 = gate_and(n182, n209);
  auto n215 = gate_or(n184, n183);
  auto n191 = gate_and(n18, n9);
  auto n229 = gate_and(n192, n191);
  auto n193 = gate_not(n229);
  auto n196 = gate_xor(n195, n194);
  auto n211 = gate_xor(n210, n209);
  auto n217 = gate_xor(n216, n215);
  auto n24 = gate_nand(n223, n188);
  auto n28 = gate_nand(n185, n215);
  auto n29 = gate_nand(n218, n216);
  auto n221 = gate_and(n29, n28);
  auto n186 = gate_not(n221);
  auto n23 = gate_nand(n187, n186);
  auto n227 = gate_and(n24, n23);
  auto n228 = gate_not(n227);
  auto n5 = gate_nand(n227, n193);
  auto n17 = gate_nand(n5, n221);
  auto n21 = gate_nand(n229, n228);
  auto n198 = gate_and(n5, n196);
  auto n199 = gate_xor(n198, n197);
  auto n239 = gate_xor(a[6], n199);
  auto n201 = gate_and(b[0], n5);
  auto n243 = gate_xor(n201, n200);
  auto n208 = gate_and(a[6], n243);
  auto n206 = gate_and(n204, n5);
  auto n241 = gate_xor(n206, n205);
  auto n207 = gate_not(n241);
  auto n238 = gate_and(n208, n207);
  auto n237 = gate_and(n239, n238);
  auto n213 = gate_and(n5, n211);
  auto n214 = gate_xor(n213, n212);
  auto n236 = gate_xor(a[6], n214);
  auto n235 = gate_and(n237, n236);
  auto n219 = gate_and(n5, n217);
  auto n220 = gate_xor(n219, n218);
  auto n234 = gate_xor(a[6], n220);
  auto n233 = gate_and(n235, n234);
  auto n224 = gate_and(n5, n222);
  auto n225 = gate_xor(n224, n223);
  auto n226 = gate_and(n17, n225);
  auto n232 = gate_xor(a[6], n226);
  auto n231 = gate_and(n233, n232);
  auto n230 = gate_and(a[6], n21);
  y[6] = gate_xor(n231, n230);
  y[5] = gate_xor(n233, n232);
  y[4] = gate_xor(n235, n234);
  y[3] = gate_xor(n237, n236);
  y[2] = gate_xor(n239, n238);
  auto n240 = gate_not(n243);
  auto n242 = gate_and(n240, a[6]);
  y[1] = gate_xor(n242, n241);
  y[0] = gate_xor(a[6], n243);
}
template<> void $NameUint<7>::d_mul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(a[0], b[0]);
  auto n23 = gate_and(a[1], b[0]);
  auto n22 = gate_and(b[1], a[0]);
  y[1] = gate_xor(n23, n22);
  auto n25 = gate_and(n23, n22);
  auto n36 = gate_and(b[1], a[1]);
  auto n38 = gate_and(b[2], a[0]);
  auto n24 = gate_xor(n36, n38);
  auto n32 = gate_or(n25, n24);
  auto n33 = gate_and(b[0], a[2]);
  auto n40 = gate_and(a[3], b[0]);
  auto n39 = gate_and(b[1], a[2]);
  auto n31 = gate_xor(n40, n39);
  auto n28 = gate_and(a[0], b[3]);
  auto n59 = gate_and(a[1], b[3]);
  auto n37 = gate_or(n36, n59);
  auto n48 = gate_and(n38, n37);
  auto n47 = gate_and(n40, n39);
  auto n54 = gate_and(b[1], a[3]);
  auto n85 = gate_and(b[0], a[4]);
  auto n50 = gate_xor(n54, n85);
  auto n41 = gate_xor(n47, n50);
  auto n45 = gate_xor(n48, n41);
  auto n42 = gate_not(n45);
  auto n61 = gate_and(b[2], a[2]);
  auto n58 = gate_and(a[0], b[4]);
  auto n60 = gate_xor(n59, n58);
  auto n51 = gate_xor(n61, n60);
  auto n49 = gate_or(n48, n47);
  auto n78 = gate_and(n54, n85);
  auto n77 = gate_and(b[2], a[3]);
  auto n56 = gate_and(a[5], b[0]);
  auto n55 = gate_and(a[4], b[1]);
  auto n80 = gate_xor(n56, n55);
  auto n57 = gate_xor(n77, n80);
  auto n68 = gate_xor(n78, n57);
  auto n74 = gate_and(b[3], a[2]);
  auto n76 = gate_and(a[1], b[4]);
  auto n75 = gate_and(a[0], b[5]);
  auto n73 = gate_xor(n76, n75);
  auto n67 = gate_xor(n74, n73);
  auto n64 = gate_not(n67);
  auto n79 = gate_or(n78, n77);
  auto n86 = gate_not(n85);
  auto n87 = gate_and(n86, a[5]);
  auto n91 = gate_and(b[1], n87);
  auto n89 = gate_and(a[3], b[3]);
  auto n88 = gate_and(a[4], b[2]);
  auto n90 = gate_xor(n89, n88);
  auto n92 = gate_xor(n91, n90);
  auto n95 = gate_and(a[6], b[0]);
  auto n94 = gate_and(b[6], a[0]);
  auto n99 = gate_xor(n95, n94);
  auto n97 = gate_and(b[4], a[2]);
  auto n96 = gate_and(b[5], a[1]);
  auto n98 = gate_xor(n97, n96);
  auto n100 = gate_xor(n99, n98);
  auto n5 = gate_nand(n47, n48);
  auto n8 = gate_nand(n80, n79);
  auto n11 = gate_nand(n76, n75);
  auto n12 = gate_nand(n59, n58);
  auto n13 = gate_nand(n36, n38);
  auto n14 = gate_nand(n25, n24);
  auto n15 = gate_nand(n78, n77);
  auto n16 = gate_nand(n50, n49);
  auto n18 = gate_nand(n74, n73);
  auto n19 = gate_nand(n61, n60);
  auto n21 = gate_nand(n33, n32);
  auto n26 = gate_and(n14, n32);
  y[2] = gate_xor(n26, n33);
  auto n27 = gate_and(n13, a[1]);
  auto n29 = gate_and(b[2], n27);
  auto n30 = gate_xor(n29, n28);
  auto n35 = gate_or(n31, n30);
  auto n53 = gate_and(n5, n16);
  auto n65 = gate_and(n12, n19);
  auto n66 = gate_not(n65);
  auto n62 = gate_xor(n66, n64);
  auto n71 = gate_xor(n68, n62);
  auto n69 = gate_and(n67, n66);
  auto n70 = gate_or(n69, n68);
  auto n82 = gate_and(n18, n11);
  auto n81 = gate_and(n15, n8);
  auto n83 = gate_xor(n82, n81);
  auto n2 = gate_nand(n65, n64);
  auto n3 = gate_nand(n21, n14);
  auto n6 = gate_nand(n3, n35);
  auto n7 = gate_nand(n31, n30);
  auto n34 = gate_and(n7, n35);
  y[3] = gate_xor(n34, n3);
  auto n43 = gate_and(n6, n7);
  auto n44 = gate_not(n43);
  auto n103 = gate_and(n2, n70);
  auto n1 = gate_nand(n43, n42);
  auto n17 = gate_nand(n45, n44);
  auto n20 = gate_nand(n51, n1);
  auto n46 = gate_and(n1, n17);
  y[4] = gate_xor(n46, n51);
  auto n52 = gate_and(n17, n20);
  auto n72 = gate_or(n53, n52);
  auto n4 = gate_nand(n53, n52);
  auto n9 = gate_nand(n72, n71);
  auto n63 = gate_and(n4, n72);
  auto n84 = gate_and(n4, n9);
  auto n93 = gate_xor(n84, n83);
  auto n101 = gate_xor(n93, n92);
  auto n102 = gate_xor(n101, n100);
  y[6] = gate_xor(n103, n102);
  y[5] = gate_xnor(n63, n71);
}
template<> void $NameUint<7>::d_redand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n7 = gate_and(a[2], a[4]);
  auto n6 = gate_and(a[3], a[1]);
  auto n8 = gate_and(n7, n6);
  auto n10 = gate_and(n8, a[6]);
  auto n9 = gate_and(a[0], a[5]);
  y[0] = gate_and(n10, n9);
}
template<> void $NameUint<7>::d_rednand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n10 = gate_and(a[2], a[4]);
  auto n9 = gate_and(a[3], a[1]);
  auto n11 = gate_and(n10, n9);
  auto n13 = gate_and(n11, a[6]);
  auto n12 = gate_and(a[0], a[5]);
  y[0] = gate_nand(n13, n12);
}
template<> void $NameUint<7>::d_rednor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n15 = gate_not(a[5]);
  auto n14 = gate_not(a[6]);
  auto n19 = gate_and(n15, n14);
  auto n17 = gate_not(a[0]);
  auto n16 = gate_not(a[3]);
  auto n18 = gate_and(n17, n16);
  auto n21 = gate_and(n19, n18);
  auto n20 = gate_not(a[1]);
  auto n25 = gate_and(n21, n20);
  auto n23 = gate_not(a[2]);
  auto n22 = gate_not(a[4]);
  auto n24 = gate_and(n23, n22);
  y[0] = gate_and(n25, n24);
}
template<> void $NameUint<7>::d_redor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n16 = gate_not(a[5]);
  auto n15 = gate_not(a[6]);
  auto n20 = gate_and(n16, n15);
  auto n18 = gate_not(a[0]);
  auto n17 = gate_not(a[3]);
  auto n19 = gate_and(n18, n17);
  auto n22 = gate_and(n20, n19);
  auto n21 = gate_not(a[1]);
  auto n26 = gate_and(n22, n21);
  auto n24 = gate_not(a[2]);
  auto n23 = gate_not(a[4]);
  auto n25 = gate_and(n24, n23);
  y[0] = gate_nand(n26, n25);
}
template<> void $NameUint<7>::d_redxnor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n10 = gate_xor(a[1], a[6]);
  auto n9 = gate_xor(a[3], a[2]);
  auto n11 = gate_xor(a[0], a[5]);
  auto n8 = gate_xnor(n10, n9);
  auto n12 = gate_xor(n8, a[4]);
  y[0] = gate_xor(n12, n11);
}
template<> void $NameUint<7>::d_redxor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n7 = gate_xor(a[1], a[6]);
  auto n6 = gate_xor(a[3], a[2]);
  auto n8 = gate_xor(n7, n6);
  auto n10 = gate_xor(n8, a[4]);
  auto n9 = gate_xor(a[0], a[5]);
  y[0] = gate_xor(n10, n9);
}
template<> void $NameUint<7>::d_sll
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n83 = gate_nand(b[0], a[2]);
  auto n90 = gate_nand(b[0], a[0]);
  auto n91 = gate_nand(b[0], a[4]);
  auto n94 = gate_nand(b[0], a[5]);
  auto n96 = gate_nand(b[0], a[3]);
  auto n101 = gate_not(b[4]);
  auto n100 = gate_not(b[3]);
  auto n105 = gate_and(n101, n100);
  auto n103 = gate_not(b[6]);
  auto n102 = gate_not(b[5]);
  auto n104 = gate_and(n103, n102);
  auto n131 = gate_and(n105, n104);
  auto n139 = gate_not(b[1]);
  auto n117 = gate_not(b[0]);
  auto n130 = gate_not(b[2]);
  auto n109 = gate_and(a[2], n117);
  auto n108 = gate_and(b[0], a[1]);
  auto n125 = gate_or(n109, n108);
  auto n111 = gate_and(n125, n139);
  auto n138 = gate_and(a[0], n117);
  auto n110 = gate_and(b[1], n138);
  auto n135 = gate_or(n111, n110);
  auto n112 = gate_and(b[2], n135);
  auto n122 = gate_not(n138);
  auto n126 = gate_and(b[1], n125);
  auto n127 = gate_and(n126, n130);
  auto n137 = gate_and(n131, n130);
  y[2] = gate_and(n135, n137);
  auto n140 = gate_and(n138, n137);
  y[0] = gate_and(n140, n139);
  auto n82 = gate_nand(a[6], n117);
  auto n86 = gate_nand(b[2], n122);
  auto n89 = gate_nand(a[1], n117);
  auto n92 = gate_nand(a[4], n117);
  auto n93 = gate_nand(a[5], n117);
  auto n95 = gate_nand(a[3], n117);
  auto n106 = gate_and(n82, n94);
  auto n123 = gate_and(n92, n96);
  auto n133 = gate_and(n89, n90);
  auto n115 = gate_not(n133);
  auto n136 = gate_and(n139, n115);
  auto n120 = gate_and(b[2], n136);
  auto n116 = gate_and(n93, n91);
  auto n132 = gate_and(n95, n83);
  y[1] = gate_and(n137, n136);
  auto n84 = gate_nand(n139, n116);
  auto n85 = gate_nand(n139, n106);
  auto n87 = gate_nand(n123, n130);
  auto n88 = gate_nand(n132, n139);
  auto n97 = gate_nand(b[1], n133);
  auto n98 = gate_nand(b[1], n132);
  auto n99 = gate_nand(b[1], n123);
  auto n107 = gate_and(n85, n99);
  auto n113 = gate_and(n107, n130);
  auto n114 = gate_or(n113, n112);
  y[6] = gate_and(n131, n114);
  auto n118 = gate_and(n84, n98);
  auto n119 = gate_and(n118, n130);
  auto n121 = gate_or(n120, n119);
  y[5] = gate_and(n131, n121);
  auto n124 = gate_and(n86, n87);
  auto n128 = gate_and(n139, n124);
  auto n129 = gate_or(n128, n127);
  y[4] = gate_and(n131, n129);
  auto n134 = gate_and(n88, n97);
  y[3] = gate_and(n137, n134);
}
template<> void $NameUint<7>::d_slr
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n88 = gate_nand(b[0], a[2]);
  auto n90 = gate_nand(b[0], a[5]);
  auto n92 = gate_nand(b[0], a[4]);
  auto n95 = gate_nand(b[0], a[6]);
  auto n97 = gate_nand(b[0], a[3]);
  auto n99 = gate_nand(b[0], a[1]);
  auto n130 = gate_not(b[0]);
  auto n112 = gate_and(a[6], n130);
  auto n132 = gate_not(b[1]);
  auto n116 = gate_and(n112, n132);
  auto n105 = gate_not(b[4]);
  auto n104 = gate_not(b[3]);
  auto n109 = gate_and(n105, n104);
  auto n107 = gate_not(b[6]);
  auto n106 = gate_not(b[5]);
  auto n108 = gate_and(n107, n106);
  auto n137 = gate_and(n109, n108);
  auto n136 = gate_not(b[2]);
  auto n123 = gate_and(n137, n136);
  y[6] = gate_and(n116, n123);
  auto n125 = gate_and(b[2], n137);
  auto n120 = gate_and(n125, n116);
  auto n82 = gate_nand(a[0], n130);
  auto n89 = gate_nand(a[2], n130);
  auto n91 = gate_nand(a[5], n130);
  auto n93 = gate_nand(a[4], n130);
  auto n96 = gate_nand(b[1], n112);
  auto n98 = gate_nand(a[3], n130);
  auto n100 = gate_nand(a[1], n130);
  auto n114 = gate_and(n91, n95);
  auto n110 = gate_not(n114);
  auto n126 = gate_and(n132, n110);
  y[5] = gate_and(n123, n126);
  auto n117 = gate_and(n93, n90);
  auto n111 = gate_not(n117);
  auto n122 = gate_and(n98, n92);
  auto n129 = gate_and(n89, n97);
  auto n121 = gate_and(n100, n88);
  auto n127 = gate_and(n126, n125);
  auto n134 = gate_and(b[1], n129);
  auto n131 = gate_and(n82, n99);
  auto n133 = gate_and(n132, n131);
  auto n135 = gate_or(n134, n133);
  auto n83 = gate_nand(n132, n121);
  auto n84 = gate_nand(n129, n132);
  auto n85 = gate_nand(n132, n111);
  auto n86 = gate_nand(n136, n135);
  auto n87 = gate_nand(n122, n132);
  auto n101 = gate_nand(b[1], n122);
  auto n102 = gate_nand(b[1], n117);
  auto n103 = gate_nand(b[1], n114);
  auto n138 = gate_and(n85, n96);
  auto n113 = gate_not(n138);
  y[4] = gate_and(n123, n113);
  auto n115 = gate_and(n87, n103);
  y[3] = gate_and(n123, n115);
  auto n118 = gate_and(n84, n102);
  auto n119 = gate_and(n123, n118);
  y[2] = gate_or(n120, n119);
  auto n124 = gate_and(n83, n101);
  auto n128 = gate_and(n124, n123);
  y[1] = gate_or(n128, n127);
  auto n139 = gate_and(n137, n86);
  auto n94 = gate_nand(b[2], n138);
  y[0] = gate_and(n139, n94);
}
template<> void $NameUint<7>::d_srasig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto _y6 = gate_buf(a[6]);
  auto n90 = gate_nand(b[0], a[3]);
  auto n117 = gate_nand(b[0], a[5]);
  auto n139 = gate_and(_y6, b[1]);
  auto n156 = gate_not(n139);
  auto n124 = gate_not(b[4]);
  auto n123 = gate_not(b[3]);
  auto n128 = gate_and(n124, n123);
  auto n126 = gate_not(b[6]);
  auto n125 = gate_not(b[5]);
  auto n127 = gate_and(n126, n125);
  auto n155 = gate_and(n128, n127);
  auto n163 = gate_not(b[2]);
  auto n143 = gate_and(n155, n163);
  auto n129 = gate_not(n143);
  auto n142 = gate_not(b[1]);
  auto n141 = gate_not(b[0]);
  auto n160 = gate_and(n142, n141);
  auto n158 = gate_and(b[0], n142);
  auto n133 = gate_and(b[1], a[5]);
  auto n137 = gate_and(n141, n133);
  auto n135 = gate_and(a[3], n141);
  auto n134 = gate_and(b[0], a[4]);
  auto n148 = gate_or(n135, n134);
  auto n136 = gate_and(n148, n142);
  auto n138 = gate_or(n137, n136);
  auto n152 = gate_not(n155);
  auto n157 = gate_not(a[1]);
  auto n159 = gate_not(a[0]);
  y[6] = gate_buf(_y6);
  auto n98 = gate_nand(n158, n157);
  auto n101 = gate_nand(n160, n159);
  auto n105 = gate_nand(a[2], n158);
  auto n106 = gate_nand(a[2], n141);
  auto n107 = gate_nand(b[1], n148);
  auto n108 = gate_nand(a[4], n141);
  auto n112 = gate_nand(a[1], n160);
  auto n116 = gate_nand(n138, n143);
  auto n118 = gate_nand(a[5], n160);
  auto n119 = gate_nand(_y6, n152);
  auto n120 = gate_nand(n158, _y6);
  auto n121 = gate_nand(_y6, n129);
  auto n122 = gate_nand(b[0], n139);
  auto n132 = gate_and(n156, n121);
  auto n146 = gate_and(n118, n120);
  auto n130 = gate_not(n146);
  auto n144 = gate_and(n108, n117);
  auto n131 = gate_not(n144);
  auto n153 = gate_and(n142, n131);
  auto n140 = gate_and(n116, n122);
  auto n161 = gate_and(n90, n106);
  auto n147 = gate_and(n146, b[2]);
  auto n149 = gate_and(n107, n112);
  auto n150 = gate_and(n149, n105);
  auto n154 = gate_not(n153);
  auto n162 = gate_and(n98, n101);
  auto n92 = gate_nand(n143, n130);
  auto n94 = gate_nand(n156, n147);
  y[3] = gate_nand(n140, n121);
  auto n102 = gate_nand(n161, n142);
  auto n104 = gate_nand(n150, n163);
  y[5] = gate_nand(n132, n92);
  auto n111 = gate_nand(b[2], n154);
  auto n113 = gate_nand(n143, n153);
  auto n114 = gate_nand(n161, b[1]);
  auto n115 = gate_nand(b[1], n144);
  auto n145 = gate_and(n143, n102);
  auto n151 = gate_and(n155, n94);
  auto n91 = gate_nand(n151, n104);
  auto n93 = gate_nand(n145, n115);
  auto n95 = gate_nand(n162, n114);
  y[2] = gate_nand(n121, n93);
  y[1] = gate_nand(n91, n119);
  auto n103 = gate_nand(n155, n111);
  y[4] = gate_nand(n132, n113);
  auto n165 = gate_and(n156, n103);
  auto n164 = gate_and(n163, n95);
  auto n166 = gate_or(n165, n164);
  y[0] = gate_nand(n119, n166);
}
template<> void $NameUint<7>::d_sub
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n6 = gate_not(b[1]);
  auto n7 = gate_xor(a[1], n6);
  auto n5 = gate_not(a[0]);
  auto n10 = gate_not(b[2]);
  auto n12 = gate_xor(a[2], n10);
  auto n9 = gate_and(a[1], n6);
  auto n15 = gate_not(b[3]);
  auto n17 = gate_xor(a[3], n15);
  auto n14 = gate_and(a[2], n10);
  auto n20 = gate_not(b[4]);
  auto n22 = gate_xor(a[4], n20);
  auto n19 = gate_and(a[3], n15);
  auto n27 = gate_not(b[5]);
  auto n26 = gate_xor(a[5], n27);
  auto n24 = gate_and(a[4], n20);
  auto n28 = gate_xor(a[6], b[6]);
  auto n2 = gate_nand(b[0], n5);
  auto n3 = gate_nand(a[5], n27);
  y[1] = gate_xor(n7, n2);
  auto n8 = gate_and(n7, n2);
  auto n11 = gate_or(n9, n8);
  y[2] = gate_xor(n12, n11);
  auto n13 = gate_and(n12, n11);
  auto n16 = gate_or(n14, n13);
  y[3] = gate_xor(n17, n16);
  auto n18 = gate_and(n17, n16);
  auto n21 = gate_or(n19, n18);
  y[4] = gate_xor(n22, n21);
  auto n23 = gate_and(n22, n21);
  auto n25 = gate_or(n24, n23);
  y[5] = gate_xor(n26, n25);
  auto n4 = gate_nand(n26, n25);
  auto n29 = gate_and(n4, n3);
  y[6] = gate_xor(n29, n28);
}
template<> void $NameUint<7>::d_uminus
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_buf(a[0]);
  auto n16 = gate_not(a[6]);
  auto n14 = gate_not(y[0]);
  auto n13 = gate_not(a[1]);
  auto n24 = gate_and(n14, n13);
  auto n23 = gate_not(a[2]);
  auto n22 = gate_and(n24, n23);
  auto n21 = gate_not(a[3]);
  auto n20 = gate_and(n22, n21);
  auto n19 = gate_not(a[4]);
  auto n18 = gate_and(n20, n19);
  auto n17 = gate_not(a[5]);
  auto n15 = gate_and(n18, n17);
  y[6] = gate_xor(n16, n15);
  y[5] = gate_xor(n18, n17);
  y[4] = gate_xor(n20, n19);
  y[3] = gate_xor(n22, n21);
  y[2] = gate_xor(n24, n23);
  y[1] = gate_xor(y[0], a[1]);
}
