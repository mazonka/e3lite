// Copyright 2022 MoMA Lab, NYU Abu Dhabi (wp.nyu.edu/momalab/)
template<> void $NameUint<8>::d_add
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n3 = gate_xor(b[1], a[1]);
  auto n2 = gate_and(a[0], b[0]);
  y[1] = gate_xor(n3, n2);
  auto n7 = gate_xor(b[2], a[2]);
  auto n5 = gate_and(b[1], a[1]);
  auto n4 = gate_and(n3, n2);
  auto n6 = gate_or(n5, n4);
  y[2] = gate_xor(n7, n6);
  auto n11 = gate_xor(b[3], a[3]);
  auto n9 = gate_and(b[2], a[2]);
  auto n8 = gate_and(n7, n6);
  auto n10 = gate_or(n9, n8);
  y[3] = gate_xor(n11, n10);
  auto n15 = gate_xor(b[4], a[4]);
  auto n13 = gate_and(b[3], a[3]);
  auto n12 = gate_and(n11, n10);
  auto n14 = gate_or(n13, n12);
  y[4] = gate_xor(n15, n14);
  auto n19 = gate_xor(b[5], a[5]);
  auto n17 = gate_and(b[4], a[4]);
  auto n16 = gate_and(n15, n14);
  auto n18 = gate_or(n17, n16);
  y[5] = gate_xor(n19, n18);
  auto n23 = gate_xor(b[6], a[6]);
  auto n21 = gate_and(b[5], a[5]);
  auto n20 = gate_and(n19, n18);
  auto n22 = gate_or(n21, n20);
  y[6] = gate_xor(n23, n22);
  auto n25 = gate_and(n23, n22);
  auto n24 = gate_and(b[6], a[6]);
  auto n27 = gate_or(n25, n24);
  auto n26 = gate_xor(a[7], b[7]);
  y[7] = gate_xor(n27, n26);
}
template<> void $NameUint<8>::d_bitand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[7] = gate_and(b[7], a[7]);
  y[6] = gate_and(b[6], a[6]);
  y[5] = gate_and(b[5], a[5]);
  y[4] = gate_and(b[4], a[4]);
  y[3] = gate_and(b[3], a[3]);
  y[2] = gate_and(b[2], a[2]);
  y[1] = gate_and(b[1], a[1]);
  y[0] = gate_and(b[0], a[0]);
}
template<> void $NameUint<8>::d_bitnot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[7] = gate_not(a[7]);
  y[6] = gate_not(a[6]);
  y[5] = gate_not(a[5]);
  y[4] = gate_not(a[4]);
  y[3] = gate_not(a[3]);
  y[2] = gate_not(a[2]);
  y[1] = gate_not(a[1]);
  y[0] = gate_not(a[0]);
}
template<> void $NameUint<8>::d_bitor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[7] = gate_or(a[7], b[7]);
  y[6] = gate_or(a[6], b[6]);
  y[5] = gate_or(a[5], b[5]);
  y[4] = gate_or(a[4], b[4]);
  y[3] = gate_or(a[3], b[3]);
  y[2] = gate_or(a[2], b[2]);
  y[1] = gate_or(a[1], b[1]);
  y[0] = gate_or(a[0], b[0]);
}
template<> void $NameUint<8>::d_bitxor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[7] = gate_xor(b[7], a[7]);
  y[6] = gate_xor(b[6], a[6]);
  y[5] = gate_xor(b[5], a[5]);
  y[4] = gate_xor(b[4], a[4]);
  y[3] = gate_xor(b[3], a[3]);
  y[2] = gate_xor(b[2], a[2]);
  y[1] = gate_xor(b[1], a[1]);
  y[0] = gate_xor(b[0], a[0]);
}
template<> void $NameUint<8>::d_boolmul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(a[0], b[0]);
  y[1] = gate_and(a[0], b[1]);
  y[2] = gate_and(a[0], b[2]);
  y[3] = gate_and(a[0], b[3]);
  y[4] = gate_and(a[0], b[4]);
  y[5] = gate_and(a[0], b[5]);
  y[6] = gate_and(a[0], b[6]);
  y[7] = gate_and(a[0], b[7]);
}
template<> void $NameUint<8>::d_boolmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  y[0] = gate_mux(c[0], b[0], a[0]);
  y[1] = gate_mux(c[1], b[1], a[0]);
  y[2] = gate_mux(c[2], b[2], a[0]);
  y[3] = gate_mux(c[3], b[3], a[0]);
  y[4] = gate_mux(c[4], b[4], a[0]);
  y[5] = gate_mux(c[5], b[5], a[0]);
  y[6] = gate_mux(c[6], b[6], a[0]);
  y[7] = gate_mux(c[7], b[7], a[0]);
}
template<> void $NameUint<8>::d_dec
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[1], y[0]);
  auto n2 = gate_not(a[1]);
  auto n4 = gate_and(n2, y[0]);
  y[2] = gate_xor(a[2], n4);
  auto n3 = gate_not(a[2]);
  auto n6 = gate_and(n4, n3);
  y[3] = gate_xor(a[3], n6);
  auto n5 = gate_not(a[3]);
  auto n8 = gate_and(n6, n5);
  y[4] = gate_xor(a[4], n8);
  auto n7 = gate_not(a[4]);
  auto n10 = gate_and(n8, n7);
  y[5] = gate_xor(a[5], n10);
  auto n9 = gate_not(a[5]);
  auto n12 = gate_and(n10, n9);
  y[6] = gate_xor(a[6], n12);
  auto n11 = gate_not(a[6]);
  auto n13 = gate_and(n12, n11);
  y[7] = gate_xor(a[7], n13);
}
template<> void $NameUint<8>::d_div
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n170 = gate_not(b[7]);
  auto n165 = gate_not(b[6]);
  auto n126 = gate_and(n170, n165);
  auto n214 = gate_not(b[5]);
  auto n78 = gate_and(n126, n214);
  auto n207 = gate_not(b[4]);
  auto n74 = gate_and(n78, n207);
  auto n202 = gate_not(b[3]);
  auto n56 = gate_and(n74, n202);
  auto n195 = gate_not(b[2]);
  auto n45 = gate_and(n56, n195);
  auto n43 = gate_not(a[6]);
  auto n11 = gate_nand(b[0], n43);
  auto n49 = gate_not(a[7]);
  auto n9 = gate_nand(b[1], n49);
  auto n12 = gate_nand(b[0], n49);
  auto n44 = gate_and(n11, n9);
  y[6] = gate_and(n45, n44);
  auto n5 = gate_nand(y[6], b[0]);
  auto n179 = gate_not(b[1]);
  auto n46 = gate_and(n179, n45);
  y[7] = gate_and(n46, n12);
  auto n57 = gate_and(a[6], n5);
  auto n42 = gate_nand(n57, n179);
  auto n48 = gate_xor(n57, n179);
  auto n61 = gate_not(a[5]);
  auto n59 = gate_and(b[0], n61);
  auto n47 = gate_not(n59);
  auto n41 = gate_nand(n48, n47);
  auto n51 = gate_and(n42, n41);
  auto n50 = gate_and(b[2], n49);
  auto n55 = gate_or(n51, n50);
  auto n53 = gate_not(y[6]);
  auto n52 = gate_not(y[7]);
  auto n54 = gate_and(n53, n52);
  auto n72 = gate_and(a[7], n54);
  auto n31 = gate_nand(n72, n195);
  auto n13 = gate_nand(n55, n31);
  y[5] = gate_and(n56, n13);
  auto n20 = gate_nand(y[5], n59);
  auto n58 = gate_and(y[5], b[1]);
  auto n60 = gate_xor(n58, n57);
  auto n81 = gate_and(n60, n20);
  auto n39 = gate_nand(n195, n81);
  auto n67 = gate_xor(n195, n81);
  auto n62 = gate_and(y[5], b[0]);
  auto n84 = gate_xor(n62, n61);
  auto n63 = gate_not(n84);
  auto n66 = gate_and(n179, n63);
  auto n64 = gate_xor(n179, n63);
  auto n87 = gate_not(a[4]);
  auto n7 = gate_nand(b[0], n87);
  auto n65 = gate_and(n64, n7);
  auto n79 = gate_or(n66, n65);
  auto n40 = gate_nand(n67, n79);
  auto n70 = gate_and(n40, n39);
  auto n68 = gate_not(n72);
  auto n69 = gate_and(b[3], n68);
  auto n73 = gate_or(n70, n69);
  auto n71 = gate_not(y[5]);
  auto n76 = gate_and(n72, n71);
  auto n30 = gate_nand(n76, n202);
  auto n15 = gate_nand(n73, n30);
  y[4] = gate_and(n74, n15);
  auto n75 = gate_not(y[4]);
  auto n125 = gate_and(n76, n75);
  auto n77 = gate_not(n125);
  auto n14 = gate_nand(b[4], n77);
  auto n99 = gate_and(n78, n14);
  auto n98 = gate_xor(n207, n125);
  auto n80 = gate_xor(n79, n195);
  auto n82 = gate_and(y[4], n80);
  auto n102 = gate_xor(n82, n81);
  auto n38 = gate_nand(n102, n202);
  auto n96 = gate_xor(n102, n202);
  auto n83 = gate_xor(n7, n179);
  auto n85 = gate_and(y[4], n83);
  auto n106 = gate_xor(n85, n84);
  auto n86 = gate_not(n106);
  auto n95 = gate_and(n86, n195);
  auto n93 = gate_xor(n195, n86);
  auto n88 = gate_and(y[4], b[0]);
  auto n109 = gate_xor(n88, n87);
  auto n89 = gate_not(n109);
  auto n92 = gate_and(n179, n89);
  auto n90 = gate_xor(n179, n89);
  auto n112 = gate_not(a[3]);
  auto n6 = gate_nand(b[0], n112);
  auto n91 = gate_and(n90, n6);
  auto n104 = gate_or(n92, n91);
  auto n94 = gate_and(n93, n104);
  auto n100 = gate_or(n95, n94);
  auto n37 = gate_nand(n96, n100);
  auto n97 = gate_and(n38, n37);
  auto n29 = gate_nand(n98, n97);
  y[3] = gate_and(n99, n29);
  auto n101 = gate_xor(n202, n100);
  auto n103 = gate_and(y[3], n101);
  auto n132 = gate_xor(n103, n102);
  auto n36 = gate_nand(n132, n207);
  auto n123 = gate_xor(n132, n207);
  auto n105 = gate_xor(n195, n104);
  auto n107 = gate_and(y[3], n105);
  auto n27 = gate_xnor(n107, n106);
  auto n122 = gate_and(n27, n202);
  auto n120 = gate_xor(n202, n27);
  auto n108 = gate_xor(n6, n179);
  auto n110 = gate_and(y[3], n108);
  auto n139 = gate_xor(n110, n109);
  auto n111 = gate_not(n139);
  auto n119 = gate_and(n111, n195);
  auto n117 = gate_xor(n195, n111);
  auto n113 = gate_and(y[3], b[0]);
  auto n8 = gate_xnor(n113, n112);
  auto n116 = gate_and(n179, n8);
  auto n114 = gate_xor(n179, n8);
  auto n144 = gate_not(a[2]);
  auto n4 = gate_nand(b[0], n144);
  auto n115 = gate_and(n114, n4);
  auto n137 = gate_or(n116, n115);
  auto n118 = gate_and(n117, n137);
  auto n134 = gate_or(n119, n118);
  auto n121 = gate_and(n120, n134);
  auto n130 = gate_or(n122, n121);
  auto n35 = gate_nand(n123, n130);
  auto n127 = gate_and(n36, n35);
  auto n124 = gate_not(y[3]);
  auto n164 = gate_and(n125, n124);
  auto n160 = gate_not(n164);
  auto n16 = gate_nand(n127, n160);
  auto n129 = gate_and(n126, n16);
  auto n128 = gate_xor(n127, n160);
  auto n19 = gate_nand(n128, b[5]);
  y[2] = gate_and(n129, n19);
  auto n131 = gate_xor(n207, n130);
  auto n133 = gate_and(y[2], n131);
  auto n173 = gate_xor(n133, n132);
  auto n33 = gate_nand(n173, n214);
  auto n159 = gate_xor(n173, n214);
  auto n135 = gate_xor(n202, n134);
  auto n136 = gate_and(y[2], n135);
  auto n209 = gate_xor(n136, n27);
  auto n158 = gate_and(n209, n207);
  auto n156 = gate_xor(n207, n209);
  auto n138 = gate_xor(n195, n137);
  auto n140 = gate_and(y[2], n138);
  auto n177 = gate_xor(n140, n139);
  auto n141 = gate_not(n177);
  auto n155 = gate_and(n141, n202);
  auto n153 = gate_xor(n202, n141);
  auto n142 = gate_xor(n4, n179);
  auto n143 = gate_and(y[2], n142);
  auto n197 = gate_xor(n143, n8);
  auto n152 = gate_and(n197, n195);
  auto n150 = gate_xor(n195, n197);
  auto n145 = gate_and(y[2], b[0]);
  auto n181 = gate_xor(n145, n144);
  auto n146 = gate_not(n181);
  auto n149 = gate_and(n179, n146);
  auto n147 = gate_xor(n179, n146);
  auto n183 = gate_not(a[1]);
  auto n3 = gate_nand(b[0], n183);
  auto n148 = gate_and(n147, n3);
  auto n194 = gate_or(n149, n148);
  auto n151 = gate_and(n150, n194);
  auto n175 = gate_or(n152, n151);
  auto n154 = gate_and(n153, n175);
  auto n206 = gate_or(n155, n154);
  auto n157 = gate_and(n156, n206);
  auto n171 = gate_or(n158, n157);
  auto n34 = gate_nand(n159, n171);
  auto n162 = gate_and(n34, n33);
  auto n161 = gate_and(b[6], n160);
  auto n166 = gate_or(n162, n161);
  auto n163 = gate_not(y[2]);
  auto n168 = gate_and(n164, n163);
  auto n28 = gate_nand(n168, n165);
  auto n17 = gate_nand(n166, n28);
  y[1] = gate_and(n170, n17);
  auto n167 = gate_not(y[1]);
  auto n169 = gate_and(n168, n167);
  auto n220 = gate_and(n170, n169);
  auto n218 = gate_xor(n170, n169);
  auto n172 = gate_xor(n171, n214);
  auto n174 = gate_and(n172, y[1]);
  auto n32 = gate_xnor(n174, n173);
  auto n10 = gate_nand(b[6], n32);
  auto n216 = gate_xor(b[6], n32);
  auto n176 = gate_xor(n175, n202);
  auto n178 = gate_and(n176, y[1]);
  auto n205 = gate_xor(n178, n177);
  auto n21 = gate_nand(b[4], n205);
  auto n204 = gate_xor(b[4], n205);
  auto n180 = gate_xor(n179, n3);
  auto n182 = gate_and(n180, y[1]);
  auto n193 = gate_xor(n182, n181);
  auto n25 = gate_nand(b[2], n193);
  auto n192 = gate_xor(b[2], n193);
  auto n184 = gate_and(y[1], b[0]);
  auto n185 = gate_xor(n184, n183);
  auto n190 = gate_and(n185, b[1]);
  auto n188 = gate_xor(n185, b[1]);
  auto n186 = gate_not(a[0]);
  auto n187 = gate_and(b[0], n186);
  auto n189 = gate_and(n188, n187);
  auto n191 = gate_or(n190, n189);
  auto n26 = gate_nand(n192, n191);
  auto n201 = gate_and(n26, n25);
  auto n1 = gate_nand(n202, n201);
  auto n200 = gate_xor(n202, n201);
  auto n196 = gate_xor(n195, n194);
  auto n198 = gate_and(n196, y[1]);
  auto n199 = gate_xor(n198, n197);
  auto n24 = gate_nand(n200, n199);
  auto n203 = gate_and(n24, n1);
  auto n22 = gate_nand(n204, n203);
  auto n213 = gate_and(n22, n21);
  auto n2 = gate_nand(n214, n213);
  auto n212 = gate_xor(n214, n213);
  auto n208 = gate_xor(n207, n206);
  auto n210 = gate_and(n208, y[1]);
  auto n211 = gate_xor(n210, n209);
  auto n23 = gate_nand(n212, n211);
  auto n215 = gate_and(n23, n2);
  auto n18 = gate_nand(n216, n215);
  auto n217 = gate_and(n18, n10);
  auto n219 = gate_and(n218, n217);
  y[0] = gate_or(n220, n219);
}
template<> void $NameUint<8>::d_divsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n262 = gate_xor(a[7], b[7]);
  auto n259 = gate_not(b[7]);
  auto n1 = gate_xnor(b[1], n259);
  auto n5 = gate_not(n1);
  auto n183 = gate_xor(b[5], n259);
  auto n226 = gate_not(n183);
  auto n166 = gate_not(a[1]);
  auto n199 = gate_not(a[0]);
  auto n130 = gate_and(n166, n199);
  auto n43 = gate_not(a[2]);
  auto n101 = gate_and(n130, n43);
  auto n44 = gate_not(a[3]);
  auto n83 = gate_and(n101, n44);
  auto n45 = gate_not(a[4]);
  auto n60 = gate_and(n83, n45);
  auto n46 = gate_not(a[5]);
  auto n50 = gate_and(n60, n46);
  auto n47 = gate_not(n50);
  auto n48 = gate_and(n47, a[7]);
  auto n51 = gate_not(a[6]);
  auto n49 = gate_xor(n48, n51);
  auto n42 = gate_nand(b[0], n49);
  auto n59 = gate_not(n49);
  auto n228 = gate_xor(b[6], n259);
  auto n118 = gate_and(n228, n183);
  auto n219 = gate_xor(b[4], n259);
  auto n79 = gate_and(n118, n219);
  auto n191 = gate_xor(b[3], n259);
  auto n75 = gate_and(n79, n191);
  auto n208 = gate_xor(b[2], n259);
  auto n260 = gate_not(b[0]);
  auto n26 = gate_nand(b[7], n260);
  auto n54 = gate_and(n26, n42);
  auto n53 = gate_not(n54);
  auto n52 = gate_and(a[7], n50);
  auto n241 = gate_and(n52, n51);
  auto n55 = gate_and(n54, n241);
  auto n61 = gate_not(n60);
  auto n62 = gate_and(n61, a[7]);
  auto n81 = gate_xor(n62, a[5]);
  auto n63 = gate_mux(n259, n81, b[0]);
  auto n66 = gate_not(n63);
  auto n19 = gate_nand(n1, n66);
  auto n65 = gate_xor(n1, n66);
  auto n68 = gate_not(n208);
  auto n6 = gate_not(n68);
  auto n58 = gate_and(n75, n6);
  auto n264 = gate_and(n58, n5);
  auto n25 = gate_nand(n264, b[0]);
  auto n71 = gate_and(n241, n25);
  auto n67 = gate_not(n71);
  auto n21 = gate_nand(n68, n67);
  auto n22 = gate_nand(n53, n67);
  auto n56 = gate_and(n5, n22);
  auto n57 = gate_or(n56, n55);
  auto n240 = gate_and(n58, n57);
  auto n70 = gate_not(n240);
  auto n76 = gate_and(n59, n70);
  auto n64 = gate_not(n76);
  auto n11 = gate_nand(n65, n64);
  auto n69 = gate_and(n11, n19);
  auto n73 = gate_and(n69, n21);
  auto n78 = gate_and(n71, n70);
  auto n72 = gate_and(n78, n6);
  auto n74 = gate_or(n73, n72);
  auto n239 = gate_and(n75, n74);
  auto n77 = gate_not(n239);
  auto n94 = gate_and(n76, n77);
  auto n2 = gate_nand(n94, n6);
  auto n215 = gate_not(n191);
  auto n113 = gate_and(n78, n77);
  auto n80 = gate_not(n113);
  auto n8 = gate_nand(n215, n80);
  auto n93 = gate_and(n79, n8);
  auto n92 = gate_xor(n215, n80);
  auto n90 = gate_xor(n94, n208);
  auto n82 = gate_and(n239, b[0]);
  auto n98 = gate_xor(n82, n81);
  auto n88 = gate_and(n98, n5);
  auto n86 = gate_xor(n98, n5);
  auto n84 = gate_not(n83);
  auto n85 = gate_and(n84, a[7]);
  auto n99 = gate_xor(n85, a[4]);
  auto n95 = gate_mux(n259, n99, b[0]);
  auto n87 = gate_and(n86, n95);
  auto n89 = gate_or(n88, n87);
  auto n41 = gate_nand(n90, n89);
  auto n91 = gate_and(n41, n2);
  auto n12 = gate_nand(n92, n91);
  auto n238 = gate_and(n93, n12);
  auto n112 = gate_not(n238);
  auto n119 = gate_and(n94, n112);
  auto n96 = gate_xor(n95, n5);
  auto n97 = gate_and(n96, n238);
  auto n122 = gate_xor(n98, n97);
  auto n4 = gate_nand(n122, n6);
  auto n107 = gate_xor(n122, n208);
  auto n100 = gate_and(n238, b[0]);
  auto n126 = gate_xor(n100, n99);
  auto n106 = gate_and(n126, n5);
  auto n104 = gate_xor(n126, n5);
  auto n102 = gate_not(n101);
  auto n103 = gate_and(n102, a[7]);
  auto n128 = gate_xor(n103, a[3]);
  auto n124 = gate_mux(n259, n128, b[0]);
  auto n105 = gate_and(n104, n124);
  auto n120 = gate_or(n106, n105);
  auto n40 = gate_nand(n107, n120);
  auto n110 = gate_and(n4, n40);
  auto n13 = gate_nand(n215, n110);
  auto n109 = gate_xor(n215, n110);
  auto n108 = gate_not(n119);
  auto n10 = gate_nand(n109, n108);
  auto n111 = gate_and(n10, n13);
  auto n116 = gate_and(n111, n219);
  auto n114 = gate_xor(n111, n219);
  auto n147 = gate_and(n113, n112);
  auto n115 = gate_and(n114, n147);
  auto n117 = gate_or(n116, n115);
  auto n237 = gate_and(n118, n117);
  auto n146 = gate_not(n237);
  auto n151 = gate_and(n119, n146);
  auto n143 = gate_not(n219);
  auto n121 = gate_xor(n208, n120);
  auto n123 = gate_and(n237, n121);
  auto n154 = gate_xor(n123, n122);
  auto n39 = gate_nand(n154, n191);
  auto n139 = gate_xor(n154, n191);
  auto n125 = gate_xor(n5, n124);
  auto n127 = gate_and(n237, n125);
  auto n158 = gate_xor(n127, n126);
  auto n138 = gate_and(n158, n6);
  auto n136 = gate_xor(n158, n208);
  auto n129 = gate_and(n237, b[0]);
  auto n163 = gate_xor(n129, n128);
  auto n135 = gate_and(n163, n5);
  auto n133 = gate_xor(n163, n5);
  auto n131 = gate_not(n130);
  auto n132 = gate_and(n131, a[7]);
  auto n164 = gate_xor(n132, a[2]);
  auto n160 = gate_mux(n259, n164, b[0]);
  auto n134 = gate_and(n133, n160);
  auto n156 = gate_or(n135, n134);
  auto n137 = gate_and(n136, n156);
  auto n152 = gate_or(n138, n137);
  auto n38 = gate_nand(n139, n152);
  auto n142 = gate_and(n39, n38);
  auto n18 = gate_nand(n143, n142);
  auto n141 = gate_xor(n143, n142);
  auto n140 = gate_not(n151);
  auto n9 = gate_nand(n141, n140);
  auto n145 = gate_and(n9, n18);
  auto n144 = gate_not(n147);
  auto n17 = gate_nand(n226, n144);
  auto n149 = gate_and(n145, n17);
  auto n185 = gate_and(n147, n146);
  auto n148 = gate_and(n185, n183);
  auto n150 = gate_or(n149, n148);
  auto n236 = gate_and(n150, n228);
  auto n184 = gate_not(n236);
  auto n227 = gate_and(n151, n184);
  auto n29 = gate_nand(n227, n183);
  auto n182 = gate_xor(n227, n183);
  auto n153 = gate_xor(n191, n152);
  auto n155 = gate_and(n236, n153);
  auto n222 = gate_xor(n155, n154);
  auto n180 = gate_and(n222, n219);
  auto n178 = gate_xor(n219, n222);
  auto n157 = gate_xor(n6, n156);
  auto n159 = gate_and(n236, n157);
  auto n193 = gate_xor(n159, n158);
  auto n177 = gate_and(n193, n191);
  auto n175 = gate_xor(n191, n193);
  auto n161 = gate_xor(n160, n5);
  auto n162 = gate_and(n161, n236);
  auto n211 = gate_xor(n163, n162);
  auto n174 = gate_and(n211, n6);
  auto n172 = gate_xor(n211, n208);
  auto n165 = gate_and(n236, b[0]);
  auto n198 = gate_xor(n165, n164);
  auto n171 = gate_and(n198, n5);
  auto n169 = gate_xor(n198, n5);
  auto n167 = gate_and(a[0], a[7]);
  auto n200 = gate_xor(n167, n166);
  auto n168 = gate_mux(b[7], n200, b[0]);
  auto n195 = gate_not(n168);
  auto n170 = gate_and(n169, n195);
  auto n209 = gate_or(n171, n170);
  auto n173 = gate_and(n172, n209);
  auto n190 = gate_or(n174, n173);
  auto n176 = gate_and(n175, n190);
  auto n220 = gate_or(n177, n176);
  auto n179 = gate_and(n178, n220);
  auto n181 = gate_or(n180, n179);
  auto n37 = gate_nand(n182, n181);
  auto n189 = gate_and(n37, n29);
  auto n188 = gate_not(n228);
  auto n23 = gate_nand(n189, n188);
  auto n187 = gate_xor(n189, n188);
  auto n232 = gate_and(n185, n184);
  auto n186 = gate_not(n232);
  auto n24 = gate_nand(n187, n186);
  auto n257 = gate_and(n24, n23);
  auto n192 = gate_xor(n191, n190);
  auto n194 = gate_and(n257, n192);
  auto n218 = gate_xor(n194, n193);
  auto n196 = gate_xor(n195, n5);
  auto n197 = gate_and(n196, n257);
  auto n207 = gate_xor(n198, n197);
  auto n3 = gate_nand(n207, n6);
  auto n206 = gate_xor(n207, n208);
  auto n204 = gate_mux(b[7], n199, b[0]);
  auto n20 = gate_nand(n204, n1);
  auto n203 = gate_xor(n204, n1);
  auto n201 = gate_and(n257, b[0]);
  auto n202 = gate_xor(n201, n200);
  auto n30 = gate_nand(n203, n202);
  auto n205 = gate_and(n30, n20);
  auto n31 = gate_nand(n206, n205);
  auto n214 = gate_and(n31, n3);
  auto n14 = gate_nand(n215, n214);
  auto n213 = gate_xor(n215, n214);
  auto n210 = gate_xor(n209, n208);
  auto n212 = gate_and(n257, n210);
  auto n32 = gate_xnor(n212, n211);
  auto n15 = gate_nand(n213, n32);
  auto n217 = gate_and(n15, n14);
  auto n33 = gate_nand(n218, n217);
  auto n216 = gate_xor(n218, n217);
  auto n34 = gate_nand(n216, n219);
  auto n225 = gate_and(n34, n33);
  auto n16 = gate_nand(n226, n225);
  auto n224 = gate_xor(n226, n225);
  auto n221 = gate_xor(n220, n219);
  auto n35 = gate_nand(n257, n221);
  auto n223 = gate_xor(n35, n222);
  auto n36 = gate_nand(n224, n223);
  auto n231 = gate_and(n36, n16);
  auto n234 = gate_not(n257);
  auto n7 = gate_nand(n234, n232);
  auto n230 = gate_and(n227, n234);
  auto n27 = gate_nand(n231, n230);
  auto n229 = gate_xor(n231, n230);
  auto n28 = gate_nand(n229, n228);
  auto n233 = gate_and(n28, n27);
  auto n256 = gate_and(n233, n7);
  auto n235 = gate_and(n262, n256);
  auto n255 = gate_and(n235, n234);
  auto n254 = gate_xor(n262, n236);
  auto n253 = gate_and(n255, n254);
  auto n252 = gate_xor(n262, n237);
  auto n251 = gate_and(n253, n252);
  auto n250 = gate_xor(n262, n238);
  auto n249 = gate_and(n251, n250);
  auto n248 = gate_xor(n262, n239);
  auto n247 = gate_and(n249, n248);
  auto n246 = gate_xor(n262, n240);
  auto n245 = gate_and(n247, n246);
  auto n242 = gate_and(n241, n264);
  auto n243 = gate_and(b[0], n242);
  auto n244 = gate_xor(n243, n262);
  y[7] = gate_xor(n245, n244);
  y[6] = gate_xor(n247, n246);
  y[5] = gate_xor(n249, n248);
  y[4] = gate_xor(n251, n250);
  y[3] = gate_xor(n253, n252);
  y[2] = gate_xor(n255, n254);
  auto n265 = gate_not(n256);
  auto n258 = gate_and(n265, n262);
  y[1] = gate_xor(n258, n257);
  auto n261 = gate_and(n260, n259);
  auto n263 = gate_and(n262, n261);
  auto n266 = gate_and(n264, n263);
  y[0] = gate_xor(n266, n265);
}
template<> void $NameUint<8>::d_eq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n23 = gate_xnor(a[0], b[0]);
  auto n24 = gate_xnor(a[1], b[1]);
  auto n25 = gate_xnor(a[2], b[2]);
  auto n26 = gate_xnor(a[3], b[3]);
  auto n27 = gate_xnor(b[4], a[4]);
  auto n28 = gate_xnor(b[5], a[5]);
  auto n29 = gate_not(a[6]);
  auto n32 = gate_xor(n29, b[6]);
  auto n30 = gate_not(a[7]);
  auto n31 = gate_xor(n30, b[7]);
  auto n33 = gate_and(n32, n31);
  auto n34 = gate_and(n33, n23);
  auto n35 = gate_and(n34, n24);
  auto n36 = gate_and(n35, n25);
  auto n37 = gate_and(n36, n26);
  auto n38 = gate_and(n37, n28);
  y[0] = gate_and(n38, n27);
}
template<> void $NameUint<8>::d_ge
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n75 = gate_not(a[4]);
  auto n53 = gate_nand(b[4], n75);
  auto n74 = gate_xor(b[4], n75);
  auto n72 = gate_not(b[3]);
  auto n62 = gate_nand(a[3], n72);
  auto n71 = gate_xor(a[3], n72);
  auto n69 = gate_not(a[2]);
  auto n52 = gate_nand(b[2], n69);
  auto n68 = gate_xor(b[2], n69);
  auto n64 = gate_not(a[0]);
  auto n51 = gate_nand(b[0], n64);
  auto n60 = gate_nand(a[1], n51);
  auto n66 = gate_xor(a[1], n51);
  auto n65 = gate_not(b[1]);
  auto n61 = gate_nand(n66, n65);
  auto n67 = gate_and(n61, n60);
  auto n56 = gate_nand(n68, n67);
  auto n70 = gate_and(n56, n52);
  auto n63 = gate_nand(n71, n70);
  auto n73 = gate_and(n63, n62);
  auto n54 = gate_nand(n74, n73);
  auto n78 = gate_and(n54, n53);
  auto n58 = gate_nand(a[5], n78);
  auto n77 = gate_xor(a[5], n78);
  auto n76 = gate_not(b[5]);
  auto n59 = gate_nand(n77, n76);
  auto n81 = gate_and(n59, n58);
  auto n57 = gate_nand(b[6], n81);
  auto n80 = gate_xor(b[6], n81);
  auto n79 = gate_not(a[6]);
  auto n55 = gate_nand(n80, n79);
  auto n82 = gate_and(n55, n57);
  auto n86 = gate_and(n82, a[7]);
  auto n84 = gate_xor(n82, a[7]);
  auto n83 = gate_not(b[7]);
  auto n85 = gate_and(n84, n83);
  y[0] = gate_or(n86, n85);
}
template<> void $NameUint<8>::d_gesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n75 = gate_not(a[4]);
  auto n54 = gate_nand(b[4], n75);
  auto n74 = gate_xor(b[4], n75);
  auto n72 = gate_not(b[3]);
  auto n58 = gate_nand(a[3], n72);
  auto n71 = gate_xor(a[3], n72);
  auto n69 = gate_not(a[2]);
  auto n52 = gate_nand(b[2], n69);
  auto n68 = gate_xor(b[2], n69);
  auto n64 = gate_not(a[0]);
  auto n51 = gate_nand(b[0], n64);
  auto n62 = gate_nand(a[1], n51);
  auto n66 = gate_xor(a[1], n51);
  auto n65 = gate_not(b[1]);
  auto n63 = gate_nand(n66, n65);
  auto n67 = gate_and(n63, n62);
  auto n53 = gate_nand(n68, n67);
  auto n70 = gate_and(n53, n52);
  auto n59 = gate_nand(n71, n70);
  auto n73 = gate_and(n59, n58);
  auto n57 = gate_nand(n74, n73);
  auto n78 = gate_and(n57, n54);
  auto n60 = gate_nand(a[5], n78);
  auto n77 = gate_xor(a[5], n78);
  auto n76 = gate_not(b[5]);
  auto n61 = gate_nand(n77, n76);
  auto n81 = gate_and(n61, n60);
  auto n56 = gate_nand(b[6], n81);
  auto n80 = gate_xor(b[6], n81);
  auto n79 = gate_not(a[6]);
  auto n55 = gate_nand(n80, n79);
  auto n82 = gate_and(n55, n56);
  auto n86 = gate_and(n82, b[7]);
  auto n84 = gate_xor(n82, b[7]);
  auto n83 = gate_not(a[7]);
  auto n85 = gate_and(n84, n83);
  y[0] = gate_or(n86, n85);
}
template<> void $NameUint<8>::d_gt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n76 = gate_not(a[4]);
  auto n53 = gate_nand(b[4], n76);
  auto n75 = gate_xor(b[4], n76);
  auto n73 = gate_not(b[3]);
  auto n62 = gate_nand(a[3], n73);
  auto n72 = gate_xor(a[3], n73);
  auto n70 = gate_not(a[2]);
  auto n52 = gate_nand(b[2], n70);
  auto n69 = gate_xor(b[2], n70);
  auto n64 = gate_not(b[0]);
  auto n67 = gate_and(a[0], n64);
  auto n60 = gate_nand(n67, a[1]);
  auto n66 = gate_xor(n67, a[1]);
  auto n65 = gate_not(b[1]);
  auto n61 = gate_nand(n66, n65);
  auto n68 = gate_and(n61, n60);
  auto n57 = gate_nand(n69, n68);
  auto n71 = gate_and(n57, n52);
  auto n63 = gate_nand(n72, n71);
  auto n74 = gate_and(n63, n62);
  auto n54 = gate_nand(n75, n74);
  auto n79 = gate_and(n54, n53);
  auto n58 = gate_nand(a[5], n79);
  auto n78 = gate_xor(a[5], n79);
  auto n77 = gate_not(b[5]);
  auto n59 = gate_nand(n78, n77);
  auto n82 = gate_and(n59, n58);
  auto n56 = gate_nand(b[6], n82);
  auto n81 = gate_xor(b[6], n82);
  auto n80 = gate_not(a[6]);
  auto n55 = gate_nand(n81, n80);
  auto n83 = gate_and(n55, n56);
  auto n87 = gate_and(n83, a[7]);
  auto n85 = gate_xor(n83, a[7]);
  auto n84 = gate_not(b[7]);
  auto n86 = gate_and(n85, n84);
  y[0] = gate_or(n87, n86);
}
template<> void $NameUint<8>::d_gtsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n76 = gate_not(a[4]);
  auto n54 = gate_nand(b[4], n76);
  auto n75 = gate_xor(b[4], n76);
  auto n73 = gate_not(b[3]);
  auto n58 = gate_nand(a[3], n73);
  auto n72 = gate_xor(a[3], n73);
  auto n70 = gate_not(a[2]);
  auto n52 = gate_nand(b[2], n70);
  auto n69 = gate_xor(b[2], n70);
  auto n64 = gate_not(b[0]);
  auto n67 = gate_and(a[0], n64);
  auto n62 = gate_nand(n67, a[1]);
  auto n66 = gate_xor(n67, a[1]);
  auto n65 = gate_not(b[1]);
  auto n63 = gate_nand(n66, n65);
  auto n68 = gate_and(n63, n62);
  auto n53 = gate_nand(n69, n68);
  auto n71 = gate_and(n53, n52);
  auto n59 = gate_nand(n72, n71);
  auto n74 = gate_and(n59, n58);
  auto n57 = gate_nand(n75, n74);
  auto n79 = gate_and(n57, n54);
  auto n60 = gate_nand(a[5], n79);
  auto n78 = gate_xor(a[5], n79);
  auto n77 = gate_not(b[5]);
  auto n61 = gate_nand(n78, n77);
  auto n82 = gate_and(n61, n60);
  auto n56 = gate_nand(b[6], n82);
  auto n81 = gate_xor(b[6], n82);
  auto n80 = gate_not(a[6]);
  auto n55 = gate_nand(n81, n80);
  auto n83 = gate_and(n55, n56);
  auto n87 = gate_and(n83, b[7]);
  auto n85 = gate_xor(n83, b[7]);
  auto n84 = gate_not(a[7]);
  auto n86 = gate_and(n85, n84);
  y[0] = gate_or(n87, n86);
}
template<> void $NameUint<8>::d_inc
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[0], a[1]);
  auto n2 = gate_and(a[0], a[1]);
  y[2] = gate_xor(n2, a[2]);
  auto n3 = gate_and(n2, a[2]);
  y[3] = gate_xor(n3, a[3]);
  auto n4 = gate_and(n3, a[3]);
  y[4] = gate_xor(n4, a[4]);
  auto n5 = gate_and(n4, a[4]);
  y[5] = gate_xor(n5, a[5]);
  auto n6 = gate_and(n5, a[5]);
  y[6] = gate_xor(n6, a[6]);
  auto n7 = gate_and(n6, a[6]);
  y[7] = gate_xor(a[7], n7);
}
template<> void $NameUint<8>::d_ineq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n25 = gate_xnor(b[7], a[7]);
  auto n27 = gate_xnor(b[2], a[2]);
  auto n28 = gate_xnor(b[3], a[3]);
  auto n29 = gate_xnor(b[4], a[4]);
  auto n30 = gate_xnor(b[5], a[5]);
  auto n31 = gate_xnor(b[6], a[6]);
  auto n32 = gate_not(a[0]);
  auto n35 = gate_xor(n32, b[0]);
  auto n33 = gate_not(a[1]);
  auto n34 = gate_xor(n33, b[1]);
  auto n36 = gate_and(n35, n34);
  auto n37 = gate_and(n36, n27);
  auto n38 = gate_and(n37, n28);
  auto n39 = gate_and(n38, n29);
  auto n40 = gate_and(n39, n30);
  auto n41 = gate_and(n40, n31);
  y[0] = gate_nand(n41, n25);
}
template<> void $NameUint<8>::d_intmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  auto n17 = gate_not(a[1]);
  auto n16 = gate_not(a[3]);
  auto n21 = gate_and(n17, n16);
  auto n19 = gate_not(a[2]);
  auto n18 = gate_not(a[0]);
  auto n20 = gate_and(n19, n18);
  auto n29 = gate_and(n21, n20);
  auto n23 = gate_not(a[5]);
  auto n22 = gate_not(a[7]);
  auto n27 = gate_and(n23, n22);
  auto n25 = gate_not(a[6]);
  auto n24 = gate_not(a[4]);
  auto n26 = gate_and(n25, n24);
  auto n28 = gate_and(n27, n26);
  auto n30 = gate_and(n29, n28);
  y[0] = gate_mux(b[0], c[0], n30);
  y[1] = gate_mux(b[1], c[1], n30);
  y[2] = gate_mux(b[2], c[2], n30);
  y[3] = gate_mux(b[3], c[3], n30);
  y[4] = gate_mux(b[4], c[4], n30);
  y[5] = gate_mux(b[5], c[5], n30);
  y[6] = gate_mux(b[6], c[6], n30);
  y[7] = gate_mux(b[7], c[7], n30);
}
template<> void $NameUint<8>::d_le
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n75 = gate_not(b[4]);
  auto n62 = gate_nand(a[4], n75);
  auto n74 = gate_xor(a[4], n75);
  auto n72 = gate_not(a[3]);
  auto n56 = gate_nand(b[3], n72);
  auto n71 = gate_xor(b[3], n72);
  auto n69 = gate_not(b[2]);
  auto n60 = gate_nand(a[2], n69);
  auto n68 = gate_xor(a[2], n69);
  auto n64 = gate_not(b[0]);
  auto n55 = gate_nand(a[0], n64);
  auto n51 = gate_nand(b[1], n55);
  auto n66 = gate_xor(b[1], n55);
  auto n65 = gate_not(a[1]);
  auto n52 = gate_nand(n66, n65);
  auto n67 = gate_and(n52, n51);
  auto n61 = gate_nand(n68, n67);
  auto n70 = gate_and(n61, n60);
  auto n53 = gate_nand(n71, n70);
  auto n73 = gate_and(n53, n56);
  auto n63 = gate_nand(n74, n73);
  auto n78 = gate_and(n63, n62);
  auto n57 = gate_nand(b[5], n78);
  auto n77 = gate_xor(b[5], n78);
  auto n76 = gate_not(a[5]);
  auto n54 = gate_nand(n77, n76);
  auto n81 = gate_and(n54, n57);
  auto n58 = gate_nand(a[6], n81);
  auto n80 = gate_xor(a[6], n81);
  auto n79 = gate_not(b[6]);
  auto n59 = gate_nand(n80, n79);
  auto n82 = gate_and(n59, n58);
  auto n86 = gate_and(n82, b[7]);
  auto n84 = gate_xor(n82, b[7]);
  auto n83 = gate_not(a[7]);
  auto n85 = gate_and(n84, n83);
  y[0] = gate_or(n86, n85);
}
template<> void $NameUint<8>::d_lesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n75 = gate_not(b[4]);
  auto n60 = gate_nand(a[4], n75);
  auto n74 = gate_xor(a[4], n75);
  auto n72 = gate_not(a[3]);
  auto n55 = gate_nand(b[3], n72);
  auto n71 = gate_xor(b[3], n72);
  auto n69 = gate_not(b[2]);
  auto n58 = gate_nand(a[2], n69);
  auto n68 = gate_xor(a[2], n69);
  auto n64 = gate_not(b[0]);
  auto n57 = gate_nand(a[0], n64);
  auto n51 = gate_nand(b[1], n57);
  auto n66 = gate_xor(b[1], n57);
  auto n65 = gate_not(a[1]);
  auto n52 = gate_nand(n66, n65);
  auto n67 = gate_and(n52, n51);
  auto n59 = gate_nand(n68, n67);
  auto n70 = gate_and(n59, n58);
  auto n53 = gate_nand(n71, n70);
  auto n73 = gate_and(n53, n55);
  auto n61 = gate_nand(n74, n73);
  auto n78 = gate_and(n61, n60);
  auto n56 = gate_nand(b[5], n78);
  auto n77 = gate_xor(b[5], n78);
  auto n76 = gate_not(a[5]);
  auto n54 = gate_nand(n77, n76);
  auto n81 = gate_and(n54, n56);
  auto n62 = gate_nand(a[6], n81);
  auto n80 = gate_xor(a[6], n81);
  auto n79 = gate_not(b[6]);
  auto n63 = gate_nand(n80, n79);
  auto n82 = gate_and(n63, n62);
  auto n86 = gate_and(n82, a[7]);
  auto n84 = gate_xor(n82, a[7]);
  auto n83 = gate_not(b[7]);
  auto n85 = gate_and(n84, n83);
  y[0] = gate_or(n86, n85);
}
template<> void $NameUint<8>::d_logand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n36 = gate_not(a[1]);
  auto n35 = gate_not(a[3]);
  auto n40 = gate_and(n36, n35);
  auto n38 = gate_not(a[2]);
  auto n37 = gate_not(a[0]);
  auto n39 = gate_and(n38, n37);
  auto n48 = gate_and(n40, n39);
  auto n42 = gate_not(a[5]);
  auto n41 = gate_not(a[7]);
  auto n46 = gate_and(n42, n41);
  auto n44 = gate_not(a[6]);
  auto n43 = gate_not(a[4]);
  auto n45 = gate_and(n44, n43);
  auto n47 = gate_and(n46, n45);
  auto n34 = gate_nand(n48, n47);
  auto n50 = gate_not(b[1]);
  auto n49 = gate_not(b[3]);
  auto n54 = gate_and(n50, n49);
  auto n52 = gate_not(b[2]);
  auto n51 = gate_not(b[0]);
  auto n53 = gate_and(n52, n51);
  auto n62 = gate_and(n54, n53);
  auto n56 = gate_not(b[5]);
  auto n55 = gate_not(b[7]);
  auto n60 = gate_and(n56, n55);
  auto n58 = gate_not(b[6]);
  auto n57 = gate_not(b[4]);
  auto n59 = gate_and(n58, n57);
  auto n61 = gate_and(n60, n59);
  auto n33 = gate_nand(n62, n61);
  y[0] = gate_and(n34, n33);
}
template<> void $NameUint<8>::d_lognot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n17 = gate_not(a[1]);
  auto n16 = gate_not(a[3]);
  auto n21 = gate_and(n17, n16);
  auto n19 = gate_not(a[2]);
  auto n18 = gate_not(a[0]);
  auto n20 = gate_and(n19, n18);
  auto n29 = gate_and(n21, n20);
  auto n23 = gate_not(a[5]);
  auto n22 = gate_not(a[7]);
  auto n27 = gate_and(n23, n22);
  auto n25 = gate_not(a[6]);
  auto n24 = gate_not(a[4]);
  auto n26 = gate_and(n25, n24);
  auto n28 = gate_and(n27, n26);
  y[0] = gate_and(n29, n28);
}
template<> void $NameUint<8>::d_logor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n34 = gate_not(a[5]);
  auto n33 = gate_not(a[7]);
  auto n38 = gate_and(n34, n33);
  auto n36 = gate_not(a[6]);
  auto n35 = gate_not(a[4]);
  auto n37 = gate_and(n36, n35);
  auto n46 = gate_and(n38, n37);
  auto n40 = gate_not(b[5]);
  auto n39 = gate_not(b[7]);
  auto n44 = gate_and(n40, n39);
  auto n42 = gate_not(b[6]);
  auto n41 = gate_not(b[4]);
  auto n43 = gate_and(n42, n41);
  auto n45 = gate_and(n44, n43);
  auto n62 = gate_and(n46, n45);
  auto n48 = gate_not(b[1]);
  auto n47 = gate_not(b[3]);
  auto n52 = gate_and(n48, n47);
  auto n50 = gate_not(b[2]);
  auto n49 = gate_not(b[0]);
  auto n51 = gate_and(n50, n49);
  auto n60 = gate_and(n52, n51);
  auto n54 = gate_not(a[1]);
  auto n53 = gate_not(a[3]);
  auto n58 = gate_and(n54, n53);
  auto n56 = gate_not(a[2]);
  auto n55 = gate_not(a[0]);
  auto n57 = gate_and(n56, n55);
  auto n59 = gate_and(n58, n57);
  auto n61 = gate_and(n60, n59);
  y[0] = gate_nand(n62, n61);
}
template<> void $NameUint<8>::d_lt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n76 = gate_not(b[4]);
  auto n62 = gate_nand(a[4], n76);
  auto n75 = gate_xor(a[4], n76);
  auto n73 = gate_not(a[3]);
  auto n56 = gate_nand(b[3], n73);
  auto n72 = gate_xor(b[3], n73);
  auto n70 = gate_not(b[2]);
  auto n60 = gate_nand(a[2], n70);
  auto n69 = gate_xor(a[2], n70);
  auto n64 = gate_not(a[0]);
  auto n67 = gate_and(b[0], n64);
  auto n55 = gate_nand(n67, b[1]);
  auto n66 = gate_xor(n67, b[1]);
  auto n65 = gate_not(a[1]);
  auto n52 = gate_nand(n66, n65);
  auto n68 = gate_and(n52, n55);
  auto n61 = gate_nand(n69, n68);
  auto n71 = gate_and(n61, n60);
  auto n53 = gate_nand(n72, n71);
  auto n74 = gate_and(n53, n56);
  auto n63 = gate_nand(n75, n74);
  auto n79 = gate_and(n63, n62);
  auto n57 = gate_nand(b[5], n79);
  auto n78 = gate_xor(b[5], n79);
  auto n77 = gate_not(a[5]);
  auto n54 = gate_nand(n78, n77);
  auto n82 = gate_and(n54, n57);
  auto n58 = gate_nand(a[6], n82);
  auto n81 = gate_xor(a[6], n82);
  auto n80 = gate_not(b[6]);
  auto n59 = gate_nand(n81, n80);
  auto n83 = gate_and(n59, n58);
  auto n87 = gate_and(n83, b[7]);
  auto n85 = gate_xor(n83, b[7]);
  auto n84 = gate_not(a[7]);
  auto n86 = gate_and(n85, n84);
  y[0] = gate_or(n87, n86);
}
template<> void $NameUint<8>::d_ltsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n76 = gate_not(b[4]);
  auto n60 = gate_nand(a[4], n76);
  auto n75 = gate_xor(a[4], n76);
  auto n73 = gate_not(a[3]);
  auto n56 = gate_nand(b[3], n73);
  auto n72 = gate_xor(b[3], n73);
  auto n70 = gate_not(b[2]);
  auto n58 = gate_nand(a[2], n70);
  auto n69 = gate_xor(a[2], n70);
  auto n64 = gate_not(a[0]);
  auto n67 = gate_and(b[0], n64);
  auto n55 = gate_nand(n67, b[1]);
  auto n66 = gate_xor(n67, b[1]);
  auto n65 = gate_not(a[1]);
  auto n52 = gate_nand(n66, n65);
  auto n68 = gate_and(n52, n55);
  auto n59 = gate_nand(n69, n68);
  auto n71 = gate_and(n59, n58);
  auto n53 = gate_nand(n72, n71);
  auto n74 = gate_and(n53, n56);
  auto n61 = gate_nand(n75, n74);
  auto n79 = gate_and(n61, n60);
  auto n57 = gate_nand(b[5], n79);
  auto n78 = gate_xor(b[5], n79);
  auto n77 = gate_not(a[5]);
  auto n54 = gate_nand(n78, n77);
  auto n82 = gate_and(n54, n57);
  auto n62 = gate_nand(a[6], n82);
  auto n81 = gate_xor(a[6], n82);
  auto n80 = gate_not(b[6]);
  auto n63 = gate_nand(n81, n80);
  auto n83 = gate_and(n63, n62);
  auto n87 = gate_and(n83, a[7]);
  auto n85 = gate_xor(n83, a[7]);
  auto n84 = gate_not(b[7]);
  auto n86 = gate_and(n85, n84);
  y[0] = gate_or(n87, n86);
}
template<> void $NameUint<8>::d_mod
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n212 = gate_not(b[7]);
  auto n216 = gate_not(b[6]);
  auto n163 = gate_and(n212, n216);
  auto n221 = gate_not(b[5]);
  auto n114 = gate_and(n163, n221);
  auto n226 = gate_not(b[4]);
  auto n81 = gate_and(n114, n226);
  auto n231 = gate_not(b[3]);
  auto n188 = gate_not(b[1]);
  auto n52 = gate_and(n81, n231);
  auto n236 = gate_not(b[2]);
  auto n17 = gate_and(n52, n236);
  auto n14 = gate_and(n17, b[0]);
  auto n18 = gate_and(n188, n14);
  auto n15 = gate_not(n18);
  auto n23 = gate_and(a[7], n15);
  auto n16 = gate_xor(n188, a[7]);
  auto n19 = gate_and(n17, n16);
  auto n21 = gate_or(n19, n18);
  auto n20 = gate_not(a[6]);
  auto n3 = gate_nand(b[0], n20);
  auto n24 = gate_and(n21, n3);
  auto n5 = gate_nand(n24, b[0]);
  auto n22 = gate_not(n24);
  auto n35 = gate_and(n23, n22);
  auto n32 = gate_and(n35, n236);
  auto n36 = gate_and(a[6], n5);
  auto n29 = gate_and(n36, n188);
  auto n27 = gate_xor(n36, n188);
  auto n25 = gate_not(a[5]);
  auto n38 = gate_and(b[0], n25);
  auto n26 = gate_not(n38);
  auto n28 = gate_and(n27, n26);
  auto n34 = gate_or(n29, n28);
  auto n1 = gate_nand(n34, n236);
  auto n30 = gate_not(a[7]);
  auto n2 = gate_nand(b[2], n30);
  auto n31 = gate_and(n34, n2);
  auto n33 = gate_or(n32, n31);
  auto n40 = gate_and(n52, n33);
  auto n6 = gate_nand(n40, n38);
  auto n13 = gate_nand(n40, n1);
  auto n78 = gate_and(n35, n13);
  auto n50 = gate_xor(n231, n78);
  auto n37 = gate_and(n40, b[1]);
  auto n39 = gate_xor(n37, n36);
  auto n57 = gate_and(n39, n6);
  auto n49 = gate_and(n236, n57);
  auto n47 = gate_xor(n236, n57);
  auto n41 = gate_and(n40, b[0]);
  auto n61 = gate_xor(n41, a[5]);
  auto n46 = gate_and(n188, n61);
  auto n44 = gate_xor(n188, n61);
  auto n42 = gate_not(a[4]);
  auto n59 = gate_and(b[0], n42);
  auto n43 = gate_not(n59);
  auto n45 = gate_and(n44, n43);
  auto n55 = gate_or(n46, n45);
  auto n48 = gate_and(n47, n55);
  auto n76 = gate_or(n49, n48);
  auto n51 = gate_and(n50, n76);
  auto n54 = gate_and(n81, n51);
  auto n53 = gate_and(n52, n78);
  auto n63 = gate_or(n54, n53);
  auto n56 = gate_xor(n55, n236);
  auto n58 = gate_and(n63, n56);
  auto n86 = gate_xor(n58, n57);
  auto n75 = gate_and(n86, n231);
  auto n73 = gate_xor(n86, n231);
  auto n60 = gate_xor(n59, b[1]);
  auto n62 = gate_and(n63, n60);
  auto n90 = gate_xor(n62, n61);
  auto n72 = gate_and(n90, n236);
  auto n70 = gate_xor(n236, n90);
  auto n64 = gate_and(n63, b[0]);
  auto n94 = gate_xor(n64, a[4]);
  auto n69 = gate_and(n188, n94);
  auto n67 = gate_xor(n188, n94);
  auto n65 = gate_not(a[3]);
  auto n92 = gate_and(b[0], n65);
  auto n66 = gate_not(n92);
  auto n68 = gate_and(n67, n66);
  auto n88 = gate_or(n69, n68);
  auto n71 = gate_and(n70, n88);
  auto n84 = gate_or(n72, n71);
  auto n74 = gate_and(n73, n84);
  auto n113 = gate_or(n75, n74);
  auto n77 = gate_xor(n231, n76);
  auto n7 = gate_nand(n81, n77);
  auto n116 = gate_and(n78, n7);
  auto n79 = gate_xor(n116, n226);
  auto n80 = gate_and(n113, n79);
  auto n83 = gate_and(n114, n80);
  auto n82 = gate_and(n81, n116);
  auto n96 = gate_or(n83, n82);
  auto n85 = gate_xor(n231, n84);
  auto n87 = gate_and(n96, n85);
  auto n125 = gate_xor(n87, n86);
  auto n111 = gate_and(n125, n226);
  auto n109 = gate_xor(n226, n125);
  auto n89 = gate_xor(n236, n88);
  auto n91 = gate_and(n96, n89);
  auto n129 = gate_xor(n91, n90);
  auto n108 = gate_and(n129, n231);
  auto n106 = gate_xor(n231, n129);
  auto n93 = gate_xor(n92, b[1]);
  auto n95 = gate_and(n96, n93);
  auto n133 = gate_xor(n95, n94);
  auto n105 = gate_and(n133, n236);
  auto n103 = gate_xor(n236, n133);
  auto n97 = gate_and(n96, b[0]);
  auto n137 = gate_xor(n97, a[3]);
  auto n102 = gate_and(n188, n137);
  auto n100 = gate_xor(n188, n137);
  auto n98 = gate_not(a[2]);
  auto n135 = gate_and(b[0], n98);
  auto n99 = gate_not(n135);
  auto n101 = gate_and(n100, n99);
  auto n131 = gate_or(n102, n101);
  auto n104 = gate_and(n103, n131);
  auto n127 = gate_or(n105, n104);
  auto n107 = gate_and(n106, n127);
  auto n123 = gate_or(n108, n107);
  auto n110 = gate_and(n109, n123);
  auto n118 = gate_or(n111, n110);
  auto n112 = gate_xor(n118, n221);
  auto n12 = gate_nand(n112, n163);
  auto n115 = gate_xor(n113, n226);
  auto n8 = gate_nand(n115, n114);
  auto n117 = gate_and(n8, n116);
  auto n162 = gate_and(n12, n117);
  auto n121 = gate_and(n117, n221);
  auto n119 = gate_xor(n117, n221);
  auto n120 = gate_and(n119, n118);
  auto n122 = gate_or(n121, n120);
  auto n139 = gate_and(n163, n122);
  auto n124 = gate_xor(n226, n123);
  auto n126 = gate_and(n139, n124);
  auto n168 = gate_xor(n126, n125);
  auto n157 = gate_and(n168, n221);
  auto n155 = gate_xor(n221, n168);
  auto n128 = gate_xor(n231, n127);
  auto n130 = gate_and(n139, n128);
  auto n172 = gate_xor(n130, n129);
  auto n154 = gate_and(n172, n226);
  auto n152 = gate_xor(n226, n172);
  auto n132 = gate_xor(n236, n131);
  auto n134 = gate_and(n139, n132);
  auto n176 = gate_xor(n134, n133);
  auto n151 = gate_and(n176, n231);
  auto n149 = gate_xor(n231, n176);
  auto n136 = gate_xor(n135, b[1]);
  auto n138 = gate_and(n139, n136);
  auto n180 = gate_xor(n138, n137);
  auto n148 = gate_and(n180, n236);
  auto n146 = gate_xor(n236, n180);
  auto n140 = gate_and(n139, b[0]);
  auto n184 = gate_xor(n140, a[2]);
  auto n145 = gate_and(n188, n184);
  auto n143 = gate_xor(n188, n184);
  auto n141 = gate_not(a[1]);
  auto n182 = gate_and(b[0], n141);
  auto n142 = gate_not(n182);
  auto n144 = gate_and(n143, n142);
  auto n178 = gate_or(n145, n144);
  auto n147 = gate_and(n146, n178);
  auto n174 = gate_or(n148, n147);
  auto n150 = gate_and(n149, n174);
  auto n170 = gate_or(n151, n150);
  auto n153 = gate_and(n152, n170);
  auto n166 = gate_or(n154, n153);
  auto n156 = gate_and(n155, n166);
  auto n160 = gate_or(n157, n156);
  auto n158 = gate_xor(n216, n160);
  auto n11 = gate_nand(n158, n212);
  auto n214 = gate_and(n162, n11);
  auto n209 = gate_not(n162);
  auto n4 = gate_nand(b[7], n209);
  auto n159 = gate_xor(b[6], n209);
  auto n161 = gate_and(n160, n159);
  auto n165 = gate_and(n161, n212);
  auto n164 = gate_and(n163, n162);
  auto n186 = gate_or(n165, n164);
  auto n167 = gate_xor(n221, n166);
  auto n169 = gate_and(n186, n167);
  auto n218 = gate_xor(n169, n168);
  auto n208 = gate_and(n218, n216);
  auto n206 = gate_xor(n216, n218);
  auto n171 = gate_xor(n226, n170);
  auto n173 = gate_and(n186, n171);
  auto n223 = gate_xor(n173, n172);
  auto n205 = gate_and(n223, n221);
  auto n203 = gate_xor(n221, n223);
  auto n175 = gate_xor(n231, n174);
  auto n177 = gate_and(n186, n175);
  auto n228 = gate_xor(n177, n176);
  auto n202 = gate_and(n228, n226);
  auto n200 = gate_xor(n226, n228);
  auto n179 = gate_xor(n236, n178);
  auto n181 = gate_and(n186, n179);
  auto n233 = gate_xor(n181, n180);
  auto n199 = gate_and(n233, n231);
  auto n197 = gate_xor(n231, n233);
  auto n183 = gate_xor(n182, b[1]);
  auto n185 = gate_and(n186, n183);
  auto n238 = gate_xor(n185, n184);
  auto n196 = gate_and(n238, n236);
  auto n194 = gate_xor(n236, n238);
  auto n187 = gate_and(n186, b[0]);
  auto n242 = gate_xor(n187, a[1]);
  auto n193 = gate_and(n188, n242);
  auto n191 = gate_xor(n188, n242);
  auto n189 = gate_not(a[0]);
  auto n240 = gate_and(b[0], n189);
  auto n190 = gate_not(n240);
  auto n192 = gate_and(n191, n190);
  auto n235 = gate_or(n193, n192);
  auto n195 = gate_and(n194, n235);
  auto n230 = gate_or(n196, n195);
  auto n198 = gate_and(n197, n230);
  auto n225 = gate_or(n199, n198);
  auto n201 = gate_and(n200, n225);
  auto n220 = gate_or(n202, n201);
  auto n204 = gate_and(n203, n220);
  auto n215 = gate_or(n205, n204);
  auto n207 = gate_and(n206, n215);
  auto n213 = gate_or(n208, n207);
  auto n9 = gate_nand(n213, n212);
  auto n211 = gate_and(n213, n4);
  auto n210 = gate_and(n214, n212);
  auto n244 = gate_or(n211, n210);
  auto n10 = gate_nand(n244, n9);
  y[7] = gate_and(n214, n10);
  auto n217 = gate_xor(n216, n215);
  auto n219 = gate_and(n217, n244);
  y[6] = gate_xor(n219, n218);
  auto n222 = gate_xor(n221, n220);
  auto n224 = gate_and(n222, n244);
  y[5] = gate_xor(n224, n223);
  auto n227 = gate_xor(n226, n225);
  auto n229 = gate_and(n227, n244);
  y[4] = gate_xor(n229, n228);
  auto n232 = gate_xor(n231, n230);
  auto n234 = gate_and(n232, n244);
  y[3] = gate_xor(n234, n233);
  auto n237 = gate_xor(n236, n235);
  auto n239 = gate_and(n237, n244);
  y[2] = gate_xor(n239, n238);
  auto n241 = gate_xor(n240, b[1]);
  auto n243 = gate_and(n241, n244);
  y[1] = gate_xor(n243, n242);
  auto n245 = gate_and(n244, b[0]);
  y[0] = gate_xor(n245, a[0]);
}
template<> void $NameUint<8>::d_modsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n182 = gate_not(a[1]);
  auto n225 = gate_not(a[0]);
  auto n25 = gate_nand(b[0], n225);
  auto n138 = gate_and(n182, n225);
  auto n140 = gate_not(a[2]);
  auto n103 = gate_and(n138, n140);
  auto n105 = gate_not(a[3]);
  auto n77 = gate_and(n103, n105);
  auto n79 = gate_not(a[4]);
  auto n55 = gate_and(n77, n79);
  auto n57 = gate_not(a[5]);
  auto n43 = gate_and(n55, n57);
  auto n69 = gate_xor(b[7], b[1]);
  auto n251 = gate_not(n69);
  auto n201 = gate_xor(b[7], b[5]);
  auto n270 = gate_not(n201);
  auto n39 = gate_not(b[7]);
  auto n205 = gate_xor(b[6], n39);
  auto n157 = gate_and(n270, n205);
  auto n161 = gate_xor(b[7], b[4]);
  auto n264 = gate_not(n161);
  auto n92 = gate_and(n157, n264);
  auto n121 = gate_xor(b[7], b[3]);
  auto n258 = gate_not(n121);
  auto n63 = gate_and(n92, n258);
  auto n126 = gate_xor(b[7], b[2]);
  auto n244 = gate_not(n126);
  auto n66 = gate_and(n63, n244);
  auto n40 = gate_and(b[0], n66);
  auto n24 = gate_nand(n251, n40);
  auto n41 = gate_and(n43, n24);
  auto n45 = gate_not(a[6]);
  auto n42 = gate_and(n41, n45);
  auto n50 = gate_and(a[7], n42);
  auto n47 = gate_xor(n251, n50);
  auto n44 = gate_not(n43);
  auto n46 = gate_and(n44, a[7]);
  auto n51 = gate_xor(n46, n45);
  auto n18 = gate_nand(b[0], n51);
  auto n48 = gate_and(n47, n18);
  auto n52 = gate_and(n66, n48);
  auto n19 = gate_nand(n52, b[0]);
  auto n49 = gate_not(n52);
  auto n65 = gate_and(n50, n49);
  auto n53 = gate_not(n51);
  auto n70 = gate_and(n53, n19);
  auto n61 = gate_and(n70, n251);
  auto n59 = gate_xor(n70, n251);
  auto n54 = gate_not(b[0]);
  auto n33 = gate_nand(b[7], n54);
  auto n56 = gate_not(n55);
  auto n58 = gate_and(n56, a[7]);
  auto n76 = gate_xor(n58, n57);
  auto n17 = gate_nand(b[0], n76);
  auto n72 = gate_and(n33, n17);
  auto n60 = gate_and(n59, n72);
  auto n64 = gate_or(n61, n60);
  auto n62 = gate_xor(n244, n64);
  auto n27 = gate_nand(n63, n62);
  auto n87 = gate_and(n65, n27);
  auto n68 = gate_and(n64, n66);
  auto n67 = gate_and(n66, n65);
  auto n75 = gate_or(n68, n67);
  auto n29 = gate_nand(n75, b[0]);
  auto n71 = gate_and(n69, n75);
  auto n74 = gate_xor(n71, n70);
  auto n73 = gate_not(n72);
  auto n26 = gate_nand(n73, n75);
  auto n94 = gate_and(n74, n26);
  auto n85 = gate_and(n244, n94);
  auto n83 = gate_xor(n244, n94);
  auto n99 = gate_xor(n29, n76);
  auto n16 = gate_nand(n99, n251);
  auto n81 = gate_xor(n99, n251);
  auto n78 = gate_not(n77);
  auto n80 = gate_and(n78, a[7]);
  auto n102 = gate_xor(n80, n79);
  auto n7 = gate_nand(b[0], n102);
  auto n97 = gate_and(n33, n7);
  auto n15 = gate_nand(n81, n97);
  auto n93 = gate_and(n16, n15);
  auto n82 = gate_not(n93);
  auto n84 = gate_and(n83, n82);
  auto n88 = gate_or(n85, n84);
  auto n86 = gate_xor(n258, n88);
  auto n38 = gate_nand(n92, n86);
  auto n115 = gate_and(n87, n38);
  auto n90 = gate_and(n258, n87);
  auto n89 = gate_and(n258, n88);
  auto n91 = gate_or(n90, n89);
  auto n101 = gate_and(n92, n91);
  auto n36 = gate_nand(n101, b[0]);
  auto n37 = gate_nand(n101, n93);
  auto n95 = gate_and(n101, n126);
  auto n96 = gate_xor(n95, n94);
  auto n122 = gate_and(n37, n96);
  auto n113 = gate_and(n122, n258);
  auto n111 = gate_xor(n258, n122);
  auto n98 = gate_xor(n251, n97);
  auto n100 = gate_and(n101, n98);
  auto n128 = gate_xor(n100, n99);
  auto n14 = gate_nand(n128, n244);
  auto n132 = gate_xor(n36, n102);
  auto n6 = gate_nand(n132, n251);
  auto n107 = gate_xor(n132, n251);
  auto n104 = gate_not(n103);
  auto n106 = gate_and(n104, a[7]);
  auto n134 = gate_xor(n106, n105);
  auto n4 = gate_nand(b[0], n134);
  auto n130 = gate_and(n33, n4);
  auto n5 = gate_nand(n107, n130);
  auto n125 = gate_and(n6, n5);
  auto n108 = gate_xor(n126, n128);
  auto n109 = gate_or(n125, n108);
  auto n120 = gate_and(n14, n109);
  auto n110 = gate_not(n120);
  auto n112 = gate_and(n111, n110);
  auto n116 = gate_or(n113, n112);
  auto n114 = gate_xor(n264, n116);
  auto n22 = gate_nand(n157, n114);
  auto n156 = gate_and(n115, n22);
  auto n118 = gate_and(n115, n264);
  auto n117 = gate_and(n264, n116);
  auto n119 = gate_or(n118, n117);
  auto n135 = gate_and(n157, n119);
  auto n32 = gate_nand(n135, n120);
  auto n123 = gate_and(n135, n121);
  auto n124 = gate_xor(n123, n122);
  auto n162 = gate_and(n32, n124);
  auto n152 = gate_and(n162, n264);
  auto n150 = gate_xor(n264, n162);
  auto n127 = gate_xor(n126, n125);
  auto n129 = gate_and(n135, n127);
  auto n167 = gate_xor(n129, n128);
  auto n13 = gate_nand(n167, n258);
  auto n148 = gate_xor(n258, n167);
  auto n131 = gate_xor(n251, n130);
  auto n133 = gate_and(n135, n131);
  auto n171 = gate_xor(n133, n132);
  auto n147 = gate_and(n171, n244);
  auto n145 = gate_xor(n171, n244);
  auto n137 = gate_not(n134);
  auto n136 = gate_and(b[0], n135);
  auto n176 = gate_xor(n137, n136);
  auto n144 = gate_and(n176, n251);
  auto n142 = gate_xor(n176, n251);
  auto n139 = gate_not(n138);
  auto n141 = gate_and(n139, a[7]);
  auto n177 = gate_xor(n141, n140);
  auto n3 = gate_nand(b[0], n177);
  auto n173 = gate_and(n33, n3);
  auto n143 = gate_and(n142, n173);
  auto n169 = gate_or(n144, n143);
  auto n146 = gate_and(n145, n169);
  auto n165 = gate_or(n147, n146);
  auto n12 = gate_nand(n148, n165);
  auto n160 = gate_and(n13, n12);
  auto n149 = gate_not(n160);
  auto n151 = gate_and(n150, n149);
  auto n154 = gate_or(n152, n151);
  auto n153 = gate_xor(n270, n154);
  auto n21 = gate_nand(n153, n205);
  auto n198 = gate_and(n156, n21);
  auto n23 = gate_nand(n198, n205);
  auto n155 = gate_and(n154, n270);
  auto n159 = gate_and(n155, n205);
  auto n158 = gate_and(n157, n156);
  auto n178 = gate_or(n159, n158);
  auto n30 = gate_nand(n178, n160);
  auto n163 = gate_and(n178, n161);
  auto n164 = gate_xor(n163, n162);
  auto n202 = gate_and(n30, n164);
  auto n196 = gate_and(n202, n270);
  auto n194 = gate_xor(n270, n202);
  auto n166 = gate_xor(n258, n165);
  auto n168 = gate_and(n178, n166);
  auto n208 = gate_xor(n168, n167);
  auto n11 = gate_nand(n208, n264);
  auto n192 = gate_xor(n264, n208);
  auto n170 = gate_xor(n244, n169);
  auto n172 = gate_and(n178, n170);
  auto n212 = gate_xor(n172, n171);
  auto n191 = gate_and(n212, n258);
  auto n189 = gate_xor(n258, n212);
  auto n174 = gate_xor(n173, n251);
  auto n175 = gate_and(n174, n178);
  auto n216 = gate_xor(n176, n175);
  auto n188 = gate_and(n216, n244);
  auto n186 = gate_xor(n216, n244);
  auto n180 = gate_not(n177);
  auto n179 = gate_and(b[0], n178);
  auto n221 = gate_xor(n180, n179);
  auto n185 = gate_and(n221, n251);
  auto n183 = gate_xor(n221, n251);
  auto n181 = gate_and(a[7], a[0]);
  auto n222 = gate_xor(n182, n181);
  auto n2 = gate_nand(b[0], n222);
  auto n218 = gate_and(n33, n2);
  auto n184 = gate_and(n183, n218);
  auto n214 = gate_or(n185, n184);
  auto n187 = gate_and(n186, n214);
  auto n210 = gate_or(n188, n187);
  auto n190 = gate_and(n189, n210);
  auto n206 = gate_or(n191, n190);
  auto n10 = gate_nand(n192, n206);
  auto n200 = gate_and(n11, n10);
  auto n193 = gate_not(n200);
  auto n195 = gate_and(n194, n193);
  auto n199 = gate_or(n196, n195);
  auto n28 = gate_nand(n199, n205);
  auto n20 = gate_nand(n23, n28);
  auto n31 = gate_nand(n20, n200);
  auto n276 = gate_not(n205);
  auto n197 = gate_xor(n199, n276);
  auto n283 = gate_and(n198, n197);
  auto n203 = gate_and(n20, n201);
  auto n204 = gate_xor(n203, n202);
  auto n278 = gate_and(n31, n204);
  auto n242 = gate_and(n278, n205);
  auto n240 = gate_xor(n205, n278);
  auto n207 = gate_xor(n264, n206);
  auto n209 = gate_and(n20, n207);
  auto n272 = gate_xor(n209, n208);
  auto n9 = gate_nand(n272, n270);
  auto n238 = gate_xor(n270, n272);
  auto n211 = gate_xor(n258, n210);
  auto n213 = gate_and(n20, n211);
  auto n266 = gate_xor(n213, n212);
  auto n237 = gate_and(n266, n264);
  auto n235 = gate_xor(n264, n266);
  auto n215 = gate_xor(n244, n214);
  auto n217 = gate_and(n20, n215);
  auto n260 = gate_xor(n217, n216);
  auto n234 = gate_and(n260, n258);
  auto n232 = gate_xor(n260, n258);
  auto n219 = gate_xor(n218, n251);
  auto n220 = gate_and(n219, n20);
  auto n246 = gate_xor(n221, n220);
  auto n231 = gate_and(n246, n244);
  auto n229 = gate_xor(n246, n244);
  auto n223 = gate_and(n20, b[0]);
  auto n254 = gate_xor(n223, n222);
  auto n224 = gate_not(n254);
  auto n228 = gate_and(n224, n251);
  auto n226 = gate_xor(n224, n251);
  auto n252 = gate_and(n33, n25);
  auto n227 = gate_and(n226, n252);
  auto n243 = gate_or(n228, n227);
  auto n230 = gate_and(n229, n243);
  auto n257 = gate_or(n231, n230);
  auto n233 = gate_and(n232, n257);
  auto n263 = gate_or(n234, n233);
  auto n236 = gate_and(n235, n263);
  auto n269 = gate_or(n237, n236);
  auto n8 = gate_nand(n238, n269);
  auto n275 = gate_and(n9, n8);
  auto n239 = gate_not(n275);
  auto n241 = gate_and(n240, n239);
  auto n282 = gate_or(n242, n241);
  auto n34 = gate_nand(n283, n282);
  auto n277 = gate_or(n283, n282);
  auto n35 = gate_nand(n277, n275);
  auto n245 = gate_xor(n244, n243);
  auto n247 = gate_and(n277, n245);
  auto n248 = gate_xor(n247, n246);
  auto n295 = gate_xor(a[7], n248);
  auto n250 = gate_and(n277, b[0]);
  auto n249 = gate_xor(a[7], a[0]);
  auto n299 = gate_xor(n250, n249);
  y[0] = gate_xor(a[7], n299);
  auto n256 = gate_and(a[7], n299);
  auto n253 = gate_xor(n252, n251);
  auto n255 = gate_and(n253, n277);
  auto n297 = gate_xor(n255, n254);
  auto n294 = gate_and(n256, n297);
  auto n293 = gate_and(n295, n294);
  auto n259 = gate_xor(n258, n257);
  auto n261 = gate_and(n277, n259);
  auto n262 = gate_xor(n261, n260);
  auto n292 = gate_xor(a[7], n262);
  auto n291 = gate_and(n293, n292);
  auto n265 = gate_xor(n264, n263);
  auto n267 = gate_and(n277, n265);
  auto n268 = gate_xor(n267, n266);
  auto n290 = gate_xor(a[7], n268);
  auto n289 = gate_and(n291, n290);
  auto n271 = gate_xor(n270, n269);
  auto n273 = gate_and(n277, n271);
  auto n274 = gate_xor(n273, n272);
  auto n288 = gate_xor(a[7], n274);
  auto n287 = gate_and(n289, n288);
  auto n279 = gate_and(n277, n276);
  auto n280 = gate_xor(n279, n278);
  auto n281 = gate_and(n35, n280);
  auto n286 = gate_xor(a[7], n281);
  auto n285 = gate_and(n287, n286);
  auto n284 = gate_and(a[7], n34);
  y[7] = gate_xor(n285, n284);
  y[6] = gate_xor(n287, n286);
  y[5] = gate_xor(n289, n288);
  y[4] = gate_xor(n291, n290);
  y[3] = gate_xor(n293, n292);
  y[2] = gate_xor(n295, n294);
  auto n296 = gate_not(n299);
  auto n298 = gate_and(n296, a[7]);
  y[1] = gate_xnor(n298, n297);
}
template<> void $NameUint<8>::d_mul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(a[0], b[0]);
  auto n27 = gate_and(a[1], b[0]);
  auto n26 = gate_and(a[0], b[1]);
  y[1] = gate_xor(n27, n26);
  auto n37 = gate_and(a[1], b[1]);
  auto n39 = gate_and(a[0], b[2]);
  auto n7 = gate_nand(n37, n39);
  auto n32 = gate_xor(n37, n39);
  auto n31 = gate_and(b[0], a[2]);
  auto n34 = gate_xor(n32, n31);
  auto n33 = gate_and(n27, n26);
  y[2] = gate_xor(n34, n33);
  auto n28 = gate_and(a[1], n7);
  auto n30 = gate_and(n28, b[2]);
  auto n29 = gate_and(b[3], a[0]);
  auto n44 = gate_xor(n30, n29);
  auto n41 = gate_and(b[0], a[3]);
  auto n40 = gate_and(b[1], a[2]);
  auto n43 = gate_xor(n41, n40);
  auto n13 = gate_nand(n44, n43);
  auto n46 = gate_xor(n44, n43);
  auto n36 = gate_and(n32, n31);
  auto n35 = gate_and(n34, n33);
  auto n45 = gate_or(n36, n35);
  auto n14 = gate_nand(n46, n45);
  y[3] = gate_xor(n46, n45);
  auto n64 = gate_and(a[1], b[3]);
  auto n38 = gate_or(n64, n37);
  auto n52 = gate_and(n39, n38);
  auto n49 = gate_and(n41, n40);
  auto n61 = gate_and(a[4], b[0]);
  auto n60 = gate_and(b[1], a[3]);
  auto n48 = gate_xor(n61, n60);
  auto n51 = gate_not(n48);
  auto n42 = gate_xor(n49, n51);
  auto n59 = gate_xor(n52, n42);
  auto n63 = gate_and(a[0], b[4]);
  auto n6 = gate_nand(n64, n63);
  auto n66 = gate_xor(n64, n63);
  auto n65 = gate_and(b[2], a[2]);
  auto n11 = gate_nand(n66, n65);
  auto n58 = gate_xor(n66, n65);
  auto n56 = gate_and(n13, n14);
  auto n47 = gate_xor(n58, n56);
  y[4] = gate_xor(n59, n47);
  auto n54 = gate_and(n48, n49);
  auto n50 = gate_not(n49);
  auto n3 = gate_nand(n51, n50);
  auto n53 = gate_and(n3, n52);
  auto n90 = gate_or(n54, n53);
  auto n55 = gate_not(n58);
  auto n4 = gate_nand(n56, n55);
  auto n57 = gate_not(n56);
  auto n12 = gate_nand(n58, n57);
  auto n5 = gate_nand(n59, n12);
  auto n91 = gate_and(n4, n5);
  auto n18 = gate_nand(n91, n90);
  auto n93 = gate_xor(n90, n91);
  auto n62 = gate_and(a[3], b[2]);
  auto n71 = gate_and(n61, n60);
  auto n17 = gate_nand(b[2], n71);
  auto n70 = gate_xor(n62, n71);
  auto n88 = gate_and(b[0], a[5]);
  auto n87 = gate_and(a[4], b[1]);
  auto n69 = gate_xor(n88, n87);
  auto n22 = gate_nand(n70, n69);
  auto n83 = gate_xor(n70, n69);
  auto n80 = gate_not(n83);
  auto n81 = gate_and(n6, n11);
  auto n1 = gate_nand(n81, n80);
  auto n73 = gate_and(b[3], a[2]);
  auto n76 = gate_and(a[0], b[5]);
  auto n74 = gate_and(a[1], b[4]);
  auto n67 = gate_xor(n76, n74);
  auto n85 = gate_xor(n73, n67);
  auto n68 = gate_xor(n81, n85);
  auto n92 = gate_xor(n80, n68);
  auto n19 = gate_nand(n93, n92);
  y[5] = gate_xor(n93, n92);
  auto n121 = gate_and(n22, n17);
  auto n72 = gate_and(a[5], b[1]);
  auto n118 = gate_and(b[0], a[6]);
  auto n125 = gate_xor(n72, n118);
  auto n78 = gate_and(n74, n73);
  auto n75 = gate_or(n74, n73);
  auto n77 = gate_and(n76, n75);
  auto n124 = gate_or(n78, n77);
  auto n8 = gate_nand(n125, n124);
  auto n123 = gate_xor(n125, n124);
  auto n103 = gate_xor(n121, n123);
  auto n108 = gate_and(a[1], b[5]);
  auto n111 = gate_and(a[0], b[6]);
  auto n109 = gate_and(a[4], b[2]);
  auto n16 = gate_nand(n109, n108);
  auto n79 = gate_xor(n111, n109);
  auto n98 = gate_xor(n108, n79);
  auto n82 = gate_not(n81);
  auto n84 = gate_and(n83, n82);
  auto n86 = gate_or(n85, n84);
  auto n97 = gate_and(n1, n86);
  auto n23 = gate_nand(n98, n97);
  auto n96 = gate_xor(n98, n97);
  auto n104 = gate_and(a[3], b[3]);
  auto n105 = gate_and(n88, n87);
  auto n21 = gate_nand(n105, n104);
  auto n107 = gate_and(b[4], a[2]);
  auto n89 = gate_xor(n105, n107);
  auto n95 = gate_xor(n104, n89);
  auto n24 = gate_nand(n96, n95);
  auto n102 = gate_xor(n96, n95);
  auto n100 = gate_and(n18, n19);
  auto n94 = gate_xor(n102, n100);
  y[6] = gate_xor(n103, n94);
  auto n143 = gate_and(n24, n23);
  auto n99 = gate_not(n102);
  auto n2 = gate_nand(n100, n99);
  auto n101 = gate_not(n100);
  auto n25 = gate_nand(n102, n101);
  auto n10 = gate_nand(n25, n103);
  auto n141 = gate_and(n2, n10);
  auto n139 = gate_and(a[2], b[5]);
  auto n106 = gate_or(n105, n104);
  auto n20 = gate_nand(n107, n106);
  auto n117 = gate_and(n21, n20);
  auto n110 = gate_or(n109, n108);
  auto n15 = gate_nand(n111, n110);
  auto n115 = gate_and(n16, n15);
  auto n113 = gate_and(b[3], a[4]);
  auto n112 = gate_and(a[1], b[6]);
  auto n114 = gate_xor(n113, n112);
  auto n116 = gate_xor(n115, n114);
  auto n137 = gate_xor(n117, n116);
  auto n119 = gate_and(b[1], n118);
  auto n120 = gate_xor(b[2], n119);
  auto n135 = gate_and(a[5], n120);
  auto n122 = gate_not(n121);
  auto n9 = gate_nand(n123, n122);
  auto n133 = gate_and(n9, n8);
  auto n127 = gate_and(a[6], b[1]);
  auto n126 = gate_and(b[7], a[0]);
  auto n131 = gate_xor(n127, n126);
  auto n129 = gate_and(b[4], a[3]);
  auto n128 = gate_and(a[7], b[0]);
  auto n130 = gate_xor(n129, n128);
  auto n132 = gate_xor(n131, n130);
  auto n134 = gate_xor(n133, n132);
  auto n136 = gate_xor(n135, n134);
  auto n138 = gate_xor(n137, n136);
  auto n140 = gate_xor(n139, n138);
  auto n142 = gate_xor(n141, n140);
  y[7] = gate_xor(n143, n142);
}
template<> void $NameUint<8>::d_redand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n8 = gate_and(a[1], a[3]);
  auto n7 = gate_and(a[2], a[0]);
  auto n12 = gate_and(n8, n7);
  auto n10 = gate_and(a[5], a[7]);
  auto n9 = gate_and(a[6], a[4]);
  auto n11 = gate_and(n10, n9);
  y[0] = gate_and(n12, n11);
}
template<> void $NameUint<8>::d_rednand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n11 = gate_and(a[2], a[3]);
  auto n10 = gate_and(a[1], a[0]);
  auto n12 = gate_and(n11, n10);
  auto n15 = gate_and(n12, a[7]);
  auto n13 = gate_and(a[6], a[5]);
  auto n14 = gate_and(n13, a[4]);
  y[0] = gate_nand(n15, n14);
}
template<> void $NameUint<8>::d_rednor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n17 = gate_not(a[1]);
  auto n16 = gate_not(a[3]);
  auto n21 = gate_and(n17, n16);
  auto n19 = gate_not(a[2]);
  auto n18 = gate_not(a[0]);
  auto n20 = gate_and(n19, n18);
  auto n29 = gate_and(n21, n20);
  auto n23 = gate_not(a[5]);
  auto n22 = gate_not(a[7]);
  auto n27 = gate_and(n23, n22);
  auto n25 = gate_not(a[6]);
  auto n24 = gate_not(a[4]);
  auto n26 = gate_and(n25, n24);
  auto n28 = gate_and(n27, n26);
  y[0] = gate_and(n29, n28);
}
template<> void $NameUint<8>::d_redor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n18 = gate_not(a[1]);
  auto n17 = gate_not(a[0]);
  auto n22 = gate_and(n18, n17);
  auto n20 = gate_not(a[3]);
  auto n19 = gate_not(a[2]);
  auto n21 = gate_and(n20, n19);
  auto n24 = gate_and(n22, n21);
  auto n23 = gate_not(a[7]);
  auto n30 = gate_and(n24, n23);
  auto n26 = gate_not(a[6]);
  auto n25 = gate_not(a[5]);
  auto n28 = gate_and(n26, n25);
  auto n27 = gate_not(a[4]);
  auto n29 = gate_and(n28, n27);
  y[0] = gate_nand(n30, n29);
}
template<> void $NameUint<8>::d_redxnor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n11 = gate_xor(a[0], a[1]);
  auto n14 = gate_xor(a[7], a[6]);
  auto n10 = gate_xor(a[2], a[3]);
  auto n13 = gate_xor(n11, n10);
  auto n12 = gate_xor(a[4], a[5]);
  auto n15 = gate_xor(n13, n12);
  y[0] = gate_xnor(n15, n14);
}
template<> void $NameUint<8>::d_redxor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n8 = gate_xor(a[0], a[1]);
  auto n7 = gate_xor(a[2], a[3]);
  auto n12 = gate_xor(n8, n7);
  auto n10 = gate_xor(a[4], a[5]);
  auto n9 = gate_xor(a[7], a[6]);
  auto n11 = gate_xor(n10, n9);
  y[0] = gate_xor(n12, n11);
}
template<> void $NameUint<8>::d_sll
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n51 = gate_not(b[3]);
  auto n50 = gate_not(b[4]);
  auto n55 = gate_and(n51, n50);
  auto n53 = gate_not(b[5]);
  auto n52 = gate_not(b[6]);
  auto n54 = gate_and(n53, n52);
  auto n57 = gate_and(n55, n54);
  auto n56 = gate_not(b[7]);
  auto n59 = gate_and(n57, n56);
  auto n58 = gate_not(b[2]);
  auto n79 = gate_and(n59, n58);
  auto n70 = gate_and(b[0], n79);
  auto n63 = gate_mux(a[6], a[4], b[1]);
  auto n47 = gate_nand(n70, n63);
  auto n72 = gate_and(b[2], n59);
  auto n69 = gate_mux(a[3], a[1], b[1]);
  auto n48 = gate_nand(n70, n69);
  auto n62 = gate_mux(a[2], a[0], b[1]);
  auto n76 = gate_mux(n69, n62, b[0]);
  auto n49 = gate_nand(n72, n76);
  auto n61 = gate_and(n47, n49);
  auto n60 = gate_mux(a[7], a[5], b[1]);
  auto n74 = gate_not(b[0]);
  auto n81 = gate_and(n79, n74);
  auto n34 = gate_nand(n60, n81);
  y[7] = gate_nand(n61, n34);
  auto n46 = gate_nand(n81, n63);
  auto n67 = gate_mux(a[5], a[3], b[1]);
  auto n42 = gate_nand(n81, n67);
  auto n43 = gate_nand(n70, n67);
  auto n65 = gate_not(b[1]);
  auto n66 = gate_and(a[1], n65);
  auto n77 = gate_mux(n62, n66, b[0]);
  auto n40 = gate_nand(n77, n72);
  auto n64 = gate_and(n43, n40);
  y[6] = gate_nand(n64, n46);
  auto n80 = gate_and(a[0], n65);
  y[0] = gate_and(n81, n80);
  auto n78 = gate_mux(n66, n80, b[0]);
  auto n41 = gate_nand(n72, n78);
  auto n71 = gate_mux(a[4], a[2], b[1]);
  auto n44 = gate_nand(n81, n71);
  auto n45 = gate_nand(n70, n71);
  auto n68 = gate_and(n41, n45);
  y[5] = gate_nand(n68, n42);
  auto n75 = gate_and(n48, n44);
  auto n73 = gate_and(n80, n72);
  auto n35 = gate_nand(n74, n73);
  y[4] = gate_nand(n75, n35);
  y[3] = gate_and(n79, n76);
  y[2] = gate_and(n79, n77);
  y[1] = gate_and(n79, n78);
}
template<> void $NameUint<8>::d_slr
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n47 = gate_not(b[3]);
  auto n46 = gate_not(b[4]);
  auto n51 = gate_and(n47, n46);
  auto n49 = gate_not(b[5]);
  auto n48 = gate_not(b[6]);
  auto n50 = gate_and(n49, n48);
  auto n53 = gate_and(n51, n50);
  auto n52 = gate_not(b[7]);
  auto n60 = gate_and(n53, n52);
  auto n54 = gate_not(b[2]);
  auto n58 = gate_and(n60, n54);
  auto n63 = gate_not(b[0]);
  auto n72 = gate_and(n58, n63);
  auto n55 = gate_not(b[1]);
  auto n61 = gate_and(a[7], n55);
  y[7] = gate_and(n72, n61);
  auto n56 = gate_and(a[6], n55);
  auto n66 = gate_mux(n56, n61, b[0]);
  y[6] = gate_and(n58, n66);
  auto n57 = gate_mux(a[5], a[7], b[1]);
  auto n69 = gate_mux(n57, n56, b[0]);
  y[5] = gate_and(n58, n69);
  auto n59 = gate_mux(a[4], a[6], b[1]);
  auto n73 = gate_mux(n59, n57, b[0]);
  y[4] = gate_and(n58, n73);
  auto n76 = gate_and(b[0], n58);
  auto n34 = gate_nand(n76, n59);
  auto n65 = gate_mux(a[3], a[5], b[1]);
  auto n41 = gate_nand(n76, n65);
  auto n42 = gate_nand(n72, n65);
  auto n64 = gate_and(n34, n42);
  auto n74 = gate_and(b[2], n60);
  auto n43 = gate_nand(n69, n74);
  auto n45 = gate_nand(n74, n66);
  auto n62 = gate_and(n61, n74);
  auto n44 = gate_nand(n63, n62);
  y[3] = gate_nand(n64, n44);
  auto n67 = gate_and(n41, n45);
  auto n68 = gate_mux(a[2], a[4], b[1]);
  auto n39 = gate_nand(n76, n68);
  auto n40 = gate_nand(n72, n68);
  y[2] = gate_nand(n67, n40);
  auto n70 = gate_and(n39, n43);
  auto n75 = gate_mux(a[1], a[3], b[1]);
  auto n35 = gate_nand(n72, n75);
  y[1] = gate_nand(n70, n35);
  auto n71 = gate_mux(a[0], a[2], b[1]);
  auto n80 = gate_and(n72, n71);
  auto n78 = gate_and(n74, n73);
  auto n77 = gate_and(n76, n75);
  auto n79 = gate_or(n78, n77);
  y[0] = gate_or(n80, n79);
}
template<> void $NameUint<8>::d_srasig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto _y7 = gate_buf(a[7]);
  y[7] = gate_buf(_y7);
  auto n50 = gate_not(b[4]);
  auto n49 = gate_not(b[5]);
  auto n54 = gate_and(n50, n49);
  auto n52 = gate_not(b[7]);
  auto n51 = gate_not(b[3]);
  auto n53 = gate_and(n52, n51);
  auto n56 = gate_and(n54, n53);
  auto n55 = gate_not(b[6]);
  auto n67 = gate_and(n56, n55);
  auto n57 = gate_not(b[2]);
  auto n79 = gate_and(n67, n57);
  auto n58 = gate_not(n79);
  auto n48 = gate_nand(_y7, n58);
  auto n74 = gate_not(b[1]);
  auto n75 = gate_not(b[0]);
  auto n59 = gate_and(n74, n75);
  auto n68 = gate_mux(_y7, a[6], n59);
  auto n47 = gate_nand(n79, n68);
  y[6] = gate_nand(n48, n47);
  auto n60 = gate_mux(a[6], a[5], n75);
  auto n72 = gate_mux(_y7, n60, n74);
  auto n45 = gate_nand(n79, n72);
  y[5] = gate_nand(n48, n45);
  auto n61 = gate_mux(_y7, a[5], n74);
  auto n62 = gate_mux(a[6], a[4], n74);
  auto n80 = gate_mux(n61, n62, n75);
  auto n43 = gate_nand(n80, n79);
  y[4] = gate_nand(n48, n43);
  auto n64 = gate_mux(a[5], a[3], n74);
  auto n63 = gate_mux(n62, n64, n75);
  auto n30 = gate_nand(n79, n63);
  y[3] = gate_nand(n48, n30);
  auto n70 = gate_mux(a[4], a[2], n74);
  auto n65 = gate_mux(n64, n70, n75);
  auto n40 = gate_nand(n79, n65);
  auto n66 = gate_not(n67);
  auto n41 = gate_nand(_y7, n66);
  auto n69 = gate_and(n40, n41);
  auto n81 = gate_and(b[2], n67);
  auto n42 = gate_nand(n81, n80);
  auto n44 = gate_nand(n81, n72);
  auto n46 = gate_nand(n81, n68);
  y[2] = gate_nand(n69, n46);
  auto n77 = gate_mux(a[3], a[1], n74);
  auto n71 = gate_mux(n70, n77, n75);
  auto n35 = gate_nand(n79, n71);
  auto n73 = gate_and(n41, n35);
  y[1] = gate_nand(n73, n44);
  auto n76 = gate_mux(a[2], a[0], n74);
  auto n78 = gate_mux(n77, n76, n75);
  auto n38 = gate_nand(n79, n78);
  auto n82 = gate_and(n41, n38);
  y[0] = gate_nand(n82, n42);
}
template<> void $NameUint<8>::d_sub
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n6 = gate_not(b[1]);
  auto n7 = gate_xor(a[1], n6);
  auto n5 = gate_not(a[0]);
  auto n2 = gate_nand(b[0], n5);
  y[1] = gate_xor(n7, n2);
  auto n10 = gate_not(b[2]);
  auto n12 = gate_xor(a[2], n10);
  auto n9 = gate_and(a[1], n6);
  auto n8 = gate_and(n7, n2);
  auto n11 = gate_or(n9, n8);
  y[2] = gate_xor(n12, n11);
  auto n15 = gate_not(b[3]);
  auto n17 = gate_xor(a[3], n15);
  auto n14 = gate_and(a[2], n10);
  auto n13 = gate_and(n12, n11);
  auto n16 = gate_or(n14, n13);
  y[3] = gate_xor(n17, n16);
  auto n20 = gate_not(b[4]);
  auto n22 = gate_xor(a[4], n20);
  auto n19 = gate_and(a[3], n15);
  auto n18 = gate_and(n17, n16);
  auto n21 = gate_or(n19, n18);
  y[4] = gate_xor(n22, n21);
  auto n25 = gate_not(b[5]);
  auto n27 = gate_xor(a[5], n25);
  auto n24 = gate_and(a[4], n20);
  auto n23 = gate_and(n22, n21);
  auto n26 = gate_or(n24, n23);
  y[5] = gate_xor(n27, n26);
  auto n32 = gate_not(b[6]);
  auto n3 = gate_nand(a[6], n32);
  auto n31 = gate_xor(a[6], n32);
  auto n29 = gate_and(a[5], n25);
  auto n28 = gate_and(n27, n26);
  auto n30 = gate_or(n29, n28);
  auto n4 = gate_nand(n31, n30);
  y[6] = gate_xor(n31, n30);
  auto n34 = gate_and(n4, n3);
  auto n33 = gate_xor(a[7], b[7]);
  y[7] = gate_xor(n34, n33);
}
template<> void $NameUint<8>::d_uminus
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_buf(a[0]);
  auto n18 = gate_not(a[7]);
  auto n16 = gate_not(y[0]);
  auto n15 = gate_not(a[1]);
  auto n28 = gate_and(n16, n15);
  auto n27 = gate_not(a[2]);
  auto n26 = gate_and(n28, n27);
  auto n25 = gate_not(a[3]);
  auto n24 = gate_and(n26, n25);
  auto n23 = gate_not(a[4]);
  auto n22 = gate_and(n24, n23);
  auto n21 = gate_not(a[5]);
  auto n20 = gate_and(n22, n21);
  auto n19 = gate_not(a[6]);
  auto n17 = gate_and(n20, n19);
  y[7] = gate_xor(n18, n17);
  y[6] = gate_xor(n20, n19);
  y[5] = gate_xor(n22, n21);
  y[4] = gate_xor(n24, n23);
  y[3] = gate_xor(n26, n25);
  y[2] = gate_xor(n28, n27);
  y[1] = gate_xor(y[0], a[1]);
}
