// Copyright 2022 MoMA Lab, NYU Abu Dhabi (wp.nyu.edu/momalab/)
template<> void $NameUint<7>::d_add
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n3 = gate_xor(b[1], a[1]);
  auto n2 = gate_and(a[0], b[0]);
  y[1] = gate_xor(n3, n2);
  auto n7 = gate_xor(b[2], a[2]);
  auto n5 = gate_and(b[1], a[1]);
  auto n4 = gate_and(n3, n2);
  auto n6 = gate_or(n5, n4);
  y[2] = gate_xor(n7, n6);
  auto n11 = gate_xor(b[3], a[3]);
  auto n9 = gate_and(b[2], a[2]);
  auto n8 = gate_and(n7, n6);
  auto n10 = gate_or(n9, n8);
  y[3] = gate_xor(n11, n10);
  auto n15 = gate_xor(b[4], a[4]);
  auto n13 = gate_and(b[3], a[3]);
  auto n12 = gate_and(n11, n10);
  auto n14 = gate_or(n13, n12);
  y[4] = gate_xor(n15, n14);
  auto n19 = gate_xor(b[5], a[5]);
  auto n17 = gate_and(b[4], a[4]);
  auto n16 = gate_and(n15, n14);
  auto n18 = gate_or(n17, n16);
  y[5] = gate_xor(n19, n18);
  auto n21 = gate_and(n19, n18);
  auto n20 = gate_and(b[5], a[5]);
  auto n23 = gate_or(n21, n20);
  auto n22 = gate_xor(a[6], b[6]);
  y[6] = gate_xor(n23, n22);
}
template<> void $NameUint<7>::d_bitand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_and(b[6], a[6]);
  y[5] = gate_and(b[5], a[5]);
  y[4] = gate_and(b[4], a[4]);
  y[3] = gate_and(b[3], a[3]);
  y[2] = gate_and(b[2], a[2]);
  y[1] = gate_and(b[1], a[1]);
  y[0] = gate_and(b[0], a[0]);
}
template<> void $NameUint<7>::d_bitnot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[6] = gate_not(a[6]);
  y[5] = gate_not(a[5]);
  y[4] = gate_not(a[4]);
  y[3] = gate_not(a[3]);
  y[2] = gate_not(a[2]);
  y[1] = gate_not(a[1]);
  y[0] = gate_not(a[0]);
}
template<> void $NameUint<7>::d_bitor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_or(a[6], b[6]);
  y[5] = gate_or(a[5], b[5]);
  y[4] = gate_or(a[4], b[4]);
  y[3] = gate_or(a[3], b[3]);
  y[2] = gate_or(a[2], b[2]);
  y[1] = gate_or(a[1], b[1]);
  y[0] = gate_or(a[0], b[0]);
}
template<> void $NameUint<7>::d_bitxor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_xor(b[6], a[6]);
  y[5] = gate_xor(b[5], a[5]);
  y[4] = gate_xor(b[4], a[4]);
  y[3] = gate_xor(b[3], a[3]);
  y[2] = gate_xor(b[2], a[2]);
  y[1] = gate_xor(b[1], a[1]);
  y[0] = gate_xor(b[0], a[0]);
}
template<> void $NameUint<7>::d_boolmul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(a[0], b[0]);
  y[1] = gate_and(a[0], b[1]);
  y[2] = gate_and(a[0], b[2]);
  y[3] = gate_and(a[0], b[3]);
  y[4] = gate_and(a[0], b[4]);
  y[5] = gate_and(a[0], b[5]);
  y[6] = gate_and(a[0], b[6]);
}
template<> void $NameUint<7>::d_boolmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  y[0] = gate_mux(c[0], b[0], a[0]);
  y[1] = gate_mux(c[1], b[1], a[0]);
  y[2] = gate_mux(c[2], b[2], a[0]);
  y[3] = gate_mux(c[3], b[3], a[0]);
  y[4] = gate_mux(c[4], b[4], a[0]);
  y[5] = gate_mux(c[5], b[5], a[0]);
  y[6] = gate_mux(c[6], b[6], a[0]);
}
template<> void $NameUint<7>::d_dec
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[1], y[0]);
  auto n2 = gate_not(a[1]);
  auto n4 = gate_and(n2, y[0]);
  y[2] = gate_xor(a[2], n4);
  auto n3 = gate_not(a[2]);
  auto n6 = gate_and(n4, n3);
  y[3] = gate_xor(a[3], n6);
  auto n5 = gate_not(a[3]);
  auto n8 = gate_and(n6, n5);
  y[4] = gate_xor(a[4], n8);
  auto n7 = gate_not(a[4]);
  auto n10 = gate_and(n8, n7);
  y[5] = gate_xor(a[5], n10);
  auto n9 = gate_not(a[5]);
  auto n11 = gate_and(n10, n9);
  y[6] = gate_xor(a[6], n11);
}
template<> void $NameUint<7>::d_div
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n124 = gate_not(b[6]);
  auto n164 = gate_not(b[5]);
  auto n88 = gate_and(n124, n164);
  auto n156 = gate_not(b[4]);
  auto n54 = gate_and(n88, n156);
  auto n152 = gate_not(b[3]);
  auto n45 = gate_and(n54, n152);
  auto n145 = gate_not(b[2]);
  auto n38 = gate_and(n45, n145);
  auto n39 = gate_not(a[6]);
  auto n2 = gate_nand(b[0], n39);
  auto n13 = gate_nand(b[1], n39);
  auto n36 = gate_not(a[5]);
  auto n15 = gate_nand(b[0], n36);
  auto n37 = gate_and(n13, n15);
  y[5] = gate_and(n38, n37);
  auto n14 = gate_nand(y[5], b[0]);
  auto n129 = gate_not(b[1]);
  auto n40 = gate_and(n129, n38);
  y[6] = gate_and(n40, n2);
  auto n42 = gate_not(y[5]);
  auto n41 = gate_not(y[6]);
  auto n43 = gate_and(n42, n41);
  auto n52 = gate_and(a[6], n43);
  auto n44 = gate_not(n52);
  auto n8 = gate_nand(b[2], n44);
  auto n50 = gate_and(n45, n8);
  auto n49 = gate_xor(n145, n52);
  auto n55 = gate_and(a[5], n14);
  auto n35 = gate_nand(n55, n129);
  auto n47 = gate_xor(n55, n129);
  auto n59 = gate_not(a[4]);
  auto n57 = gate_and(b[0], n59);
  auto n46 = gate_not(n57);
  auto n34 = gate_nand(n47, n46);
  auto n48 = gate_and(n35, n34);
  auto n26 = gate_nand(n49, n48);
  y[4] = gate_and(n50, n26);
  auto n16 = gate_nand(n57, y[4]);
  auto n51 = gate_not(y[4]);
  auto n87 = gate_and(n52, n51);
  auto n53 = gate_not(n87);
  auto n11 = gate_nand(b[3], n53);
  auto n68 = gate_and(n54, n11);
  auto n67 = gate_xor(n152, n87);
  auto n56 = gate_and(b[1], y[4]);
  auto n58 = gate_xor(n56, n55);
  auto n71 = gate_and(n58, n16);
  auto n33 = gate_nand(n145, n71);
  auto n65 = gate_xor(n145, n71);
  auto n60 = gate_and(y[4], b[0]);
  auto n74 = gate_xor(n60, n59);
  auto n61 = gate_not(n74);
  auto n64 = gate_and(n129, n61);
  auto n62 = gate_xor(n129, n61);
  auto n77 = gate_not(a[3]);
  auto n6 = gate_nand(b[0], n77);
  auto n63 = gate_and(n62, n6);
  auto n69 = gate_or(n64, n63);
  auto n32 = gate_nand(n65, n69);
  auto n66 = gate_and(n33, n32);
  auto n25 = gate_nand(n67, n66);
  y[3] = gate_and(n68, n25);
  auto n70 = gate_xor(n69, n145);
  auto n72 = gate_and(y[3], n70);
  auto n94 = gate_xor(n72, n71);
  auto n31 = gate_nand(n94, n152);
  auto n85 = gate_xor(n94, n152);
  auto n73 = gate_xor(n6, n129);
  auto n75 = gate_and(y[3], n73);
  auto n98 = gate_xor(n75, n74);
  auto n76 = gate_not(n98);
  auto n84 = gate_and(n76, n145);
  auto n82 = gate_xor(n145, n76);
  auto n78 = gate_and(y[3], b[0]);
  auto n5 = gate_xnor(n78, n77);
  auto n81 = gate_and(n129, n5);
  auto n79 = gate_xor(n129, n5);
  auto n103 = gate_not(a[2]);
  auto n4 = gate_nand(b[0], n103);
  auto n80 = gate_and(n79, n4);
  auto n96 = gate_or(n81, n80);
  auto n83 = gate_and(n82, n96);
  auto n92 = gate_or(n84, n83);
  auto n30 = gate_nand(n85, n92);
  auto n89 = gate_and(n31, n30);
  auto n86 = gate_not(y[3]);
  auto n120 = gate_and(n87, n86);
  auto n116 = gate_not(n120);
  auto n12 = gate_nand(n89, n116);
  auto n91 = gate_and(n88, n12);
  auto n90 = gate_xor(n89, n116);
  auto n22 = gate_nand(n90, b[4]);
  y[2] = gate_and(n91, n22);
  auto n93 = gate_xor(n152, n92);
  auto n95 = gate_and(y[2], n93);
  auto n159 = gate_xor(n95, n94);
  auto n28 = gate_nand(n159, n156);
  auto n115 = gate_xor(n159, n156);
  auto n97 = gate_xor(n145, n96);
  auto n99 = gate_and(y[2], n97);
  auto n127 = gate_xor(n99, n98);
  auto n100 = gate_not(n127);
  auto n114 = gate_and(n100, n152);
  auto n112 = gate_xor(n152, n100);
  auto n101 = gate_xor(n4, n129);
  auto n102 = gate_and(y[2], n101);
  auto n147 = gate_xor(n102, n5);
  auto n111 = gate_and(n147, n145);
  auto n109 = gate_xor(n145, n147);
  auto n104 = gate_and(y[2], b[0]);
  auto n131 = gate_xor(n104, n103);
  auto n105 = gate_not(n131);
  auto n108 = gate_and(n129, n105);
  auto n106 = gate_xor(n129, n105);
  auto n133 = gate_not(a[1]);
  auto n3 = gate_nand(b[0], n133);
  auto n107 = gate_and(n106, n3);
  auto n144 = gate_or(n108, n107);
  auto n110 = gate_and(n109, n144);
  auto n125 = gate_or(n111, n110);
  auto n113 = gate_and(n112, n125);
  auto n157 = gate_or(n114, n113);
  auto n29 = gate_nand(n115, n157);
  auto n118 = gate_and(n29, n28);
  auto n117 = gate_and(b[5], n116);
  auto n121 = gate_or(n118, n117);
  auto n119 = gate_not(y[2]);
  auto n123 = gate_and(n120, n119);
  auto n24 = gate_nand(n123, n164);
  auto n10 = gate_nand(n121, n24);
  y[1] = gate_and(n124, n10);
  auto n122 = gate_not(y[1]);
  auto n167 = gate_and(n123, n122);
  auto n166 = gate_xor(n124, n167);
  auto n126 = gate_xor(n125, n152);
  auto n128 = gate_and(n126, y[1]);
  auto n155 = gate_xor(n128, n127);
  auto n20 = gate_nand(b[4], n155);
  auto n154 = gate_xor(b[4], n155);
  auto n130 = gate_xor(n129, n3);
  auto n132 = gate_and(n130, y[1]);
  auto n143 = gate_xor(n132, n131);
  auto n18 = gate_nand(b[2], n143);
  auto n142 = gate_xor(b[2], n143);
  auto n134 = gate_and(y[1], b[0]);
  auto n135 = gate_xor(n134, n133);
  auto n140 = gate_and(n135, b[1]);
  auto n138 = gate_xor(n135, b[1]);
  auto n136 = gate_not(a[0]);
  auto n137 = gate_and(b[0], n136);
  auto n139 = gate_and(n138, n137);
  auto n141 = gate_or(n140, n139);
  auto n19 = gate_nand(n142, n141);
  auto n151 = gate_and(n19, n18);
  auto n1 = gate_nand(n152, n151);
  auto n150 = gate_xor(n152, n151);
  auto n146 = gate_xor(n145, n144);
  auto n148 = gate_and(n146, y[1]);
  auto n149 = gate_xor(n148, n147);
  auto n17 = gate_nand(n150, n149);
  auto n153 = gate_and(n17, n1);
  auto n21 = gate_nand(n154, n153);
  auto n163 = gate_and(n21, n20);
  auto n7 = gate_nand(n164, n163);
  auto n162 = gate_xor(n164, n163);
  auto n158 = gate_xor(n157, n156);
  auto n160 = gate_and(n158, y[1]);
  auto n161 = gate_xor(n160, n159);
  auto n27 = gate_nand(n162, n161);
  auto n165 = gate_and(n27, n7);
  auto n23 = gate_nand(n166, n165);
  auto n168 = gate_not(n167);
  auto n9 = gate_nand(b[6], n168);
  y[0] = gate_and(n23, n9);
}
template<> void $NameUint<7>::d_divsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n204 = gate_xor(a[6], b[6]);
  auto n124 = gate_not(a[1]);
  auto n152 = gate_not(a[0]);
  auto n96 = gate_and(n124, n152);
  auto n37 = gate_not(a[2]);
  auto n70 = gate_and(n96, n37);
  auto n38 = gate_not(a[3]);
  auto n52 = gate_and(n70, n38);
  auto n39 = gate_not(a[4]);
  auto n43 = gate_and(n52, n39);
  auto n40 = gate_not(a[5]);
  auto n41 = gate_and(n43, n40);
  auto n188 = gate_and(a[6], n41);
  auto n99 = gate_not(b[6]);
  auto n182 = gate_xor(b[5], n99);
  auto n170 = gate_xor(b[4], n99);
  auto n87 = gate_and(n182, n170);
  auto n143 = gate_xor(b[3], n99);
  auto n66 = gate_and(n87, n143);
  auto n162 = gate_xor(b[2], n99);
  auto n49 = gate_and(n66, n162);
  auto n147 = gate_xor(b[1], n99);
  auto n206 = gate_and(n49, n147);
  auto n19 = gate_nand(n206, b[0]);
  auto n51 = gate_and(n188, n19);
  auto n42 = gate_not(b[0]);
  auto n203 = gate_and(n99, n42);
  auto n55 = gate_not(n203);
  auto n44 = gate_not(n43);
  auto n45 = gate_and(n44, a[6]);
  auto n57 = gate_xor(n45, a[5]);
  auto n28 = gate_nand(n57, b[0]);
  auto n48 = gate_and(n55, n28);
  auto n46 = gate_and(n147, n51);
  auto n47 = gate_not(n46);
  auto n10 = gate_nand(n48, n47);
  auto n158 = gate_not(n147);
  auto n1 = gate_not(n158);
  auto n63 = gate_not(n188);
  auto n5 = gate_nand(n158, n63);
  auto n50 = gate_and(n10, n5);
  auto n187 = gate_and(n50, n49);
  auto n56 = gate_not(n187);
  auto n83 = gate_and(n51, n56);
  auto n62 = gate_and(n162, n83);
  auto n53 = gate_not(n52);
  auto n54 = gate_and(n53, a[6]);
  auto n67 = gate_xor(n54, a[4]);
  auto n27 = gate_nand(b[0], n67);
  auto n60 = gate_and(n55, n27);
  auto n9 = gate_nand(n60, n158);
  auto n59 = gate_xor(n60, n158);
  auto n76 = gate_and(n57, n56);
  auto n58 = gate_not(n76);
  auto n11 = gate_nand(n59, n58);
  auto n61 = gate_and(n11, n9);
  auto n64 = gate_or(n62, n61);
  auto n79 = gate_not(n162);
  auto n8 = gate_nand(n79, n63);
  auto n65 = gate_and(n64, n8);
  auto n186 = gate_and(n66, n65);
  auto n75 = gate_not(n186);
  auto n108 = gate_and(n83, n75);
  auto n82 = gate_and(n143, n108);
  auto n68 = gate_and(n186, b[0]);
  auto n92 = gate_xor(n68, n67);
  auto n69 = gate_and(n92, n147);
  auto n74 = gate_not(n69);
  auto n73 = gate_xor(n92, n1);
  auto n71 = gate_not(n70);
  auto n72 = gate_and(n71, a[6]);
  auto n95 = gate_xor(n72, a[3]);
  auto n90 = gate_mux(n99, n95, b[0]);
  auto n35 = gate_nand(n73, n90);
  auto n80 = gate_and(n74, n35);
  auto n14 = gate_nand(n80, n79);
  auto n78 = gate_xor(n80, n79);
  auto n89 = gate_and(n76, n75);
  auto n77 = gate_not(n89);
  auto n3 = gate_nand(n78, n77);
  auto n81 = gate_and(n3, n14);
  auto n85 = gate_or(n82, n81);
  auto n169 = gate_not(n143);
  auto n84 = gate_not(n83);
  auto n4 = gate_nand(n169, n84);
  auto n86 = gate_and(n85, n4);
  auto n185 = gate_and(n87, n86);
  auto n88 = gate_not(n185);
  auto n113 = gate_and(n108, n88);
  auto n15 = gate_nand(n113, n170);
  auto n135 = gate_and(n89, n88);
  auto n91 = gate_xor(n147, n90);
  auto n93 = gate_and(n185, n91);
  auto n116 = gate_xor(n93, n92);
  auto n105 = gate_and(n116, n162);
  auto n103 = gate_xor(n116, n162);
  auto n94 = gate_and(b[0], n185);
  auto n121 = gate_xor(n95, n94);
  auto n102 = gate_and(n121, n147);
  auto n100 = gate_xor(n121, n147);
  auto n97 = gate_not(n96);
  auto n98 = gate_and(n97, a[6]);
  auto n122 = gate_xor(n98, a[2]);
  auto n118 = gate_mux(n99, n122, b[0]);
  auto n101 = gate_and(n100, n118);
  auto n114 = gate_or(n102, n101);
  auto n104 = gate_and(n103, n114);
  auto n107 = gate_or(n105, n104);
  auto n33 = gate_nand(n135, n107);
  auto n106 = gate_xor(n135, n107);
  auto n34 = gate_nand(n106, n143);
  auto n111 = gate_and(n34, n33);
  auto n138 = gate_not(n170);
  auto n109 = gate_not(n108);
  auto n110 = gate_and(n138, n109);
  auto n112 = gate_or(n111, n110);
  auto n13 = gate_nand(n112, n15);
  auto n184 = gate_and(n13, n182);
  auto n134 = gate_not(n184);
  auto n176 = gate_and(n113, n134);
  auto n115 = gate_xor(n162, n114);
  auto n117 = gate_and(n184, n115);
  auto n145 = gate_xor(n117, n116);
  auto n32 = gate_nand(n145, n143);
  auto n133 = gate_xor(n143, n145);
  auto n119 = gate_xor(n118, n147);
  auto n120 = gate_and(n119, n184);
  auto n165 = gate_xor(n121, n120);
  auto n132 = gate_and(n165, n162);
  auto n130 = gate_xor(n165, n162);
  auto n123 = gate_and(n184, b[0]);
  auto n151 = gate_xor(n123, n122);
  auto n129 = gate_and(n151, n147);
  auto n127 = gate_xor(n151, n147);
  auto n125 = gate_and(a[0], a[6]);
  auto n153 = gate_xor(n125, n124);
  auto n126 = gate_mux(b[6], n153, b[0]);
  auto n148 = gate_not(n126);
  auto n128 = gate_and(n127, n148);
  auto n163 = gate_or(n129, n128);
  auto n131 = gate_and(n130, n163);
  auto n142 = gate_or(n132, n131);
  auto n31 = gate_nand(n133, n142);
  auto n139 = gate_and(n32, n31);
  auto n20 = gate_nand(n139, n138);
  auto n137 = gate_xor(n139, n138);
  auto n175 = gate_and(n135, n134);
  auto n136 = gate_not(n175);
  auto n21 = gate_nand(n137, n136);
  auto n141 = gate_and(n21, n20);
  auto n17 = gate_nand(n176, n141);
  auto n140 = gate_xor(n176, n141);
  auto n22 = gate_nand(n140, n182);
  auto n179 = gate_and(n22, n17);
  auto n174 = gate_not(n182);
  auto n183 = gate_not(n179);
  auto n144 = gate_xor(n143, n142);
  auto n146 = gate_and(n183, n144);
  auto n173 = gate_xor(n146, n145);
  auto n149 = gate_xor(n148, n147);
  auto n150 = gate_and(n149, n183);
  auto n161 = gate_xor(n151, n150);
  auto n157 = gate_mux(b[6], n152, b[0]);
  auto n6 = gate_nand(n158, n157);
  auto n156 = gate_xor(n158, n157);
  auto n154 = gate_and(n183, b[0]);
  auto n155 = gate_xor(n154, n153);
  auto n23 = gate_nand(n156, n155);
  auto n160 = gate_and(n23, n6);
  auto n24 = gate_nand(n161, n160);
  auto n159 = gate_xor(n161, n160);
  auto n25 = gate_nand(n159, n162);
  auto n168 = gate_and(n25, n24);
  auto n7 = gate_nand(n169, n168);
  auto n167 = gate_xor(n169, n168);
  auto n164 = gate_xor(n163, n162);
  auto n166 = gate_and(n183, n164);
  auto n26 = gate_xnor(n166, n165);
  auto n12 = gate_nand(n167, n26);
  auto n172 = gate_and(n12, n7);
  auto n29 = gate_nand(n173, n172);
  auto n171 = gate_xor(n173, n172);
  auto n30 = gate_nand(n171, n170);
  auto n180 = gate_and(n30, n29);
  auto n18 = gate_nand(n174, n180);
  auto n177 = gate_and(n175, n18);
  auto n178 = gate_or(n177, n176);
  auto n16 = gate_nand(n179, n178);
  auto n181 = gate_not(n180);
  auto n2 = gate_nand(n182, n181);
  auto n207 = gate_and(n16, n2);
  auto n202 = gate_and(n204, n207);
  auto n201 = gate_xor(n204, n183);
  auto n200 = gate_and(n202, n201);
  auto n199 = gate_xor(n204, n184);
  auto n198 = gate_and(n200, n199);
  auto n197 = gate_xor(n204, n185);
  auto n196 = gate_and(n198, n197);
  auto n195 = gate_xor(n204, n186);
  auto n194 = gate_and(n196, n195);
  auto n193 = gate_xor(n204, n187);
  auto n192 = gate_and(n194, n193);
  auto n189 = gate_and(n188, n206);
  auto n190 = gate_and(b[0], n189);
  auto n191 = gate_xor(n204, n190);
  y[6] = gate_xor(n192, n191);
  y[5] = gate_xor(n194, n193);
  y[4] = gate_xor(n196, n195);
  y[3] = gate_xor(n198, n197);
  y[2] = gate_xor(n200, n199);
  y[1] = gate_xor(n202, n201);
  auto n205 = gate_and(n204, n203);
  auto n36 = gate_nand(n206, n205);
  y[0] = gate_xor(n36, n207);
}
template<> void $NameUint<7>::d_eq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n20 = gate_xnor(b[6], a[6]);
  auto n21 = gate_xnor(b[0], a[0]);
  auto n22 = gate_xnor(a[4], b[4]);
  auto n23 = gate_not(b[1]);
  auto n26 = gate_xor(n23, a[1]);
  auto n24 = gate_not(a[2]);
  auto n25 = gate_xor(n24, b[2]);
  auto n27 = gate_and(n26, n25);
  auto n28 = gate_and(n27, n20);
  auto n34 = gate_and(n28, n21);
  auto n29 = gate_not(b[5]);
  auto n32 = gate_xor(n29, a[5]);
  auto n30 = gate_not(b[3]);
  auto n31 = gate_xor(n30, a[3]);
  auto n33 = gate_and(n32, n31);
  auto n35 = gate_and(n34, n33);
  y[0] = gate_and(n35, n22);
}
template<> void $NameUint<7>::d_ge
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n55 = gate_not(b[4]);
  auto n69 = gate_and(n55, a[4]);
  auto n67 = gate_xor(n55, a[4]);
  auto n56 = gate_not(a[0]);
  auto n59 = gate_and(b[0], n56);
  auto n48 = gate_nand(n59, b[1]);
  auto n58 = gate_xor(n59, b[1]);
  auto n57 = gate_not(a[1]);
  auto n45 = gate_nand(n58, n57);
  auto n62 = gate_and(n45, n48);
  auto n53 = gate_nand(a[2], n62);
  auto n61 = gate_xor(a[2], n62);
  auto n60 = gate_not(b[2]);
  auto n54 = gate_nand(n61, n60);
  auto n65 = gate_and(n54, n53);
  auto n50 = gate_nand(b[3], n65);
  auto n64 = gate_xor(b[3], n65);
  auto n63 = gate_not(a[3]);
  auto n46 = gate_nand(n64, n63);
  auto n66 = gate_and(n46, n50);
  auto n68 = gate_and(n67, n66);
  auto n72 = gate_or(n69, n68);
  auto n51 = gate_nand(a[5], n72);
  auto n71 = gate_xor(a[5], n72);
  auto n70 = gate_not(b[5]);
  auto n52 = gate_nand(n71, n70);
  auto n75 = gate_and(n52, n51);
  auto n49 = gate_nand(b[6], n75);
  auto n74 = gate_xor(b[6], n75);
  auto n73 = gate_not(a[6]);
  auto n47 = gate_nand(n74, n73);
  y[0] = gate_and(n47, n49);
}
template<> void $NameUint<7>::d_gesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n55 = gate_not(b[4]);
  auto n69 = gate_and(n55, a[4]);
  auto n67 = gate_xor(n55, a[4]);
  auto n56 = gate_not(a[0]);
  auto n59 = gate_and(b[0], n56);
  auto n48 = gate_nand(n59, b[1]);
  auto n58 = gate_xor(n59, b[1]);
  auto n57 = gate_not(a[1]);
  auto n45 = gate_nand(n58, n57);
  auto n62 = gate_and(n45, n48);
  auto n53 = gate_nand(a[2], n62);
  auto n61 = gate_xor(a[2], n62);
  auto n60 = gate_not(b[2]);
  auto n54 = gate_nand(n61, n60);
  auto n65 = gate_and(n54, n53);
  auto n47 = gate_nand(b[3], n65);
  auto n64 = gate_xor(b[3], n65);
  auto n63 = gate_not(a[3]);
  auto n46 = gate_nand(n64, n63);
  auto n66 = gate_and(n46, n47);
  auto n68 = gate_and(n67, n66);
  auto n72 = gate_or(n69, n68);
  auto n49 = gate_nand(a[5], n72);
  auto n71 = gate_xor(a[5], n72);
  auto n70 = gate_not(b[5]);
  auto n50 = gate_nand(n71, n70);
  auto n75 = gate_and(n50, n49);
  auto n51 = gate_nand(a[6], n75);
  auto n74 = gate_xor(a[6], n75);
  auto n73 = gate_not(b[6]);
  auto n52 = gate_nand(n74, n73);
  y[0] = gate_and(n52, n51);
}
template<> void $NameUint<7>::d_gt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n56 = gate_not(b[0]);
  auto n59 = gate_and(a[0], n56);
  auto n52 = gate_nand(a[1], n59);
  auto n58 = gate_xor(a[1], n59);
  auto n57 = gate_not(b[1]);
  auto n53 = gate_nand(n58, n57);
  auto n62 = gate_and(n53, n52);
  auto n46 = gate_nand(b[2], n62);
  auto n61 = gate_xor(b[2], n62);
  auto n60 = gate_not(a[2]);
  auto n47 = gate_nand(n61, n60);
  auto n65 = gate_and(n47, n46);
  auto n54 = gate_nand(n65, a[3]);
  auto n64 = gate_xor(n65, a[3]);
  auto n63 = gate_not(b[3]);
  auto n55 = gate_nand(n64, n63);
  auto n68 = gate_and(n55, n54);
  auto n48 = gate_nand(b[4], n68);
  auto n67 = gate_xor(b[4], n68);
  auto n66 = gate_not(a[4]);
  auto n44 = gate_nand(n67, n66);
  auto n71 = gate_and(n44, n48);
  auto n50 = gate_nand(a[5], n71);
  auto n70 = gate_xor(a[5], n71);
  auto n69 = gate_not(b[5]);
  auto n51 = gate_nand(n70, n69);
  auto n74 = gate_and(n51, n50);
  auto n49 = gate_nand(b[6], n74);
  auto n73 = gate_xor(b[6], n74);
  auto n72 = gate_not(a[6]);
  auto n45 = gate_nand(n73, n72);
  y[0] = gate_and(n45, n49);
}
template<> void $NameUint<7>::d_gtsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n56 = gate_not(b[0]);
  auto n59 = gate_and(a[0], n56);
  auto n50 = gate_nand(a[1], n59);
  auto n58 = gate_xor(a[1], n59);
  auto n57 = gate_not(b[1]);
  auto n51 = gate_nand(n58, n57);
  auto n62 = gate_and(n51, n50);
  auto n45 = gate_nand(b[2], n62);
  auto n61 = gate_xor(b[2], n62);
  auto n60 = gate_not(a[2]);
  auto n44 = gate_nand(n61, n60);
  auto n65 = gate_and(n44, n45);
  auto n52 = gate_nand(n65, a[3]);
  auto n64 = gate_xor(n65, a[3]);
  auto n63 = gate_not(b[3]);
  auto n53 = gate_nand(n64, n63);
  auto n68 = gate_and(n53, n52);
  auto n46 = gate_nand(b[4], n68);
  auto n67 = gate_xor(b[4], n68);
  auto n66 = gate_not(a[4]);
  auto n47 = gate_nand(n67, n66);
  auto n71 = gate_and(n47, n46);
  auto n48 = gate_nand(a[5], n71);
  auto n70 = gate_xor(a[5], n71);
  auto n69 = gate_not(b[5]);
  auto n49 = gate_nand(n70, n69);
  auto n74 = gate_and(n49, n48);
  auto n54 = gate_nand(a[6], n74);
  auto n73 = gate_xor(a[6], n74);
  auto n72 = gate_not(b[6]);
  auto n55 = gate_nand(n73, n72);
  y[0] = gate_and(n55, n54);
}
template<> void $NameUint<7>::d_inc
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_not(a[0]);
  y[1] = gate_xor(a[0], a[1]);
  auto n2 = gate_and(a[0], a[1]);
  y[2] = gate_xor(n2, a[2]);
  auto n3 = gate_and(n2, a[2]);
  y[3] = gate_xor(n3, a[3]);
  auto n4 = gate_and(n3, a[3]);
  y[4] = gate_xor(n4, a[4]);
  auto n5 = gate_and(n4, a[4]);
  y[5] = gate_xor(n5, a[5]);
  auto n6 = gate_and(n5, a[5]);
  y[6] = gate_xor(a[6], n6);
}
template<> void $NameUint<7>::d_ineq
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n23 = gate_xnor(b[1], a[1]);
  auto n24 = gate_xnor(a[4], b[4]);
  auto n25 = gate_xnor(a[5], b[5]);
  auto n26 = gate_not(b[0]);
  auto n29 = gate_xor(n26, a[0]);
  auto n27 = gate_not(a[3]);
  auto n28 = gate_xor(n27, b[3]);
  auto n30 = gate_and(n29, n28);
  auto n31 = gate_and(n30, n23);
  auto n37 = gate_and(n31, n25);
  auto n32 = gate_not(a[6]);
  auto n35 = gate_xor(n32, b[6]);
  auto n33 = gate_not(b[2]);
  auto n34 = gate_xor(n33, a[2]);
  auto n36 = gate_and(n35, n34);
  auto n38 = gate_and(n37, n36);
  y[0] = gate_nand(n38, n24);
}
template<> void $NameUint<7>::d_intmux
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b, const vector<Bit> & c) noexcept
{
  auto n15 = gate_not(a[5]);
  auto n14 = gate_not(a[6]);
  auto n19 = gate_and(n15, n14);
  auto n17 = gate_not(a[0]);
  auto n16 = gate_not(a[3]);
  auto n18 = gate_and(n17, n16);
  auto n21 = gate_and(n19, n18);
  auto n20 = gate_not(a[1]);
  auto n25 = gate_and(n21, n20);
  auto n23 = gate_not(a[2]);
  auto n22 = gate_not(a[4]);
  auto n24 = gate_and(n23, n22);
  auto n26 = gate_and(n25, n24);
  y[0] = gate_mux(b[0], c[0], n26);
  y[1] = gate_mux(b[1], c[1], n26);
  y[2] = gate_mux(b[2], c[2], n26);
  y[3] = gate_mux(b[3], c[3], n26);
  y[4] = gate_mux(b[4], c[4], n26);
  y[5] = gate_mux(b[5], c[5], n26);
  y[6] = gate_mux(b[6], c[6], n26);
}
template<> void $NameUint<7>::d_le
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n55 = gate_not(a[4]);
  auto n69 = gate_and(n55, b[4]);
  auto n67 = gate_xor(n55, b[4]);
  auto n56 = gate_not(b[0]);
  auto n59 = gate_and(a[0], n56);
  auto n51 = gate_nand(n59, a[1]);
  auto n58 = gate_xor(n59, a[1]);
  auto n57 = gate_not(b[1]);
  auto n52 = gate_nand(n58, n57);
  auto n62 = gate_and(n52, n51);
  auto n48 = gate_nand(b[2], n62);
  auto n61 = gate_xor(b[2], n62);
  auto n60 = gate_not(a[2]);
  auto n45 = gate_nand(n61, n60);
  auto n65 = gate_and(n45, n48);
  auto n53 = gate_nand(a[3], n65);
  auto n64 = gate_xor(a[3], n65);
  auto n63 = gate_not(b[3]);
  auto n54 = gate_nand(n64, n63);
  auto n66 = gate_and(n54, n53);
  auto n68 = gate_and(n67, n66);
  auto n72 = gate_or(n69, n68);
  auto n47 = gate_nand(b[5], n72);
  auto n71 = gate_xor(b[5], n72);
  auto n70 = gate_not(a[5]);
  auto n46 = gate_nand(n71, n70);
  auto n75 = gate_and(n46, n47);
  auto n49 = gate_nand(a[6], n75);
  auto n74 = gate_xor(a[6], n75);
  auto n73 = gate_not(b[6]);
  auto n50 = gate_nand(n74, n73);
  y[0] = gate_and(n50, n49);
}
template<> void $NameUint<7>::d_lesig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n55 = gate_not(a[4]);
  auto n69 = gate_and(n55, b[4]);
  auto n67 = gate_xor(n55, b[4]);
  auto n56 = gate_not(b[0]);
  auto n59 = gate_and(a[0], n56);
  auto n51 = gate_nand(n59, a[1]);
  auto n58 = gate_xor(n59, a[1]);
  auto n57 = gate_not(b[1]);
  auto n52 = gate_nand(n58, n57);
  auto n62 = gate_and(n52, n51);
  auto n48 = gate_nand(b[2], n62);
  auto n61 = gate_xor(b[2], n62);
  auto n60 = gate_not(a[2]);
  auto n45 = gate_nand(n61, n60);
  auto n65 = gate_and(n45, n48);
  auto n53 = gate_nand(a[3], n65);
  auto n64 = gate_xor(a[3], n65);
  auto n63 = gate_not(b[3]);
  auto n54 = gate_nand(n64, n63);
  auto n66 = gate_and(n54, n53);
  auto n68 = gate_and(n67, n66);
  auto n72 = gate_or(n69, n68);
  auto n49 = gate_nand(b[5], n72);
  auto n71 = gate_xor(b[5], n72);
  auto n70 = gate_not(a[5]);
  auto n46 = gate_nand(n71, n70);
  auto n75 = gate_and(n46, n49);
  auto n50 = gate_nand(b[6], n75);
  auto n74 = gate_xor(b[6], n75);
  auto n73 = gate_not(a[6]);
  auto n47 = gate_nand(n74, n73);
  y[0] = gate_and(n47, n50);
}
template<> void $NameUint<7>::d_logand
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n32 = gate_not(a[5]);
  auto n31 = gate_not(a[6]);
  auto n36 = gate_and(n32, n31);
  auto n34 = gate_not(a[0]);
  auto n33 = gate_not(a[3]);
  auto n35 = gate_and(n34, n33);
  auto n38 = gate_and(n36, n35);
  auto n37 = gate_not(a[1]);
  auto n42 = gate_and(n38, n37);
  auto n40 = gate_not(a[2]);
  auto n39 = gate_not(a[4]);
  auto n41 = gate_and(n40, n39);
  auto n30 = gate_nand(n42, n41);
  auto n44 = gate_not(b[0]);
  auto n43 = gate_not(b[6]);
  auto n48 = gate_and(n44, n43);
  auto n46 = gate_not(b[5]);
  auto n45 = gate_not(b[3]);
  auto n47 = gate_and(n46, n45);
  auto n54 = gate_and(n48, n47);
  auto n50 = gate_not(b[4]);
  auto n49 = gate_not(b[2]);
  auto n52 = gate_and(n50, n49);
  auto n51 = gate_not(b[1]);
  auto n53 = gate_and(n52, n51);
  auto n29 = gate_nand(n54, n53);
  y[0] = gate_and(n30, n29);
}
template<> void $NameUint<7>::d_lognot
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n15 = gate_not(a[5]);
  auto n14 = gate_not(a[6]);
  auto n19 = gate_and(n15, n14);
  auto n17 = gate_not(a[0]);
  auto n16 = gate_not(a[3]);
  auto n18 = gate_and(n17, n16);
  auto n21 = gate_and(n19, n18);
  auto n20 = gate_not(a[1]);
  auto n25 = gate_and(n21, n20);
  auto n23 = gate_not(a[2]);
  auto n22 = gate_not(a[4]);
  auto n24 = gate_and(n23, n22);
  y[0] = gate_and(n25, n24);
}
template<> void $NameUint<7>::d_logor
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n30 = gate_not(b[2]);
  auto n29 = gate_not(b[3]);
  auto n34 = gate_and(n30, n29);
  auto n32 = gate_not(b[1]);
  auto n31 = gate_not(b[6]);
  auto n33 = gate_and(n32, n31);
  auto n42 = gate_and(n34, n33);
  auto n36 = gate_not(b[5]);
  auto n35 = gate_not(b[4]);
  auto n40 = gate_and(n36, n35);
  auto n38 = gate_not(a[0]);
  auto n37 = gate_not(a[3]);
  auto n39 = gate_and(n38, n37);
  auto n41 = gate_and(n40, n39);
  auto n44 = gate_and(n42, n41);
  auto n43 = gate_not(a[2]);
  auto n54 = gate_and(n44, n43);
  auto n46 = gate_not(a[4]);
  auto n45 = gate_not(b[0]);
  auto n50 = gate_and(n46, n45);
  auto n48 = gate_not(a[5]);
  auto n47 = gate_not(a[6]);
  auto n49 = gate_and(n48, n47);
  auto n52 = gate_and(n50, n49);
  auto n51 = gate_not(a[1]);
  auto n53 = gate_and(n52, n51);
  y[0] = gate_nand(n54, n53);
}
template<> void $NameUint<7>::d_lt
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n56 = gate_not(a[0]);
  auto n59 = gate_and(b[0], n56);
  auto n46 = gate_nand(b[1], n59);
  auto n58 = gate_xor(b[1], n59);
  auto n57 = gate_not(a[1]);
  auto n48 = gate_nand(n58, n57);
  auto n62 = gate_and(n48, n46);
  auto n50 = gate_nand(a[2], n62);
  auto n61 = gate_xor(a[2], n62);
  auto n60 = gate_not(b[2]);
  auto n51 = gate_nand(n61, n60);
  auto n65 = gate_and(n51, n50);
  auto n47 = gate_nand(n65, b[3]);
  auto n64 = gate_xor(n65, b[3]);
  auto n63 = gate_not(a[3]);
  auto n44 = gate_nand(n64, n63);
  auto n68 = gate_and(n44, n47);
  auto n52 = gate_nand(a[4], n68);
  auto n67 = gate_xor(a[4], n68);
  auto n66 = gate_not(b[4]);
  auto n53 = gate_nand(n67, n66);
  auto n71 = gate_and(n53, n52);
  auto n49 = gate_nand(b[5], n71);
  auto n70 = gate_xor(b[5], n71);
  auto n69 = gate_not(a[5]);
  auto n45 = gate_nand(n70, n69);
  auto n74 = gate_and(n45, n49);
  auto n54 = gate_nand(a[6], n74);
  auto n73 = gate_xor(a[6], n74);
  auto n72 = gate_not(b[6]);
  auto n55 = gate_nand(n73, n72);
  y[0] = gate_and(n55, n54);
}
template<> void $NameUint<7>::d_ltsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n56 = gate_not(a[0]);
  auto n59 = gate_and(b[0], n56);
  auto n48 = gate_nand(b[1], n59);
  auto n58 = gate_xor(b[1], n59);
  auto n57 = gate_not(a[1]);
  auto n44 = gate_nand(n58, n57);
  auto n62 = gate_and(n44, n48);
  auto n52 = gate_nand(a[2], n62);
  auto n61 = gate_xor(a[2], n62);
  auto n60 = gate_not(b[2]);
  auto n53 = gate_nand(n61, n60);
  auto n65 = gate_and(n53, n52);
  auto n49 = gate_nand(n65, b[3]);
  auto n64 = gate_xor(n65, b[3]);
  auto n63 = gate_not(a[3]);
  auto n45 = gate_nand(n64, n63);
  auto n68 = gate_and(n45, n49);
  auto n54 = gate_nand(a[4], n68);
  auto n67 = gate_xor(a[4], n68);
  auto n66 = gate_not(b[4]);
  auto n55 = gate_nand(n67, n66);
  auto n71 = gate_and(n55, n54);
  auto n51 = gate_nand(b[5], n71);
  auto n70 = gate_xor(b[5], n71);
  auto n69 = gate_not(a[5]);
  auto n46 = gate_nand(n70, n69);
  auto n74 = gate_and(n46, n51);
  auto n50 = gate_nand(b[6], n74);
  auto n73 = gate_xor(b[6], n74);
  auto n72 = gate_not(a[6]);
  auto n47 = gate_nand(n73, n72);
  y[0] = gate_and(n47, n50);
}
template<> void $NameUint<7>::d_mod
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n139 = gate_not(b[1]);
  auto n160 = gate_not(b[6]);
  auto n164 = gate_not(b[5]);
  auto n118 = gate_and(n160, n164);
  auto n169 = gate_not(b[4]);
  auto n56 = gate_and(n118, n169);
  auto n174 = gate_not(b[3]);
  auto n30 = gate_and(n56, n174);
  auto n179 = gate_not(b[2]);
  auto n27 = gate_and(n30, n179);
  auto n11 = gate_and(n27, b[0]);
  auto n14 = gate_and(n139, n11);
  auto n12 = gate_not(n14);
  auto n19 = gate_and(a[6], n12);
  auto n13 = gate_xor(n139, a[6]);
  auto n15 = gate_and(n27, n13);
  auto n17 = gate_or(n15, n14);
  auto n16 = gate_not(a[5]);
  auto n2 = gate_nand(b[0], n16);
  auto n20 = gate_and(n17, n2);
  auto n4 = gate_nand(n20, b[0]);
  auto n18 = gate_not(n20);
  auto n28 = gate_and(n19, n18);
  auto n35 = gate_and(a[5], n4);
  auto n25 = gate_and(n35, n139);
  auto n23 = gate_xor(n35, n139);
  auto n21 = gate_not(a[4]);
  auto n37 = gate_and(b[0], n21);
  auto n22 = gate_not(n37);
  auto n24 = gate_and(n23, n22);
  auto n29 = gate_or(n25, n24);
  auto n26 = gate_xor(n179, n29);
  auto n1 = gate_nand(n30, n26);
  auto n50 = gate_and(n28, n1);
  auto n34 = gate_and(n27, n28);
  auto n32 = gate_xor(n28, n179);
  auto n31 = gate_and(n30, n29);
  auto n33 = gate_and(n32, n31);
  auto n39 = gate_or(n34, n33);
  auto n5 = gate_nand(n37, n39);
  auto n36 = gate_and(b[1], n39);
  auto n38 = gate_xor(n36, n35);
  auto n59 = gate_and(n38, n5);
  auto n48 = gate_and(n179, n59);
  auto n46 = gate_xor(n179, n59);
  auto n40 = gate_and(n39, b[0]);
  auto n63 = gate_xor(n40, a[4]);
  auto n45 = gate_and(n139, n63);
  auto n43 = gate_xor(n139, n63);
  auto n41 = gate_not(a[3]);
  auto n61 = gate_and(b[0], n41);
  auto n42 = gate_not(n61);
  auto n44 = gate_and(n43, n42);
  auto n57 = gate_or(n45, n44);
  auto n47 = gate_and(n46, n57);
  auto n51 = gate_or(n48, n47);
  auto n49 = gate_xor(n174, n51);
  auto n6 = gate_nand(n56, n49);
  auto n79 = gate_and(n50, n6);
  auto n54 = gate_and(n174, n50);
  auto n52 = gate_xor(n174, n50);
  auto n53 = gate_and(n52, n51);
  auto n55 = gate_or(n54, n53);
  auto n65 = gate_and(n56, n55);
  auto n58 = gate_xor(n57, n179);
  auto n60 = gate_and(n65, n58);
  auto n87 = gate_xor(n60, n59);
  auto n77 = gate_and(n87, n174);
  auto n75 = gate_xor(n174, n87);
  auto n62 = gate_xor(n61, b[1]);
  auto n64 = gate_and(n65, n62);
  auto n91 = gate_xor(n64, n63);
  auto n74 = gate_and(n91, n179);
  auto n72 = gate_xor(n179, n91);
  auto n66 = gate_and(n65, b[0]);
  auto n95 = gate_xor(n66, a[3]);
  auto n71 = gate_and(n139, n95);
  auto n69 = gate_xor(n139, n95);
  auto n67 = gate_not(a[2]);
  auto n93 = gate_and(b[0], n67);
  auto n68 = gate_not(n93);
  auto n70 = gate_and(n69, n68);
  auto n89 = gate_or(n71, n70);
  auto n73 = gate_and(n72, n89);
  auto n85 = gate_or(n74, n73);
  auto n76 = gate_and(n75, n85);
  auto n80 = gate_or(n77, n76);
  auto n78 = gate_xor(n169, n80);
  auto n7 = gate_nand(n118, n78);
  auto n117 = gate_and(n79, n7);
  auto n83 = gate_and(n79, n169);
  auto n81 = gate_xor(n79, n169);
  auto n82 = gate_and(n81, n80);
  auto n84 = gate_or(n83, n82);
  auto n97 = gate_and(n118, n84);
  auto n86 = gate_xor(n174, n85);
  auto n88 = gate_and(n97, n86);
  auto n123 = gate_xor(n88, n87);
  auto n112 = gate_and(n123, n169);
  auto n110 = gate_xor(n169, n123);
  auto n90 = gate_xor(n179, n89);
  auto n92 = gate_and(n97, n90);
  auto n127 = gate_xor(n92, n91);
  auto n109 = gate_and(n127, n174);
  auto n107 = gate_xor(n174, n127);
  auto n94 = gate_xor(n93, b[1]);
  auto n96 = gate_and(n97, n94);
  auto n131 = gate_xor(n96, n95);
  auto n106 = gate_and(n131, n179);
  auto n104 = gate_xor(n179, n131);
  auto n98 = gate_and(n97, b[0]);
  auto n135 = gate_xor(n98, a[2]);
  auto n103 = gate_and(n139, n135);
  auto n101 = gate_xor(n139, n135);
  auto n99 = gate_not(a[1]);
  auto n133 = gate_and(b[0], n99);
  auto n100 = gate_not(n133);
  auto n102 = gate_and(n101, n100);
  auto n129 = gate_or(n103, n102);
  auto n105 = gate_and(n104, n129);
  auto n125 = gate_or(n106, n105);
  auto n108 = gate_and(n107, n125);
  auto n121 = gate_or(n109, n108);
  auto n111 = gate_and(n110, n121);
  auto n115 = gate_or(n112, n111);
  auto n113 = gate_xor(n164, n115);
  auto n8 = gate_nand(n113, n160);
  auto n162 = gate_and(n117, n8);
  auto n157 = gate_not(n117);
  auto n3 = gate_nand(b[6], n157);
  auto n114 = gate_xor(b[5], n157);
  auto n116 = gate_and(n115, n114);
  auto n120 = gate_and(n116, n160);
  auto n119 = gate_and(n118, n117);
  auto n137 = gate_or(n120, n119);
  auto n122 = gate_xor(n169, n121);
  auto n124 = gate_and(n137, n122);
  auto n166 = gate_xor(n124, n123);
  auto n156 = gate_and(n166, n164);
  auto n154 = gate_xor(n164, n166);
  auto n126 = gate_xor(n174, n125);
  auto n128 = gate_and(n137, n126);
  auto n171 = gate_xor(n128, n127);
  auto n153 = gate_and(n171, n169);
  auto n151 = gate_xor(n169, n171);
  auto n130 = gate_xor(n179, n129);
  auto n132 = gate_and(n137, n130);
  auto n176 = gate_xor(n132, n131);
  auto n150 = gate_and(n176, n174);
  auto n148 = gate_xor(n174, n176);
  auto n134 = gate_xor(n133, b[1]);
  auto n136 = gate_and(n137, n134);
  auto n181 = gate_xor(n136, n135);
  auto n147 = gate_and(n181, n179);
  auto n145 = gate_xor(n179, n181);
  auto n138 = gate_and(n137, b[0]);
  auto n185 = gate_xor(n138, a[1]);
  auto n144 = gate_and(n139, n185);
  auto n142 = gate_xor(n139, n185);
  auto n140 = gate_not(a[0]);
  auto n183 = gate_and(b[0], n140);
  auto n141 = gate_not(n183);
  auto n143 = gate_and(n142, n141);
  auto n178 = gate_or(n144, n143);
  auto n146 = gate_and(n145, n178);
  auto n173 = gate_or(n147, n146);
  auto n149 = gate_and(n148, n173);
  auto n168 = gate_or(n150, n149);
  auto n152 = gate_and(n151, n168);
  auto n163 = gate_or(n153, n152);
  auto n155 = gate_and(n154, n163);
  auto n161 = gate_or(n156, n155);
  auto n9 = gate_nand(n161, n160);
  auto n159 = gate_and(n161, n3);
  auto n158 = gate_and(n162, n160);
  auto n187 = gate_or(n159, n158);
  auto n10 = gate_nand(n187, n9);
  y[6] = gate_and(n162, n10);
  auto n165 = gate_xor(n164, n163);
  auto n167 = gate_and(n165, n187);
  y[5] = gate_xor(n167, n166);
  auto n170 = gate_xor(n169, n168);
  auto n172 = gate_and(n170, n187);
  y[4] = gate_xor(n172, n171);
  auto n175 = gate_xor(n174, n173);
  auto n177 = gate_and(n175, n187);
  y[3] = gate_xor(n177, n176);
  auto n180 = gate_xor(n179, n178);
  auto n182 = gate_and(n180, n187);
  y[2] = gate_xor(n182, n181);
  auto n184 = gate_xor(n183, b[1]);
  auto n186 = gate_and(n184, n187);
  y[1] = gate_xor(n186, n185);
  auto n188 = gate_and(n187, b[0]);
  y[0] = gate_xor(n188, a[0]);
}
template<> void $NameUint<7>::d_modsig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n91 = gate_xor(b[2], b[6]);
  auto n188 = gate_not(n91);
  auto n152 = gate_xor(b[4], b[6]);
  auto n208 = gate_not(n152);
  auto n214 = gate_xor(b[5], b[6]);
  auto n156 = gate_not(n214);
  auto n117 = gate_and(n208, n156);
  auto n121 = gate_xor(b[3], b[6]);
  auto n202 = gate_not(n121);
  auto n83 = gate_and(n117, n202);
  auto n136 = gate_not(a[1]);
  auto n172 = gate_not(a[0]);
  auto n9 = gate_nand(b[0], n172);
  auto n101 = gate_and(n136, n172);
  auto n103 = gate_not(a[2]);
  auto n72 = gate_and(n101, n103);
  auto n74 = gate_not(a[3]);
  auto n53 = gate_and(n72, n74);
  auto n55 = gate_not(a[4]);
  auto n43 = gate_and(n53, n55);
  auto n40 = gate_not(n43);
  auto n41 = gate_and(n40, a[6]);
  auto n44 = gate_not(a[5]);
  auto n47 = gate_xor(n41, n44);
  auto n39 = gate_nand(b[0], n47);
  auto n51 = gate_not(n47);
  auto n50 = gate_and(n83, n188);
  auto n64 = gate_xor(b[1], b[6]);
  auto n195 = gate_not(n64);
  auto n42 = gate_and(b[0], n50);
  auto n5 = gate_nand(n195, n42);
  auto n45 = gate_and(n43, n5);
  auto n46 = gate_and(n45, n44);
  auto n61 = gate_and(a[6], n46);
  auto n48 = gate_xor(n195, n61);
  auto n49 = gate_and(n48, n39);
  auto n59 = gate_and(n50, n49);
  auto n15 = gate_nand(n59, b[0]);
  auto n65 = gate_and(n51, n15);
  auto n4 = gate_nand(n65, n195);
  auto n52 = gate_not(b[0]);
  auto n16 = gate_nand(b[6], n52);
  auto n54 = gate_not(n53);
  auto n56 = gate_and(n54, a[6]);
  auto n71 = gate_xor(n56, n55);
  auto n26 = gate_nand(b[0], n71);
  auto n67 = gate_and(n16, n26);
  auto n57 = gate_xor(n65, n195);
  auto n13 = gate_nand(n67, n57);
  auto n58 = gate_and(n4, n13);
  auto n82 = gate_xor(n91, n58);
  auto n19 = gate_nand(n83, n82);
  auto n60 = gate_not(n59);
  auto n84 = gate_and(n61, n60);
  auto n62 = gate_not(n84);
  auto n12 = gate_nand(n82, n62);
  auto n63 = gate_and(n12, n188);
  auto n70 = gate_and(n83, n63);
  auto n14 = gate_nand(n70, b[0]);
  auto n66 = gate_and(n70, n64);
  auto n69 = gate_xor(n66, n65);
  auto n68 = gate_not(n67);
  auto n1 = gate_nand(n70, n68);
  auto n92 = gate_and(n69, n1);
  auto n80 = gate_and(n188, n92);
  auto n78 = gate_xor(n188, n92);
  auto n97 = gate_xor(n14, n71);
  auto n25 = gate_nand(n97, n195);
  auto n76 = gate_xor(n97, n195);
  auto n73 = gate_not(n72);
  auto n75 = gate_and(n73, a[6]);
  auto n100 = gate_xor(n75, n74);
  auto n23 = gate_nand(b[0], n100);
  auto n95 = gate_and(n16, n23);
  auto n24 = gate_nand(n76, n95);
  auto n90 = gate_and(n25, n24);
  auto n77 = gate_not(n90);
  auto n79 = gate_and(n78, n77);
  auto n86 = gate_or(n80, n79);
  auto n81 = gate_xor(n86, n202);
  auto n8 = gate_nand(n81, n117);
  auto n85 = gate_and(n84, n19);
  auto n116 = gate_and(n8, n85);
  auto n88 = gate_and(n85, n202);
  auto n87 = gate_and(n202, n86);
  auto n89 = gate_or(n88, n87);
  auto n99 = gate_and(n117, n89);
  auto n27 = gate_nand(n99, b[0]);
  auto n30 = gate_nand(n99, n90);
  auto n93 = gate_and(n99, n91);
  auto n94 = gate_xor(n93, n92);
  auto n122 = gate_and(n30, n94);
  auto n112 = gate_and(n122, n202);
  auto n110 = gate_xor(n202, n122);
  auto n96 = gate_xor(n195, n95);
  auto n98 = gate_and(n99, n96);
  auto n127 = gate_xor(n98, n97);
  auto n29 = gate_nand(n127, n188);
  auto n108 = gate_xor(n127, n188);
  auto n132 = gate_xor(n27, n100);
  auto n107 = gate_and(n132, n195);
  auto n105 = gate_xor(n132, n195);
  auto n102 = gate_not(n101);
  auto n104 = gate_and(n102, a[6]);
  auto n134 = gate_xor(n104, n103);
  auto n22 = gate_nand(b[0], n134);
  auto n129 = gate_and(n16, n22);
  auto n106 = gate_and(n105, n129);
  auto n125 = gate_or(n107, n106);
  auto n28 = gate_nand(n108, n125);
  auto n120 = gate_and(n29, n28);
  auto n109 = gate_not(n120);
  auto n111 = gate_and(n110, n109);
  auto n114 = gate_or(n112, n111);
  auto n113 = gate_xor(n208, n114);
  auto n7 = gate_nand(n113, n156);
  auto n149 = gate_and(n116, n7);
  auto n37 = gate_nand(n149, n156);
  auto n115 = gate_and(n114, n208);
  auto n119 = gate_and(n115, n156);
  auto n118 = gate_and(n117, n116);
  auto n133 = gate_or(n119, n118);
  auto n31 = gate_nand(n133, b[0]);
  auto n36 = gate_nand(n133, n120);
  auto n123 = gate_and(n133, n121);
  auto n124 = gate_xor(n123, n122);
  auto n153 = gate_and(n36, n124);
  auto n147 = gate_and(n153, n208);
  auto n145 = gate_xor(n208, n153);
  auto n126 = gate_xor(n188, n125);
  auto n128 = gate_and(n133, n126);
  auto n159 = gate_xor(n128, n127);
  auto n35 = gate_nand(n159, n202);
  auto n143 = gate_xor(n202, n159);
  auto n130 = gate_xor(n129, n195);
  auto n131 = gate_and(n130, n133);
  auto n163 = gate_xor(n132, n131);
  auto n142 = gate_and(n163, n188);
  auto n140 = gate_xor(n163, n188);
  auto n168 = gate_xor(n31, n134);
  auto n139 = gate_and(n168, n195);
  auto n137 = gate_xor(n168, n195);
  auto n135 = gate_and(a[6], a[0]);
  auto n169 = gate_xor(n136, n135);
  auto n21 = gate_nand(b[0], n169);
  auto n165 = gate_and(n16, n21);
  auto n138 = gate_and(n137, n165);
  auto n161 = gate_or(n139, n138);
  auto n141 = gate_and(n140, n161);
  auto n157 = gate_or(n142, n141);
  auto n34 = gate_nand(n143, n157);
  auto n151 = gate_and(n35, n34);
  auto n144 = gate_not(n151);
  auto n146 = gate_and(n145, n144);
  auto n150 = gate_or(n147, n146);
  auto n6 = gate_nand(n150, n156);
  auto n10 = gate_nand(n37, n6);
  auto n2 = gate_nand(n10, n151);
  auto n148 = gate_xor(n150, n214);
  auto n38 = gate_nand(n149, n148);
  auto n154 = gate_and(n10, n152);
  auto n155 = gate_xor(n154, n153);
  auto n215 = gate_and(n2, n155);
  auto n18 = gate_nand(n215, n156);
  auto n184 = gate_xor(n156, n215);
  auto n158 = gate_xor(n202, n157);
  auto n160 = gate_and(n10, n158);
  auto n210 = gate_xor(n160, n159);
  auto n33 = gate_nand(n210, n208);
  auto n182 = gate_xor(n208, n210);
  auto n162 = gate_xor(n188, n161);
  auto n164 = gate_and(n10, n162);
  auto n204 = gate_xor(n164, n163);
  auto n181 = gate_and(n204, n202);
  auto n179 = gate_xor(n204, n202);
  auto n166 = gate_xor(n165, n195);
  auto n167 = gate_and(n166, n10);
  auto n190 = gate_xor(n168, n167);
  auto n178 = gate_and(n190, n188);
  auto n176 = gate_xor(n190, n188);
  auto n170 = gate_and(n10, b[0]);
  auto n198 = gate_xor(n170, n169);
  auto n171 = gate_not(n198);
  auto n175 = gate_and(n171, n195);
  auto n173 = gate_xor(n171, n195);
  auto n196 = gate_and(n16, n9);
  auto n174 = gate_and(n173, n196);
  auto n187 = gate_or(n175, n174);
  auto n177 = gate_and(n176, n187);
  auto n201 = gate_or(n178, n177);
  auto n180 = gate_and(n179, n201);
  auto n207 = gate_or(n181, n180);
  auto n32 = gate_nand(n182, n207);
  auto n213 = gate_and(n33, n32);
  auto n183 = gate_not(n213);
  auto n17 = gate_nand(n184, n183);
  auto n186 = gate_and(n18, n17);
  auto n11 = gate_nand(n186, n38);
  auto n3 = gate_nand(n11, n213);
  auto n185 = gate_or(n38, n186);
  auto n220 = gate_and(a[6], n185);
  auto n189 = gate_xor(n188, n187);
  auto n191 = gate_and(n11, n189);
  auto n192 = gate_xor(n191, n190);
  auto n228 = gate_xor(a[6], n192);
  auto n194 = gate_and(b[0], n11);
  auto n193 = gate_xor(a[6], a[0]);
  auto n232 = gate_xor(n194, n193);
  y[0] = gate_xor(a[6], n232);
  auto n200 = gate_and(a[6], n232);
  auto n197 = gate_xor(n196, n195);
  auto n199 = gate_and(n197, n11);
  auto n230 = gate_xor(n199, n198);
  auto n227 = gate_and(n200, n230);
  auto n226 = gate_and(n228, n227);
  auto n203 = gate_xor(n202, n201);
  auto n205 = gate_and(n11, n203);
  auto n206 = gate_xor(n205, n204);
  auto n225 = gate_xor(a[6], n206);
  auto n224 = gate_and(n226, n225);
  auto n209 = gate_xor(n208, n207);
  auto n211 = gate_and(n11, n209);
  auto n212 = gate_xor(n211, n210);
  auto n223 = gate_xor(a[6], n212);
  auto n222 = gate_and(n224, n223);
  auto n216 = gate_and(n11, n214);
  auto n217 = gate_xor(n216, n215);
  auto n218 = gate_and(n3, n217);
  auto n221 = gate_xor(a[6], n218);
  auto n219 = gate_and(n222, n221);
  y[6] = gate_xor(n220, n219);
  y[5] = gate_xor(n222, n221);
  y[4] = gate_xor(n224, n223);
  y[3] = gate_xor(n226, n225);
  y[2] = gate_xor(n228, n227);
  auto n229 = gate_not(n232);
  auto n231 = gate_and(n229, a[6]);
  y[1] = gate_xnor(n231, n230);
}
template<> void $NameUint<7>::d_mul
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_and(b[0], a[0]);
  auto n21 = gate_and(b[0], a[1]);
  auto n20 = gate_and(b[1], a[0]);
  y[1] = gate_xor(n21, n20);
  auto n36 = gate_and(b[1], a[1]);
  auto n38 = gate_and(b[2], a[0]);
  auto n1 = gate_nand(n36, n38);
  auto n26 = gate_xor(n36, n38);
  auto n25 = gate_and(b[0], a[2]);
  auto n18 = gate_nand(n26, n25);
  auto n28 = gate_xor(n26, n25);
  auto n27 = gate_and(n21, n20);
  auto n19 = gate_nand(n28, n27);
  y[2] = gate_xor(n28, n27);
  auto n24 = gate_and(a[0], b[3]);
  auto n22 = gate_and(a[1], n1);
  auto n23 = gate_and(n22, b[2]);
  auto n6 = gate_xnor(n24, n23);
  auto n35 = gate_and(b[0], a[3]);
  auto n34 = gate_and(b[1], a[2]);
  auto n33 = gate_xor(n35, n34);
  auto n31 = gate_and(n18, n19);
  auto n29 = gate_xor(n33, n31);
  y[3] = gate_xor(n6, n29);
  auto n44 = gate_and(b[3], a[1]);
  auto n43 = gate_and(b[4], a[0]);
  auto n46 = gate_xor(n44, n43);
  auto n45 = gate_and(b[2], a[2]);
  auto n55 = gate_xor(n46, n45);
  auto n30 = gate_not(n33);
  auto n8 = gate_nand(n31, n30);
  auto n32 = gate_not(n31);
  auto n9 = gate_nand(n33, n32);
  auto n2 = gate_nand(n9, n6);
  auto n54 = gate_and(n8, n2);
  auto n17 = gate_nand(n55, n54);
  auto n57 = gate_xor(n55, n54);
  auto n40 = gate_and(b[0], a[4]);
  auto n39 = gate_and(a[3], b[1]);
  auto n51 = gate_xor(n40, n39);
  auto n50 = gate_and(n35, n34);
  auto n11 = gate_nand(n51, n50);
  auto n53 = gate_xor(n51, n50);
  auto n37 = gate_or(n44, n36);
  auto n52 = gate_and(n38, n37);
  auto n12 = gate_nand(n53, n52);
  auto n56 = gate_xor(n53, n52);
  auto n13 = gate_nand(n57, n56);
  y[4] = gate_xor(n57, n56);
  auto n64 = gate_and(a[4], b[1]);
  auto n41 = gate_and(b[2], a[3]);
  auto n65 = gate_and(n40, n39);
  auto n68 = gate_not(n65);
  auto n63 = gate_xor(n41, n68);
  auto n69 = gate_not(n63);
  auto n62 = gate_and(b[0], a[5]);
  auto n42 = gate_xor(n69, n62);
  auto n61 = gate_xor(n64, n42);
  auto n48 = gate_and(n44, n43);
  auto n47 = gate_and(n46, n45);
  auto n58 = gate_or(n48, n47);
  auto n79 = gate_and(a[1], b[4]);
  auto n82 = gate_and(a[0], b[5]);
  auto n80 = gate_and(b[3], a[2]);
  auto n15 = gate_nand(n80, n79);
  auto n49 = gate_xor(n82, n80);
  auto n59 = gate_xor(n79, n49);
  auto n16 = gate_nand(n59, n58);
  auto n60 = gate_xor(n58, n59);
  auto n10 = gate_nand(n61, n60);
  auto n72 = gate_xor(n61, n60);
  auto n76 = gate_and(n11, n12);
  auto n75 = gate_and(n17, n13);
  auto n5 = gate_nand(n76, n75);
  auto n74 = gate_xor(n76, n75);
  y[5] = gate_xor(n72, n74);
  auto n100 = gate_and(n16, n10);
  auto n67 = gate_not(n62);
  auto n3 = gate_nand(n63, n67);
  auto n4 = gate_nand(n68, n67);
  auto n66 = gate_and(n64, n3);
  auto n71 = gate_xor(n66, n65);
  auto n70 = gate_and(n69, n4);
  auto n98 = gate_or(n71, n70);
  auto n73 = gate_not(n72);
  auto n7 = gate_nand(n74, n73);
  auto n96 = gate_and(n7, n5);
  auto n78 = gate_and(b[6], a[0]);
  auto n77 = gate_and(a[6], b[0]);
  auto n94 = gate_xor(n78, n77);
  auto n81 = gate_or(n80, n79);
  auto n14 = gate_nand(n82, n81);
  auto n92 = gate_and(n15, n14);
  auto n90 = gate_and(b[3], a[3]);
  auto n84 = gate_and(b[5], a[1]);
  auto n83 = gate_and(b[2], a[4]);
  auto n88 = gate_xor(n84, n83);
  auto n86 = gate_and(a[2], b[4]);
  auto n85 = gate_and(a[5], b[1]);
  auto n87 = gate_xor(n86, n85);
  auto n89 = gate_xor(n88, n87);
  auto n91 = gate_xor(n90, n89);
  auto n93 = gate_xor(n92, n91);
  auto n95 = gate_xor(n94, n93);
  auto n97 = gate_xor(n96, n95);
  auto n99 = gate_xor(n98, n97);
  y[6] = gate_xor(n100, n99);
}
template<> void $NameUint<7>::d_redand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n7 = gate_and(a[2], a[4]);
  auto n6 = gate_and(a[3], a[1]);
  auto n8 = gate_and(n7, n6);
  auto n10 = gate_and(n8, a[6]);
  auto n9 = gate_and(a[0], a[5]);
  y[0] = gate_and(n10, n9);
}
template<> void $NameUint<7>::d_rednand
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n10 = gate_and(a[2], a[4]);
  auto n12 = gate_and(a[0], a[5]);
  auto n9 = gate_and(a[3], a[1]);
  auto n11 = gate_and(n10, n9);
  auto n13 = gate_and(n11, a[6]);
  y[0] = gate_nand(n13, n12);
}
template<> void $NameUint<7>::d_rednor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n15 = gate_not(a[5]);
  auto n14 = gate_not(a[6]);
  auto n19 = gate_and(n15, n14);
  auto n17 = gate_not(a[0]);
  auto n16 = gate_not(a[3]);
  auto n18 = gate_and(n17, n16);
  auto n21 = gate_and(n19, n18);
  auto n20 = gate_not(a[1]);
  auto n25 = gate_and(n21, n20);
  auto n23 = gate_not(a[2]);
  auto n22 = gate_not(a[4]);
  auto n24 = gate_and(n23, n22);
  y[0] = gate_and(n25, n24);
}
template<> void $NameUint<7>::d_redor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n16 = gate_not(a[5]);
  auto n15 = gate_not(a[6]);
  auto n20 = gate_and(n16, n15);
  auto n18 = gate_not(a[0]);
  auto n17 = gate_not(a[3]);
  auto n19 = gate_and(n18, n17);
  auto n22 = gate_and(n20, n19);
  auto n21 = gate_not(a[1]);
  auto n26 = gate_and(n22, n21);
  auto n24 = gate_not(a[2]);
  auto n23 = gate_not(a[4]);
  auto n25 = gate_and(n24, n23);
  y[0] = gate_nand(n26, n25);
}
template<> void $NameUint<7>::d_redxnor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n10 = gate_xor(a[1], a[6]);
  auto n9 = gate_xor(a[3], a[2]);
  auto n8 = gate_xnor(n10, n9);
  auto n12 = gate_xor(n8, a[4]);
  auto n11 = gate_xor(a[0], a[5]);
  y[0] = gate_xor(n12, n11);
}
template<> void $NameUint<7>::d_redxor
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  auto n7 = gate_xor(a[1], a[6]);
  auto n6 = gate_xor(a[3], a[2]);
  auto n8 = gate_xor(n7, n6);
  auto n10 = gate_xor(n8, a[4]);
  auto n9 = gate_xor(a[0], a[5]);
  y[0] = gate_xor(n10, n9);
}
template<> void $NameUint<7>::d_sll
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n38 = gate_not(b[4]);
  auto n37 = gate_not(b[3]);
  auto n42 = gate_and(n38, n37);
  auto n40 = gate_not(b[6]);
  auto n39 = gate_not(b[5]);
  auto n41 = gate_and(n40, n39);
  auto n45 = gate_and(n42, n41);
  auto n43 = gate_not(b[2]);
  auto n66 = gate_and(n45, n43);
  auto n57 = gate_not(b[0]);
  auto n68 = gate_and(n66, n57);
  auto n44 = gate_mux(a[6], a[4], b[1]);
  auto n49 = gate_and(n68, n44);
  auto n60 = gate_mux(a[2], a[0], b[1]);
  auto n50 = gate_not(b[1]);
  auto n51 = gate_and(a[1], n50);
  auto n64 = gate_mux(n60, n51, b[0]);
  auto n55 = gate_and(b[2], n45);
  auto n47 = gate_and(n64, n55);
  auto n61 = gate_and(b[0], n66);
  auto n52 = gate_mux(a[5], a[3], b[1]);
  auto n29 = gate_nand(n68, n52);
  auto n46 = gate_and(n61, n52);
  auto n48 = gate_or(n47, n46);
  y[6] = gate_or(n49, n48);
  auto n67 = gate_and(a[0], n50);
  y[0] = gate_and(n68, n67);
  auto n65 = gate_mux(n51, n67, b[0]);
  auto n32 = gate_nand(n55, n65);
  auto n54 = gate_mux(a[4], a[2], b[1]);
  auto n35 = gate_nand(n68, n54);
  auto n36 = gate_nand(n61, n54);
  auto n53 = gate_and(n32, n36);
  y[5] = gate_nand(n53, n29);
  auto n59 = gate_mux(a[3], a[1], b[1]);
  auto n34 = gate_nand(n61, n59);
  auto n58 = gate_and(n34, n35);
  auto n56 = gate_and(n67, n55);
  auto n33 = gate_nand(n57, n56);
  y[4] = gate_nand(n58, n33);
  auto n63 = gate_and(n68, n59);
  auto n62 = gate_and(n61, n60);
  y[3] = gate_or(n63, n62);
  y[2] = gate_and(n66, n64);
  y[1] = gate_and(n66, n65);
}
template<> void $NameUint<7>::d_slr
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  auto n38 = gate_not(b[4]);
  auto n67 = gate_mux(a[0], a[2], b[1]);
  auto n37 = gate_not(b[3]);
  auto n42 = gate_and(n38, n37);
  auto n40 = gate_not(b[6]);
  auto n39 = gate_not(b[5]);
  auto n41 = gate_and(n40, n39);
  auto n50 = gate_and(n42, n41);
  auto n43 = gate_not(b[2]);
  auto n46 = gate_and(n50, n43);
  auto n53 = gate_not(b[0]);
  auto n66 = gate_and(n46, n53);
  auto n31 = gate_nand(n67, n66);
  auto n44 = gate_not(b[1]);
  auto n51 = gate_and(a[6], n44);
  y[6] = gate_and(n66, n51);
  auto n45 = gate_and(a[5], n44);
  auto n60 = gate_mux(n45, n51, b[0]);
  y[5] = gate_and(n46, n60);
  auto n47 = gate_mux(a[4], a[6], b[1]);
  auto n65 = gate_mux(n47, n45, b[0]);
  y[4] = gate_and(n46, n65);
  auto n54 = gate_mux(a[3], a[5], b[1]);
  auto n49 = gate_and(n66, n54);
  auto n63 = gate_and(b[0], n46);
  auto n48 = gate_and(n63, n47);
  y[3] = gate_or(n49, n48);
  auto n64 = gate_and(b[2], n50);
  auto n35 = gate_nand(n65, n64);
  auto n36 = gate_nand(n64, n60);
  auto n52 = gate_and(n51, n64);
  auto n58 = gate_and(n53, n52);
  auto n59 = gate_mux(a[2], a[4], b[1]);
  auto n29 = gate_nand(n63, n59);
  auto n56 = gate_and(n66, n59);
  auto n55 = gate_and(n63, n54);
  auto n57 = gate_or(n56, n55);
  y[2] = gate_or(n58, n57);
  auto n61 = gate_and(n29, n36);
  auto n62 = gate_mux(a[1], a[3], b[1]);
  auto n33 = gate_nand(n63, n62);
  auto n34 = gate_nand(n66, n62);
  y[1] = gate_nand(n61, n34);
  auto n68 = gate_and(n33, n35);
  y[0] = gate_nand(n68, n31);
}
template<> void $NameUint<7>::d_srasig
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[6] = gate_buf(a[6]);
  auto n38 = gate_not(b[4]);
  auto n37 = gate_not(b[3]);
  auto n42 = gate_and(n38, n37);
  auto n40 = gate_not(b[6]);
  auto n39 = gate_not(b[5]);
  auto n41 = gate_and(n40, n39);
  auto n60 = gate_and(n42, n41);
  auto n43 = gate_not(b[2]);
  auto n67 = gate_and(n60, n43);
  auto n44 = gate_not(n67);
  auto n36 = gate_nand(y[6], n44);
  auto n63 = gate_not(b[0]);
  auto n62 = gate_not(b[1]);
  auto n45 = gate_and(n63, n62);
  auto n53 = gate_mux(y[6], a[5], n45);
  auto n35 = gate_nand(n67, n53);
  y[5] = gate_nand(n36, n35);
  auto n46 = gate_mux(a[5], a[4], n63);
  auto n59 = gate_mux(y[6], n46, n62);
  auto n34 = gate_nand(n67, n59);
  y[4] = gate_nand(n36, n34);
  auto n47 = gate_and(a[4], n62);
  auto n51 = gate_mux(a[5], a[3], n62);
  auto n48 = gate_mux(n47, n51, n63);
  auto n32 = gate_nand(n67, n48);
  auto n50 = gate_and(n36, n32);
  auto n49 = gate_and(b[1], y[6]);
  auto n33 = gate_nand(n49, b[0]);
  y[3] = gate_nand(n50, n33);
  auto n55 = gate_mux(a[4], a[2], n62);
  auto n52 = gate_mux(n51, n55, n63);
  auto n31 = gate_nand(n67, n52);
  y[2] = gate_nand(n36, n31);
  auto n54 = gate_and(b[2], n53);
  auto n58 = gate_mux(y[6], n54, n60);
  auto n65 = gate_mux(a[3], a[1], n62);
  auto n56 = gate_mux(n55, n65, n63);
  auto n57 = gate_and(n67, n56);
  y[1] = gate_or(n58, n57);
  auto n61 = gate_and(b[2], n59);
  auto n69 = gate_mux(y[6], n61, n60);
  auto n64 = gate_mux(a[2], a[0], n62);
  auto n66 = gate_mux(n65, n64, n63);
  auto n68 = gate_and(n67, n66);
  y[0] = gate_or(n69, n68);
}
template<> void $NameUint<7>::d_sub
(vector<Bit> & y, const vector<Bit> & a, const vector<Bit> & b) noexcept
{
  y[0] = gate_xor(a[0], b[0]);
  auto n6 = gate_not(b[1]);
  auto n7 = gate_xor(a[1], n6);
  auto n5 = gate_not(a[0]);
  auto n2 = gate_nand(b[0], n5);
  y[1] = gate_xor(n7, n2);
  auto n10 = gate_not(b[2]);
  auto n12 = gate_xor(a[2], n10);
  auto n9 = gate_and(a[1], n6);
  auto n8 = gate_and(n7, n2);
  auto n11 = gate_or(n9, n8);
  y[2] = gate_xor(n12, n11);
  auto n15 = gate_not(b[3]);
  auto n17 = gate_xor(a[3], n15);
  auto n14 = gate_and(a[2], n10);
  auto n13 = gate_and(n12, n11);
  auto n16 = gate_or(n14, n13);
  y[3] = gate_xor(n17, n16);
  auto n20 = gate_not(b[4]);
  auto n22 = gate_xor(a[4], n20);
  auto n19 = gate_and(a[3], n15);
  auto n18 = gate_and(n17, n16);
  auto n21 = gate_or(n19, n18);
  y[4] = gate_xor(n22, n21);
  auto n27 = gate_not(b[5]);
  auto n3 = gate_nand(a[5], n27);
  auto n26 = gate_xor(a[5], n27);
  auto n24 = gate_and(a[4], n20);
  auto n23 = gate_and(n22, n21);
  auto n25 = gate_or(n24, n23);
  auto n4 = gate_nand(n26, n25);
  y[5] = gate_xor(n26, n25);
  auto n29 = gate_and(n4, n3);
  auto n28 = gate_xor(a[6], b[6]);
  y[6] = gate_xor(n29, n28);
}
template<> void $NameUint<7>::d_uminus
(vector<Bit> & y, const vector<Bit> & a) noexcept
{
  y[0] = gate_buf(a[0]);
  auto n16 = gate_not(a[6]);
  auto n14 = gate_not(y[0]);
  auto n13 = gate_not(a[1]);
  auto n24 = gate_and(n14, n13);
  auto n23 = gate_not(a[2]);
  auto n22 = gate_and(n24, n23);
  auto n21 = gate_not(a[3]);
  auto n20 = gate_and(n22, n21);
  auto n19 = gate_not(a[4]);
  auto n18 = gate_and(n20, n19);
  auto n17 = gate_not(a[5]);
  auto n15 = gate_and(n18, n17);
  y[6] = gate_xor(n16, n15);
  y[5] = gate_xor(n18, n17);
  y[4] = gate_xor(n20, n19);
  y[3] = gate_xor(n22, n21);
  y[2] = gate_xor(n24, n23);
  y[1] = gate_xor(y[0], a[1]);
}
