
[-cg a.cr]
reading [a.cr]
Verilog written

=== start a.cr.v
// # Generated by Circle

module a_cr (
input wire w, y,
output wire a, z
);

assign fsa = 1;
assign a = w & fsa | !w & !fsa;
assign z = y;

endmodule

module a_cr_array (a,z);
input [1:0] a;
output [1:0] z;
a_cr a_cr1(a[0],a[1],z[0],z[1]);
endmodule
=== end a.cr.v

[-cg@ x.cr]
reading [x.cr]
Verilog written

=== start x.cr.v
// # Generated by Circle

module x_cr (
input wire a,
output wire y
);

wire x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10,
   x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22,
   x23;

assign x0 = a;
assign x1 = x0;
assign x2 = x1;
assign x3 = x2;
assign x4 = x3;
assign x5 = x4;
assign x6 = x5;
assign x7 = x6;
assign x8 = x7;
assign x9 = x8;
assign x10 = x9;
assign x11 = x10;
assign x12 = x11;
assign x13 = x12;
assign x14 = x13;
assign x15 = x14;
assign x16 = x15;
assign x17 = x16;
assign x18 = x17;
assign x19 = x18;
assign x20 = x19;
assign x21 = x20;
assign x22 = x21;
assign x23 = x22;
assign y = x23;

endmodule

module x_cr_array (a,z);
input [0:0] a;
output [0:0] z;
x_cr x_cr1(a[0],z[0]);
endmodule
=== end x.cr.v
