
[-cn c.cir]
reading [c.cir]
circle written

[-cm c.cir.out]
reading [c.cir.out]
circle written

[-cv c.cir.out.out]
reading [c.cir.out.out]
circle written

[-ct c.cir]
reading [c.cir]
truth table written

[-ct c.cir.out.out.out]
reading [c.cir.out.out.out]
truth table written
CMP OK

=== start c.cir.out
# clean vars
# Generated by Circle

# inputs: a b x
z = a | b
c = x & x
e = c | c
y0 = e | !e
d = z
f = d
y1 = f
# outputs: y0 y1
=== end c.cir.out

=== start c.cir.out.out
# simplify
# Generated by Circle

# inputs: a b x
c = x & x
e = c | c
y0 = e | !e
y1 = a | b
# outputs: y0 y1
=== end c.cir.out.out

=== start c.cir.out.out.out
# rename vars
# Generated by Circle

# inputs: x0 x1 x2
a = x2 & x2
b = a | a
y0 = b | !b
y1 = x0 | x1
# outputs: y0 y1
=== end c.cir.out.out.out

=== start c.cir.ttb
000 10
100 11
010 11
110 11
001 10
101 11
011 11
111 11
=== end c.cir.ttb

=== start c.cir.out.out.out.ttb
000 10
100 11
010 11
110 11
001 10
101 11
011 11
111 11
=== end c.cir.out.out.out.ttb
